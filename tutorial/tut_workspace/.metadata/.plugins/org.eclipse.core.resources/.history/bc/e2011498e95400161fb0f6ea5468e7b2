// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _madd_HH_
#define _madd_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "madd_fadd_32ns_32ns_32_9_full_dsp.h"

namespace ap_rtl {

struct madd : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > A_Addr_A;
    sc_out< sc_logic > A_EN_A;
    sc_out< sc_lv<4> > A_WEN_A;
    sc_out< sc_lv<32> > A_Din_A;
    sc_in< sc_lv<32> > A_Dout_A;
    sc_out< sc_logic > A_Clk_A;
    sc_out< sc_logic > A_Rst_A;
    sc_out< sc_lv<32> > B_Addr_A;
    sc_out< sc_logic > B_EN_A;
    sc_out< sc_lv<4> > B_WEN_A;
    sc_out< sc_lv<32> > B_Din_A;
    sc_in< sc_lv<32> > B_Dout_A;
    sc_out< sc_logic > B_Clk_A;
    sc_out< sc_logic > B_Rst_A;
    sc_out< sc_lv<32> > C_Addr_A;
    sc_out< sc_logic > C_EN_A;
    sc_out< sc_lv<4> > C_WEN_A;
    sc_out< sc_lv<32> > C_Din_A;
    sc_in< sc_lv<32> > C_Dout_A;
    sc_out< sc_logic > C_Clk_A;
    sc_out< sc_logic > C_Rst_A;


    // Module declarations
    madd(sc_module_name name);
    SC_HAS_PROCESS(madd);

    ~madd();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    madd_fadd_32ns_32ns_32_9_full_dsp<1,9,32,32,32>* madd_fadd_32ns_32ns_32_9_full_dsp_U1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<11> > indvar_flatten_reg_102;
    sc_signal< sc_lv<6> > i_reg_113;
    sc_signal< sc_lv<6> > j_reg_124;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_140_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_213;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_68;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it7;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it8;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it9;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it10;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it11;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it12;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it5;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it6;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it7;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it8;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it9;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it10;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_213_pp0_it11;
    sc_signal< sc_lv<11> > indvar_flatten_next_fu_146_p2;
    sc_signal< sc_lv<6> > i_mid2_fu_172_p3;
    sc_signal< sc_lv<6> > i_mid2_reg_222;
    sc_signal< sc_lv<10> > tmp_2_fu_196_p2;
    sc_signal< sc_lv<10> > tmp_2_reg_227;
    sc_signal< sc_lv<6> > j_1_fu_202_p2;
    sc_signal< sc_lv<64> > tmp_3_fu_208_p1;
    sc_signal< sc_lv<64> > tmp_3_reg_237;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it2;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it3;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it4;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it5;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it6;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it7;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it8;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it9;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it10;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_3_reg_237_pp0_it11;
    sc_signal< sc_lv<32> > A_load_reg_252;
    sc_signal< sc_lv<32> > B_load_reg_257;
    sc_signal< sc_lv<32> > grp_fu_136_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_262;
    sc_signal< sc_lv<6> > i_phi_fu_117_p4;
    sc_signal< sc_lv<32> > A_Addr_A_orig;
    sc_signal< sc_lv<32> > B_Addr_A_orig;
    sc_signal< sc_lv<32> > C_Addr_A_orig;
    sc_signal< sc_lv<32> > grp_fu_136_p0;
    sc_signal< sc_lv<32> > grp_fu_136_p1;
    sc_signal< sc_lv<1> > exitcond4_fu_152_p2;
    sc_signal< sc_lv<6> > i_s_fu_166_p2;
    sc_signal< sc_lv<5> > tmp_5_fu_180_p1;
    sc_signal< sc_lv<6> > j_mid2_fu_158_p3;
    sc_signal< sc_lv<10> > j_cast1_fu_192_p1;
    sc_signal< sc_lv<10> > tmp_fu_184_p3;
    sc_signal< sc_logic > grp_fu_136_ce;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_2;
    sc_signal< bool > ap_sig_bdd_245;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st15_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_Addr_A();
    void thread_A_Addr_A_orig();
    void thread_A_Clk_A();
    void thread_A_Din_A();
    void thread_A_EN_A();
    void thread_A_Rst_A();
    void thread_A_WEN_A();
    void thread_B_Addr_A();
    void thread_B_Addr_A_orig();
    void thread_B_Clk_A();
    void thread_B_Din_A();
    void thread_B_EN_A();
    void thread_B_Rst_A();
    void thread_B_WEN_A();
    void thread_C_Addr_A();
    void thread_C_Addr_A_orig();
    void thread_C_Clk_A();
    void thread_C_Din_A();
    void thread_C_EN_A();
    void thread_C_Rst_A();
    void thread_C_WEN_A();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_245();
    void thread_ap_sig_bdd_68();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st15_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_exitcond4_fu_152_p2();
    void thread_exitcond_flatten_fu_140_p2();
    void thread_grp_fu_136_ce();
    void thread_grp_fu_136_p0();
    void thread_grp_fu_136_p1();
    void thread_i_mid2_fu_172_p3();
    void thread_i_phi_fu_117_p4();
    void thread_i_s_fu_166_p2();
    void thread_indvar_flatten_next_fu_146_p2();
    void thread_j_1_fu_202_p2();
    void thread_j_cast1_fu_192_p1();
    void thread_j_mid2_fu_158_p3();
    void thread_tmp_2_fu_196_p2();
    void thread_tmp_3_fu_208_p1();
    void thread_tmp_5_fu_180_p1();
    void thread_tmp_fu_184_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
