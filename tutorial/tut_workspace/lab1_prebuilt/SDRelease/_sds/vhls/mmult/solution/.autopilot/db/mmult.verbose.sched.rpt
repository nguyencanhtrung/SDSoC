

================================================================
== Vivado HLS Report for 'mmult'
================================================================
* Date:           Thu Feb 05 13:11:15 2015

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        mmult
* Solution:       solution
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   8.50|      7.26|        1.06|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3241|  3241|  3242|  3242|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  1024|  1024|         2|          1|          1|  1024|    yes   |
        |- Loop 2  |  1024|  1024|         2|          1|          1|  1024|    yes   |
        |- Loop 3  |  1189|  1189|       167|          1|          1|  1024|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 167


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 173
* Pipeline: 3
  Pipeline-0: II = 1, D = 2, States = { 2 3 }
  Pipeline-1: II = 1, D = 2, States = { 4 5 }
  Pipeline-2: II = 1, D = 167, States = {}
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	2  / true
4 --> 
	6  / (exitcond_flatten8)
	5  / (!exitcond_flatten8)
5 --> 
	4  / true
6 --> 
	173  / (exitcond_flatten1)
	7  / (!exitcond_flatten1)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	163  / true
163 --> 
	164  / true
164 --> 
	165  / true
165 --> 
	166  / true
166 --> 
	167  / true
167 --> 
	168  / true
168 --> 
	169  / true
169 --> 
	170  / true
170 --> 
	171  / true
171 --> 
	172  / true
172 --> 
	6  / true
173 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_174 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(float* %in_A), !map !0

ST_1: stg_175 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(float* %in_B), !map !6

ST_1: stg_176 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(float* %out_C), !map !10

ST_1: stg_177 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @str) nounwind

ST_1: a_buf_0 [1/1] 0.00ns
:4  %a_buf_0 = alloca [64 x float], align 4

ST_1: a_buf_1 [1/1] 0.00ns
:5  %a_buf_1 = alloca [64 x float], align 4

ST_1: a_buf_2 [1/1] 0.00ns
:6  %a_buf_2 = alloca [64 x float], align 4

ST_1: a_buf_3 [1/1] 0.00ns
:7  %a_buf_3 = alloca [64 x float], align 4

ST_1: a_buf_4 [1/1] 0.00ns
:8  %a_buf_4 = alloca [64 x float], align 4

ST_1: a_buf_5 [1/1] 0.00ns
:9  %a_buf_5 = alloca [64 x float], align 4

ST_1: a_buf_6 [1/1] 0.00ns
:10  %a_buf_6 = alloca [64 x float], align 4

ST_1: a_buf_7 [1/1] 0.00ns
:11  %a_buf_7 = alloca [64 x float], align 4

ST_1: a_buf_8 [1/1] 0.00ns
:12  %a_buf_8 = alloca [64 x float], align 4

ST_1: a_buf_9 [1/1] 0.00ns
:13  %a_buf_9 = alloca [64 x float], align 4

ST_1: a_buf_10 [1/1] 0.00ns
:14  %a_buf_10 = alloca [64 x float], align 4

ST_1: a_buf_11 [1/1] 0.00ns
:15  %a_buf_11 = alloca [64 x float], align 4

ST_1: a_buf_12 [1/1] 0.00ns
:16  %a_buf_12 = alloca [64 x float], align 4

ST_1: a_buf_13 [1/1] 0.00ns
:17  %a_buf_13 = alloca [64 x float], align 4

ST_1: a_buf_14 [1/1] 0.00ns
:18  %a_buf_14 = alloca [64 x float], align 4

ST_1: a_buf_15 [1/1] 0.00ns
:19  %a_buf_15 = alloca [64 x float], align 4

ST_1: b_buf_0 [1/1] 0.00ns
:20  %b_buf_0 = alloca [64 x float], align 4

ST_1: b_buf_1 [1/1] 0.00ns
:21  %b_buf_1 = alloca [64 x float], align 4

ST_1: b_buf_2 [1/1] 0.00ns
:22  %b_buf_2 = alloca [64 x float], align 4

ST_1: b_buf_3 [1/1] 0.00ns
:23  %b_buf_3 = alloca [64 x float], align 4

ST_1: b_buf_4 [1/1] 0.00ns
:24  %b_buf_4 = alloca [64 x float], align 4

ST_1: b_buf_5 [1/1] 0.00ns
:25  %b_buf_5 = alloca [64 x float], align 4

ST_1: b_buf_6 [1/1] 0.00ns
:26  %b_buf_6 = alloca [64 x float], align 4

ST_1: b_buf_7 [1/1] 0.00ns
:27  %b_buf_7 = alloca [64 x float], align 4

ST_1: b_buf_8 [1/1] 0.00ns
:28  %b_buf_8 = alloca [64 x float], align 4

ST_1: b_buf_9 [1/1] 0.00ns
:29  %b_buf_9 = alloca [64 x float], align 4

ST_1: b_buf_10 [1/1] 0.00ns
:30  %b_buf_10 = alloca [64 x float], align 4

ST_1: b_buf_11 [1/1] 0.00ns
:31  %b_buf_11 = alloca [64 x float], align 4

ST_1: b_buf_12 [1/1] 0.00ns
:32  %b_buf_12 = alloca [64 x float], align 4

ST_1: b_buf_13 [1/1] 0.00ns
:33  %b_buf_13 = alloca [64 x float], align 4

ST_1: b_buf_14 [1/1] 0.00ns
:34  %b_buf_14 = alloca [64 x float], align 4

ST_1: b_buf_15 [1/1] 0.00ns
:35  %b_buf_15 = alloca [64 x float], align 4

ST_1: stg_210 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecLatency(i32 1, i32 65535, [1 x i8]* @p_str) nounwind

ST_1: stg_211 [1/1] 0.00ns
:37  call void (...)* @_ssdm_op_SpecInterface(float* %in_A, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_212 [1/1] 0.00ns
:38  call void (...)* @_ssdm_op_SpecInterface(float* %in_B, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_213 [1/1] 0.00ns
:39  call void (...)* @_ssdm_op_SpecInterface(float* %out_C, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_214 [1/1] 1.57ns
:40  br label %.preheader5


 <State 2>: 5.25ns
ST_2: indvar_flatten [1/1] 0.00ns
.preheader5:0  %indvar_flatten = phi i11 [ 0, %0 ], [ %indvar_flatten_next, %1 ]

ST_2: i [1/1] 0.00ns
.preheader5:1  %i = phi i6 [ 0, %0 ], [ %i_mid2, %1 ]

ST_2: j [1/1] 0.00ns
.preheader5:2  %j = phi i6 [ 0, %0 ], [ %j_2, %1 ]

ST_2: exitcond_flatten [1/1] 2.11ns
.preheader5:3  %exitcond_flatten = icmp eq i11 %indvar_flatten, -1024

ST_2: indvar_flatten_next [1/1] 1.84ns
.preheader5:4  %indvar_flatten_next = add i11 %indvar_flatten, 1

ST_2: stg_220 [1/1] 1.57ns
.preheader5:5  br i1 %exitcond_flatten, label %.preheader, label %.preheader5.preheader

ST_2: exitcond [1/1] 1.94ns
.preheader5.preheader:1  %exitcond = icmp eq i6 %j, -32

ST_2: j_mid2 [1/1] 1.37ns
.preheader5.preheader:2  %j_mid2 = select i1 %exitcond, i6 0, i6 %j

ST_2: i_s [1/1] 1.72ns
.preheader5.preheader:3  %i_s = add i6 %i, 1

ST_2: i_mid2 [1/1] 1.37ns
.preheader5.preheader:4  %i_mid2 = select i1 %exitcond, i6 %i_s, i6 %i

ST_2: tmp_3 [1/1] 0.00ns
.preheader5.preheader:5  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_2: arrayNo_cast [1/1] 0.00ns
.preheader5.preheader:8  %arrayNo_cast = call i5 @_ssdm_op_PartSelect.i5.i6.i32.i32(i6 %j_mid2, i32 1, i32 5)

ST_2: tmp_4 [1/1] 0.00ns
.preheader5.preheader:9  %tmp_4 = trunc i6 %j_mid2 to i1

ST_2: stg_228 [1/1] 1.94ns
.preheader5.preheader:28  switch i5 %arrayNo_cast, label %branch15 [
    i5 0, label %branch0
    i5 1, label %branch1
    i5 2, label %branch2
    i5 3, label %branch3
    i5 4, label %branch4
    i5 5, label %branch5
    i5 6, label %branch6
    i5 7, label %branch7
    i5 8, label %branch8
    i5 9, label %branch9
    i5 10, label %branch10
    i5 11, label %branch11
    i5 12, label %branch12
    i5 13, label %branch13
    i5 14, label %branch14
  ]

ST_2: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_3) nounwind

ST_2: j_2 [1/1] 1.72ns
:1  %j_2 = add i6 %j_mid2, 1

ST_2: stg_231 [1/1] 0.00ns
:2  br label %.preheader5


 <State 3>: 4.25ns
ST_3: empty_6 [1/1] 0.00ns
.preheader5.preheader:0  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_3: stg_233 [1/1] 0.00ns
.preheader5.preheader:6  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: in_A_read [1/1] 1.86ns
.preheader5.preheader:7  %in_A_read = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %in_A)

ST_3: tmp [1/1] 0.00ns
.preheader5.preheader:10  %tmp = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %i_mid2, i1 %tmp_4)

ST_3: tmp_1 [1/1] 0.00ns
.preheader5.preheader:11  %tmp_1 = zext i7 %tmp to i64

ST_3: a_buf_0_addr [1/1] 0.00ns
.preheader5.preheader:12  %a_buf_0_addr = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_1

ST_3: a_buf_1_addr [1/1] 0.00ns
.preheader5.preheader:13  %a_buf_1_addr = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_1

ST_3: a_buf_2_addr [1/1] 0.00ns
.preheader5.preheader:14  %a_buf_2_addr = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_1

ST_3: a_buf_3_addr [1/1] 0.00ns
.preheader5.preheader:15  %a_buf_3_addr = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_1

ST_3: a_buf_4_addr [1/1] 0.00ns
.preheader5.preheader:16  %a_buf_4_addr = getelementptr [64 x float]* %a_buf_4, i64 0, i64 %tmp_1

ST_3: a_buf_5_addr [1/1] 0.00ns
.preheader5.preheader:17  %a_buf_5_addr = getelementptr [64 x float]* %a_buf_5, i64 0, i64 %tmp_1

ST_3: a_buf_6_addr [1/1] 0.00ns
.preheader5.preheader:18  %a_buf_6_addr = getelementptr [64 x float]* %a_buf_6, i64 0, i64 %tmp_1

ST_3: a_buf_7_addr [1/1] 0.00ns
.preheader5.preheader:19  %a_buf_7_addr = getelementptr [64 x float]* %a_buf_7, i64 0, i64 %tmp_1

ST_3: a_buf_8_addr [1/1] 0.00ns
.preheader5.preheader:20  %a_buf_8_addr = getelementptr [64 x float]* %a_buf_8, i64 0, i64 %tmp_1

ST_3: a_buf_9_addr [1/1] 0.00ns
.preheader5.preheader:21  %a_buf_9_addr = getelementptr [64 x float]* %a_buf_9, i64 0, i64 %tmp_1

ST_3: a_buf_10_addr [1/1] 0.00ns
.preheader5.preheader:22  %a_buf_10_addr = getelementptr [64 x float]* %a_buf_10, i64 0, i64 %tmp_1

ST_3: a_buf_11_addr [1/1] 0.00ns
.preheader5.preheader:23  %a_buf_11_addr = getelementptr [64 x float]* %a_buf_11, i64 0, i64 %tmp_1

ST_3: a_buf_12_addr [1/1] 0.00ns
.preheader5.preheader:24  %a_buf_12_addr = getelementptr [64 x float]* %a_buf_12, i64 0, i64 %tmp_1

ST_3: a_buf_13_addr [1/1] 0.00ns
.preheader5.preheader:25  %a_buf_13_addr = getelementptr [64 x float]* %a_buf_13, i64 0, i64 %tmp_1

ST_3: a_buf_14_addr [1/1] 0.00ns
.preheader5.preheader:26  %a_buf_14_addr = getelementptr [64 x float]* %a_buf_14, i64 0, i64 %tmp_1

ST_3: a_buf_15_addr [1/1] 0.00ns
.preheader5.preheader:27  %a_buf_15_addr = getelementptr [64 x float]* %a_buf_15, i64 0, i64 %tmp_1

ST_3: stg_253 [1/1] 2.39ns
branch14:0  store float %in_A_read, float* %a_buf_14_addr, align 4

ST_3: stg_254 [1/1] 0.00ns
branch14:1  br label %1

ST_3: stg_255 [1/1] 2.39ns
branch13:0  store float %in_A_read, float* %a_buf_13_addr, align 4

ST_3: stg_256 [1/1] 0.00ns
branch13:1  br label %1

ST_3: stg_257 [1/1] 2.39ns
branch12:0  store float %in_A_read, float* %a_buf_12_addr, align 4

ST_3: stg_258 [1/1] 0.00ns
branch12:1  br label %1

ST_3: stg_259 [1/1] 2.39ns
branch11:0  store float %in_A_read, float* %a_buf_11_addr, align 4

ST_3: stg_260 [1/1] 0.00ns
branch11:1  br label %1

ST_3: stg_261 [1/1] 2.39ns
branch10:0  store float %in_A_read, float* %a_buf_10_addr, align 4

ST_3: stg_262 [1/1] 0.00ns
branch10:1  br label %1

ST_3: stg_263 [1/1] 2.39ns
branch9:0  store float %in_A_read, float* %a_buf_9_addr, align 4

ST_3: stg_264 [1/1] 0.00ns
branch9:1  br label %1

ST_3: stg_265 [1/1] 2.39ns
branch8:0  store float %in_A_read, float* %a_buf_8_addr, align 4

ST_3: stg_266 [1/1] 0.00ns
branch8:1  br label %1

ST_3: stg_267 [1/1] 2.39ns
branch7:0  store float %in_A_read, float* %a_buf_7_addr, align 4

ST_3: stg_268 [1/1] 0.00ns
branch7:1  br label %1

ST_3: stg_269 [1/1] 2.39ns
branch6:0  store float %in_A_read, float* %a_buf_6_addr, align 4

ST_3: stg_270 [1/1] 0.00ns
branch6:1  br label %1

ST_3: stg_271 [1/1] 2.39ns
branch5:0  store float %in_A_read, float* %a_buf_5_addr, align 4

ST_3: stg_272 [1/1] 0.00ns
branch5:1  br label %1

ST_3: stg_273 [1/1] 2.39ns
branch4:0  store float %in_A_read, float* %a_buf_4_addr, align 4

ST_3: stg_274 [1/1] 0.00ns
branch4:1  br label %1

ST_3: stg_275 [1/1] 2.39ns
branch3:0  store float %in_A_read, float* %a_buf_3_addr, align 4

ST_3: stg_276 [1/1] 0.00ns
branch3:1  br label %1

ST_3: stg_277 [1/1] 2.39ns
branch2:0  store float %in_A_read, float* %a_buf_2_addr, align 4

ST_3: stg_278 [1/1] 0.00ns
branch2:1  br label %1

ST_3: stg_279 [1/1] 2.39ns
branch1:0  store float %in_A_read, float* %a_buf_1_addr, align 4

ST_3: stg_280 [1/1] 0.00ns
branch1:1  br label %1

ST_3: stg_281 [1/1] 2.39ns
branch0:0  store float %in_A_read, float* %a_buf_0_addr, align 4

ST_3: stg_282 [1/1] 0.00ns
branch0:1  br label %1

ST_3: stg_283 [1/1] 2.39ns
branch15:0  store float %in_A_read, float* %a_buf_15_addr, align 4

ST_3: stg_284 [1/1] 0.00ns
branch15:1  br label %1


 <State 4>: 5.25ns
ST_4: indvar_flatten6 [1/1] 0.00ns
.preheader:0  %indvar_flatten6 = phi i11 [ %indvar_flatten_next7, %2 ], [ 0, %.preheader5 ]

ST_4: i_1 [1/1] 0.00ns
.preheader:1  %i_1 = phi i6 [ %i_1_mid2, %2 ], [ 0, %.preheader5 ]

ST_4: j_1 [1/1] 0.00ns
.preheader:2  %j_1 = phi i6 [ %j_3, %2 ], [ 0, %.preheader5 ]

ST_4: exitcond_flatten8 [1/1] 2.11ns
.preheader:3  %exitcond_flatten8 = icmp eq i11 %indvar_flatten6, -1024

ST_4: indvar_flatten_next7 [1/1] 1.84ns
.preheader:4  %indvar_flatten_next7 = add i11 %indvar_flatten6, 1

ST_4: stg_290 [1/1] 1.57ns
.preheader:5  br i1 %exitcond_flatten8, label %.preheader.i, label %.preheader4

ST_4: exitcond1 [1/1] 1.94ns
.preheader4:1  %exitcond1 = icmp eq i6 %j_1, -32

ST_4: j_1_mid2 [1/1] 1.37ns
.preheader4:2  %j_1_mid2 = select i1 %exitcond1, i6 0, i6 %j_1

ST_4: i_2 [1/1] 1.72ns
.preheader4:3  %i_2 = add i6 %i_1, 1

ST_4: i_1_mid2 [1/1] 1.37ns
.preheader4:4  %i_1_mid2 = select i1 %exitcond1, i6 %i_2, i6 %i_1

ST_4: arrayNo1_cast [1/1] 0.00ns
.preheader4:5  %arrayNo1_cast = call i5 @_ssdm_op_PartSelect.i5.i6.i32.i32(i6 %i_1_mid2, i32 1, i32 5)

ST_4: tmp_7 [1/1] 0.00ns
.preheader4:6  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_4: tmp_trn_cast [1/1] 0.00ns
.preheader4:9  %tmp_trn_cast = zext i6 %j_1_mid2 to i7

ST_4: tmp_5 [1/1] 0.00ns
.preheader4:10  %tmp_5 = shl i6 %i_1_mid2, 5

ST_4: p_addr_cast [1/1] 0.00ns
.preheader4:11  %p_addr_cast = zext i6 %tmp_5 to i7

ST_4: p_addr1 [1/1] 1.72ns
.preheader4:12  %p_addr1 = add i7 %p_addr_cast, %tmp_trn_cast

ST_4: stg_301 [1/1] 1.94ns
.preheader4:30  switch i5 %arrayNo1_cast, label %branch31 [
    i5 0, label %branch16
    i5 1, label %branch17
    i5 2, label %branch18
    i5 3, label %branch19
    i5 4, label %branch20
    i5 5, label %branch21
    i5 6, label %branch22
    i5 7, label %branch23
    i5 8, label %branch24
    i5 9, label %branch25
    i5 10, label %branch26
    i5 11, label %branch27
    i5 12, label %branch28
    i5 13, label %branch29
    i5 14, label %branch30
  ]

ST_4: empty_7 [1/1] 0.00ns
:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_7) nounwind

ST_4: j_3 [1/1] 1.72ns
:1  %j_3 = add i6 %j_1_mid2, 1

ST_4: stg_304 [1/1] 0.00ns
:2  br label %.preheader


 <State 5>: 4.25ns
ST_5: empty_8 [1/1] 0.00ns
.preheader4:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_5: stg_306 [1/1] 0.00ns
.preheader4:7  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_5: in_B_read [1/1] 1.86ns
.preheader4:8  %in_B_read = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %in_B)

ST_5: tmp_6 [1/1] 0.00ns
.preheader4:13  %tmp_6 = zext i7 %p_addr1 to i64

ST_5: b_buf_0_addr [1/1] 0.00ns
.preheader4:14  %b_buf_0_addr = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_6

ST_5: b_buf_1_addr [1/1] 0.00ns
.preheader4:15  %b_buf_1_addr = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_6

ST_5: b_buf_2_addr [1/1] 0.00ns
.preheader4:16  %b_buf_2_addr = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_6

ST_5: b_buf_3_addr [1/1] 0.00ns
.preheader4:17  %b_buf_3_addr = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_6

ST_5: b_buf_4_addr [1/1] 0.00ns
.preheader4:18  %b_buf_4_addr = getelementptr [64 x float]* %b_buf_4, i64 0, i64 %tmp_6

ST_5: b_buf_5_addr [1/1] 0.00ns
.preheader4:19  %b_buf_5_addr = getelementptr [64 x float]* %b_buf_5, i64 0, i64 %tmp_6

ST_5: b_buf_6_addr [1/1] 0.00ns
.preheader4:20  %b_buf_6_addr = getelementptr [64 x float]* %b_buf_6, i64 0, i64 %tmp_6

ST_5: b_buf_7_addr [1/1] 0.00ns
.preheader4:21  %b_buf_7_addr = getelementptr [64 x float]* %b_buf_7, i64 0, i64 %tmp_6

ST_5: b_buf_8_addr [1/1] 0.00ns
.preheader4:22  %b_buf_8_addr = getelementptr [64 x float]* %b_buf_8, i64 0, i64 %tmp_6

ST_5: b_buf_9_addr [1/1] 0.00ns
.preheader4:23  %b_buf_9_addr = getelementptr [64 x float]* %b_buf_9, i64 0, i64 %tmp_6

ST_5: b_buf_10_addr [1/1] 0.00ns
.preheader4:24  %b_buf_10_addr = getelementptr [64 x float]* %b_buf_10, i64 0, i64 %tmp_6

ST_5: b_buf_11_addr [1/1] 0.00ns
.preheader4:25  %b_buf_11_addr = getelementptr [64 x float]* %b_buf_11, i64 0, i64 %tmp_6

ST_5: b_buf_12_addr [1/1] 0.00ns
.preheader4:26  %b_buf_12_addr = getelementptr [64 x float]* %b_buf_12, i64 0, i64 %tmp_6

ST_5: b_buf_13_addr [1/1] 0.00ns
.preheader4:27  %b_buf_13_addr = getelementptr [64 x float]* %b_buf_13, i64 0, i64 %tmp_6

ST_5: b_buf_14_addr [1/1] 0.00ns
.preheader4:28  %b_buf_14_addr = getelementptr [64 x float]* %b_buf_14, i64 0, i64 %tmp_6

ST_5: b_buf_15_addr [1/1] 0.00ns
.preheader4:29  %b_buf_15_addr = getelementptr [64 x float]* %b_buf_15, i64 0, i64 %tmp_6

ST_5: stg_325 [1/1] 2.39ns
branch30:0  store float %in_B_read, float* %b_buf_14_addr, align 4

ST_5: stg_326 [1/1] 0.00ns
branch30:1  br label %2

ST_5: stg_327 [1/1] 2.39ns
branch29:0  store float %in_B_read, float* %b_buf_13_addr, align 4

ST_5: stg_328 [1/1] 0.00ns
branch29:1  br label %2

ST_5: stg_329 [1/1] 2.39ns
branch28:0  store float %in_B_read, float* %b_buf_12_addr, align 4

ST_5: stg_330 [1/1] 0.00ns
branch28:1  br label %2

ST_5: stg_331 [1/1] 2.39ns
branch27:0  store float %in_B_read, float* %b_buf_11_addr, align 4

ST_5: stg_332 [1/1] 0.00ns
branch27:1  br label %2

ST_5: stg_333 [1/1] 2.39ns
branch26:0  store float %in_B_read, float* %b_buf_10_addr, align 4

ST_5: stg_334 [1/1] 0.00ns
branch26:1  br label %2

ST_5: stg_335 [1/1] 2.39ns
branch25:0  store float %in_B_read, float* %b_buf_9_addr, align 4

ST_5: stg_336 [1/1] 0.00ns
branch25:1  br label %2

ST_5: stg_337 [1/1] 2.39ns
branch24:0  store float %in_B_read, float* %b_buf_8_addr, align 4

ST_5: stg_338 [1/1] 0.00ns
branch24:1  br label %2

ST_5: stg_339 [1/1] 2.39ns
branch23:0  store float %in_B_read, float* %b_buf_7_addr, align 4

ST_5: stg_340 [1/1] 0.00ns
branch23:1  br label %2

ST_5: stg_341 [1/1] 2.39ns
branch22:0  store float %in_B_read, float* %b_buf_6_addr, align 4

ST_5: stg_342 [1/1] 0.00ns
branch22:1  br label %2

ST_5: stg_343 [1/1] 2.39ns
branch21:0  store float %in_B_read, float* %b_buf_5_addr, align 4

ST_5: stg_344 [1/1] 0.00ns
branch21:1  br label %2

ST_5: stg_345 [1/1] 2.39ns
branch20:0  store float %in_B_read, float* %b_buf_4_addr, align 4

ST_5: stg_346 [1/1] 0.00ns
branch20:1  br label %2

ST_5: stg_347 [1/1] 2.39ns
branch19:0  store float %in_B_read, float* %b_buf_3_addr, align 4

ST_5: stg_348 [1/1] 0.00ns
branch19:1  br label %2

ST_5: stg_349 [1/1] 2.39ns
branch18:0  store float %in_B_read, float* %b_buf_2_addr, align 4

ST_5: stg_350 [1/1] 0.00ns
branch18:1  br label %2

ST_5: stg_351 [1/1] 2.39ns
branch17:0  store float %in_B_read, float* %b_buf_1_addr, align 4

ST_5: stg_352 [1/1] 0.00ns
branch17:1  br label %2

ST_5: stg_353 [1/1] 2.39ns
branch16:0  store float %in_B_read, float* %b_buf_0_addr, align 4

ST_5: stg_354 [1/1] 0.00ns
branch16:1  br label %2

ST_5: stg_355 [1/1] 2.39ns
branch31:0  store float %in_B_read, float* %b_buf_15_addr, align 4

ST_5: stg_356 [1/1] 0.00ns
branch31:1  br label %2


 <State 6>: 5.70ns
ST_6: indvar_flatten1 [1/1] 0.00ns
.preheader.i:0  %indvar_flatten1 = phi i11 [ %indvar_flatten_next1, %.preheader1131 ], [ 0, %.preheader ]

ST_6: index_a_0_i [1/1] 0.00ns
.preheader.i:1  %index_a_0_i = phi i6 [ %index_a_0_i_mid2, %.preheader1131 ], [ 0, %.preheader ]

ST_6: index_b_0_i [1/1] 0.00ns
.preheader.i:2  %index_b_0_i = phi i6 [ %index_b, %.preheader1131 ], [ 0, %.preheader ]

ST_6: exitcond_flatten1 [1/1] 2.11ns
.preheader.i:3  %exitcond_flatten1 = icmp eq i11 %indvar_flatten1, -1024

ST_6: indvar_flatten_next1 [1/1] 1.84ns
.preheader.i:4  %indvar_flatten_next1 = add i11 %indvar_flatten1, 1

ST_6: stg_362 [1/1] 0.00ns
.preheader.i:5  br i1 %exitcond_flatten1, label %mmult_kernel.exit, label %.preheader1131

ST_6: exitcond1_i [1/1] 1.94ns
.preheader1131:1  %exitcond1_i = icmp eq i6 %index_b_0_i, -32

ST_6: index_b_0_i_mid2 [1/1] 1.37ns
.preheader1131:2  %index_b_0_i_mid2 = select i1 %exitcond1_i, i6 0, i6 %index_b_0_i

ST_6: index_a [1/1] 1.72ns
.preheader1131:3  %index_a = add i6 %index_a_0_i, 1

ST_6: index_a_0_i_mid2 [1/1] 1.37ns
.preheader1131:4  %index_a_0_i_mid2 = select i1 %exitcond1_i, i6 %index_a, i6 %index_a_0_i

ST_6: tmp_8 [1/1] 0.00ns
.preheader1131:5  %tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %index_a_0_i_mid2, i1 false)

ST_6: tmp_9 [1/1] 0.00ns
.preheader1131:6  %tmp_9 = zext i7 %tmp_8 to i64

ST_6: a_buf_0_addr_1 [1/1] 0.00ns
.preheader1131:7  %a_buf_0_addr_1 = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_9

ST_6: a_buf_0_load [2/2] 2.39ns
.preheader1131:8  %a_buf_0_load = load float* %a_buf_0_addr_1, align 16

ST_6: tmp_11 [1/1] 0.00ns
.preheader1131:77  %tmp_11 = zext i6 %index_b_0_i_mid2 to i64

ST_6: b_buf_0_addr_1 [1/1] 0.00ns
.preheader1131:78  %b_buf_0_addr_1 = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_11

ST_6: b_buf_0_load [2/2] 2.39ns
.preheader1131:79  %b_buf_0_load = load float* %b_buf_0_addr_1, align 4

ST_6: index_b [1/1] 1.72ns
.preheader1131:210  %index_b = add i6 %index_b_0_i_mid2, 1


 <State 7>: 2.39ns
ST_7: a_buf_0_load [1/2] 2.39ns
.preheader1131:8  %a_buf_0_load = load float* %a_buf_0_addr_1, align 16

ST_7: b_buf_0_load [1/2] 2.39ns
.preheader1131:79  %b_buf_0_load = load float* %b_buf_0_addr_1, align 4


 <State 8>: 5.70ns
ST_8: product_term [4/4] 5.70ns
.preheader1131:80  %product_term = fmul float %a_buf_0_load, %b_buf_0_load


 <State 9>: 5.70ns
ST_9: product_term [3/4] 5.70ns
.preheader1131:80  %product_term = fmul float %a_buf_0_load, %b_buf_0_load


 <State 10>: 5.70ns
ST_10: product_term [2/4] 5.70ns
.preheader1131:80  %product_term = fmul float %a_buf_0_load, %b_buf_0_load


 <State 11>: 5.70ns
ST_11: tmp_s [1/1] 0.00ns
.preheader1131:9  %tmp_s = or i7 %tmp_8, 1

ST_11: p_addr2 [1/1] 0.00ns
.preheader1131:10  %p_addr2 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_s)

ST_11: tmp_10 [1/1] 0.00ns
.preheader1131:11  %tmp_10 = zext i32 %p_addr2 to i64

ST_11: a_buf_0_addr_2 [1/1] 0.00ns
.preheader1131:12  %a_buf_0_addr_2 = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_10

ST_11: a_buf_0_load_1 [2/2] 2.39ns
.preheader1131:13  %a_buf_0_load_1 = load float* %a_buf_0_addr_2, align 4

ST_11: tmp_4_trn_cast [1/1] 0.00ns
.preheader1131:76  %tmp_4_trn_cast = zext i6 %index_b_0_i_mid2 to i7

ST_11: product_term [1/4] 5.70ns
.preheader1131:80  %product_term = fmul float %a_buf_0_load, %b_buf_0_load

ST_11: p_addr3 [1/1] 1.72ns
.preheader1131:82  %p_addr3 = add i7 %tmp_4_trn_cast, 32

ST_11: tmp_12 [1/1] 0.00ns
.preheader1131:83  %tmp_12 = zext i7 %p_addr3 to i64

ST_11: b_buf_0_addr_2 [1/1] 0.00ns
.preheader1131:84  %b_buf_0_addr_2 = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_12

ST_11: b_buf_0_load_1 [2/2] 2.39ns
.preheader1131:85  %b_buf_0_load_1 = load float* %b_buf_0_addr_2, align 4


 <State 12>: 7.26ns
ST_12: a_buf_0_load_1 [1/2] 2.39ns
.preheader1131:13  %a_buf_0_load_1 = load float* %a_buf_0_addr_2, align 4

ST_12: result [5/5] 7.26ns
.preheader1131:81  %result = fadd float %product_term, 0.000000e+00

ST_12: b_buf_0_load_1 [1/2] 2.39ns
.preheader1131:85  %b_buf_0_load_1 = load float* %b_buf_0_addr_2, align 4


 <State 13>: 7.26ns
ST_13: result [4/5] 7.26ns
.preheader1131:81  %result = fadd float %product_term, 0.000000e+00

ST_13: product_term_1 [4/4] 5.70ns
.preheader1131:86  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1


 <State 14>: 7.26ns
ST_14: result [3/5] 7.26ns
.preheader1131:81  %result = fadd float %product_term, 0.000000e+00

ST_14: product_term_1 [3/4] 5.70ns
.preheader1131:86  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1


 <State 15>: 7.26ns
ST_15: result [2/5] 7.26ns
.preheader1131:81  %result = fadd float %product_term, 0.000000e+00

ST_15: product_term_1 [2/4] 5.70ns
.preheader1131:86  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1


 <State 16>: 7.26ns
ST_16: a_buf_1_addr_1 [1/1] 0.00ns
.preheader1131:14  %a_buf_1_addr_1 = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_9

ST_16: a_buf_1_load [2/2] 2.39ns
.preheader1131:15  %a_buf_1_load = load float* %a_buf_1_addr_1, align 8

ST_16: result [1/5] 7.26ns
.preheader1131:81  %result = fadd float %product_term, 0.000000e+00

ST_16: product_term_1 [1/4] 5.70ns
.preheader1131:86  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1

ST_16: b_buf_1_addr_1 [1/1] 0.00ns
.preheader1131:88  %b_buf_1_addr_1 = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_11

ST_16: b_buf_1_load [2/2] 2.39ns
.preheader1131:89  %b_buf_1_load = load float* %b_buf_1_addr_1, align 4


 <State 17>: 7.26ns
ST_17: a_buf_1_load [1/2] 2.39ns
.preheader1131:15  %a_buf_1_load = load float* %a_buf_1_addr_1, align 8

ST_17: result_1 [5/5] 7.26ns
.preheader1131:87  %result_1 = fadd float %result, %product_term_1

ST_17: b_buf_1_load [1/2] 2.39ns
.preheader1131:89  %b_buf_1_load = load float* %b_buf_1_addr_1, align 4


 <State 18>: 7.26ns
ST_18: result_1 [4/5] 7.26ns
.preheader1131:87  %result_1 = fadd float %result, %product_term_1

ST_18: product_term_2 [4/4] 5.70ns
.preheader1131:90  %product_term_2 = fmul float %a_buf_1_load, %b_buf_1_load


 <State 19>: 7.26ns
ST_19: result_1 [3/5] 7.26ns
.preheader1131:87  %result_1 = fadd float %result, %product_term_1

ST_19: product_term_2 [3/4] 5.70ns
.preheader1131:90  %product_term_2 = fmul float %a_buf_1_load, %b_buf_1_load


 <State 20>: 7.26ns
ST_20: result_1 [2/5] 7.26ns
.preheader1131:87  %result_1 = fadd float %result, %product_term_1

ST_20: product_term_2 [2/4] 5.70ns
.preheader1131:90  %product_term_2 = fmul float %a_buf_1_load, %b_buf_1_load


 <State 21>: 7.26ns
ST_21: a_buf_1_addr_2 [1/1] 0.00ns
.preheader1131:16  %a_buf_1_addr_2 = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_10

ST_21: a_buf_1_load_1 [2/2] 2.39ns
.preheader1131:17  %a_buf_1_load_1 = load float* %a_buf_1_addr_2, align 4

ST_21: result_1 [1/5] 7.26ns
.preheader1131:87  %result_1 = fadd float %result, %product_term_1

ST_21: product_term_2 [1/4] 5.70ns
.preheader1131:90  %product_term_2 = fmul float %a_buf_1_load, %b_buf_1_load

ST_21: b_buf_1_addr_2 [1/1] 0.00ns
.preheader1131:92  %b_buf_1_addr_2 = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_12

ST_21: b_buf_1_load_1 [2/2] 2.39ns
.preheader1131:93  %b_buf_1_load_1 = load float* %b_buf_1_addr_2, align 4


 <State 22>: 7.26ns
ST_22: a_buf_1_load_1 [1/2] 2.39ns
.preheader1131:17  %a_buf_1_load_1 = load float* %a_buf_1_addr_2, align 4

ST_22: result_2 [5/5] 7.26ns
.preheader1131:91  %result_2 = fadd float %result_1, %product_term_2

ST_22: b_buf_1_load_1 [1/2] 2.39ns
.preheader1131:93  %b_buf_1_load_1 = load float* %b_buf_1_addr_2, align 4


 <State 23>: 7.26ns
ST_23: result_2 [4/5] 7.26ns
.preheader1131:91  %result_2 = fadd float %result_1, %product_term_2

ST_23: product_term_3 [4/4] 5.70ns
.preheader1131:94  %product_term_3 = fmul float %a_buf_1_load_1, %b_buf_1_load_1


 <State 24>: 7.26ns
ST_24: result_2 [3/5] 7.26ns
.preheader1131:91  %result_2 = fadd float %result_1, %product_term_2

ST_24: product_term_3 [3/4] 5.70ns
.preheader1131:94  %product_term_3 = fmul float %a_buf_1_load_1, %b_buf_1_load_1


 <State 25>: 7.26ns
ST_25: result_2 [2/5] 7.26ns
.preheader1131:91  %result_2 = fadd float %result_1, %product_term_2

ST_25: product_term_3 [2/4] 5.70ns
.preheader1131:94  %product_term_3 = fmul float %a_buf_1_load_1, %b_buf_1_load_1


 <State 26>: 7.26ns
ST_26: a_buf_2_addr_1 [1/1] 0.00ns
.preheader1131:18  %a_buf_2_addr_1 = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_9

ST_26: a_buf_2_load [2/2] 2.39ns
.preheader1131:19  %a_buf_2_load = load float* %a_buf_2_addr_1, align 16

ST_26: result_2 [1/5] 7.26ns
.preheader1131:91  %result_2 = fadd float %result_1, %product_term_2

ST_26: product_term_3 [1/4] 5.70ns
.preheader1131:94  %product_term_3 = fmul float %a_buf_1_load_1, %b_buf_1_load_1

ST_26: b_buf_2_addr_1 [1/1] 0.00ns
.preheader1131:96  %b_buf_2_addr_1 = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_11

ST_26: b_buf_2_load [2/2] 2.39ns
.preheader1131:97  %b_buf_2_load = load float* %b_buf_2_addr_1, align 4


 <State 27>: 7.26ns
ST_27: a_buf_2_load [1/2] 2.39ns
.preheader1131:19  %a_buf_2_load = load float* %a_buf_2_addr_1, align 16

ST_27: result_3 [5/5] 7.26ns
.preheader1131:95  %result_3 = fadd float %result_2, %product_term_3

ST_27: b_buf_2_load [1/2] 2.39ns
.preheader1131:97  %b_buf_2_load = load float* %b_buf_2_addr_1, align 4


 <State 28>: 7.26ns
ST_28: result_3 [4/5] 7.26ns
.preheader1131:95  %result_3 = fadd float %result_2, %product_term_3

ST_28: product_term_4 [4/4] 5.70ns
.preheader1131:98  %product_term_4 = fmul float %a_buf_2_load, %b_buf_2_load


 <State 29>: 7.26ns
ST_29: result_3 [3/5] 7.26ns
.preheader1131:95  %result_3 = fadd float %result_2, %product_term_3

ST_29: product_term_4 [3/4] 5.70ns
.preheader1131:98  %product_term_4 = fmul float %a_buf_2_load, %b_buf_2_load


 <State 30>: 7.26ns
ST_30: result_3 [2/5] 7.26ns
.preheader1131:95  %result_3 = fadd float %result_2, %product_term_3

ST_30: product_term_4 [2/4] 5.70ns
.preheader1131:98  %product_term_4 = fmul float %a_buf_2_load, %b_buf_2_load


 <State 31>: 7.26ns
ST_31: a_buf_2_addr_2 [1/1] 0.00ns
.preheader1131:20  %a_buf_2_addr_2 = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_10

ST_31: a_buf_2_load_1 [2/2] 2.39ns
.preheader1131:21  %a_buf_2_load_1 = load float* %a_buf_2_addr_2, align 4

ST_31: result_3 [1/5] 7.26ns
.preheader1131:95  %result_3 = fadd float %result_2, %product_term_3

ST_31: product_term_4 [1/4] 5.70ns
.preheader1131:98  %product_term_4 = fmul float %a_buf_2_load, %b_buf_2_load

ST_31: b_buf_2_addr_2 [1/1] 0.00ns
.preheader1131:100  %b_buf_2_addr_2 = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_12

ST_31: b_buf_2_load_1 [2/2] 2.39ns
.preheader1131:101  %b_buf_2_load_1 = load float* %b_buf_2_addr_2, align 4


 <State 32>: 7.26ns
ST_32: a_buf_2_load_1 [1/2] 2.39ns
.preheader1131:21  %a_buf_2_load_1 = load float* %a_buf_2_addr_2, align 4

ST_32: result_4 [5/5] 7.26ns
.preheader1131:99  %result_4 = fadd float %result_3, %product_term_4

ST_32: b_buf_2_load_1 [1/2] 2.39ns
.preheader1131:101  %b_buf_2_load_1 = load float* %b_buf_2_addr_2, align 4


 <State 33>: 7.26ns
ST_33: result_4 [4/5] 7.26ns
.preheader1131:99  %result_4 = fadd float %result_3, %product_term_4

ST_33: product_term_5 [4/4] 5.70ns
.preheader1131:102  %product_term_5 = fmul float %a_buf_2_load_1, %b_buf_2_load_1


 <State 34>: 7.26ns
ST_34: result_4 [3/5] 7.26ns
.preheader1131:99  %result_4 = fadd float %result_3, %product_term_4

ST_34: product_term_5 [3/4] 5.70ns
.preheader1131:102  %product_term_5 = fmul float %a_buf_2_load_1, %b_buf_2_load_1


 <State 35>: 7.26ns
ST_35: result_4 [2/5] 7.26ns
.preheader1131:99  %result_4 = fadd float %result_3, %product_term_4

ST_35: product_term_5 [2/4] 5.70ns
.preheader1131:102  %product_term_5 = fmul float %a_buf_2_load_1, %b_buf_2_load_1


 <State 36>: 7.26ns
ST_36: a_buf_3_addr_1 [1/1] 0.00ns
.preheader1131:22  %a_buf_3_addr_1 = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_9

ST_36: a_buf_3_load [2/2] 2.39ns
.preheader1131:23  %a_buf_3_load = load float* %a_buf_3_addr_1, align 8

ST_36: result_4 [1/5] 7.26ns
.preheader1131:99  %result_4 = fadd float %result_3, %product_term_4

ST_36: product_term_5 [1/4] 5.70ns
.preheader1131:102  %product_term_5 = fmul float %a_buf_2_load_1, %b_buf_2_load_1

ST_36: b_buf_3_addr_1 [1/1] 0.00ns
.preheader1131:104  %b_buf_3_addr_1 = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_11

ST_36: b_buf_3_load [2/2] 2.39ns
.preheader1131:105  %b_buf_3_load = load float* %b_buf_3_addr_1, align 4


 <State 37>: 7.26ns
ST_37: a_buf_3_load [1/2] 2.39ns
.preheader1131:23  %a_buf_3_load = load float* %a_buf_3_addr_1, align 8

ST_37: result_5 [5/5] 7.26ns
.preheader1131:103  %result_5 = fadd float %result_4, %product_term_5

ST_37: b_buf_3_load [1/2] 2.39ns
.preheader1131:105  %b_buf_3_load = load float* %b_buf_3_addr_1, align 4


 <State 38>: 7.26ns
ST_38: result_5 [4/5] 7.26ns
.preheader1131:103  %result_5 = fadd float %result_4, %product_term_5

ST_38: product_term_6 [4/4] 5.70ns
.preheader1131:106  %product_term_6 = fmul float %a_buf_3_load, %b_buf_3_load


 <State 39>: 7.26ns
ST_39: result_5 [3/5] 7.26ns
.preheader1131:103  %result_5 = fadd float %result_4, %product_term_5

ST_39: product_term_6 [3/4] 5.70ns
.preheader1131:106  %product_term_6 = fmul float %a_buf_3_load, %b_buf_3_load


 <State 40>: 7.26ns
ST_40: result_5 [2/5] 7.26ns
.preheader1131:103  %result_5 = fadd float %result_4, %product_term_5

ST_40: product_term_6 [2/4] 5.70ns
.preheader1131:106  %product_term_6 = fmul float %a_buf_3_load, %b_buf_3_load


 <State 41>: 7.26ns
ST_41: a_buf_3_addr_2 [1/1] 0.00ns
.preheader1131:24  %a_buf_3_addr_2 = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_10

ST_41: a_buf_3_load_1 [2/2] 2.39ns
.preheader1131:25  %a_buf_3_load_1 = load float* %a_buf_3_addr_2, align 4

ST_41: result_5 [1/5] 7.26ns
.preheader1131:103  %result_5 = fadd float %result_4, %product_term_5

ST_41: product_term_6 [1/4] 5.70ns
.preheader1131:106  %product_term_6 = fmul float %a_buf_3_load, %b_buf_3_load

ST_41: b_buf_3_addr_2 [1/1] 0.00ns
.preheader1131:108  %b_buf_3_addr_2 = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_12

ST_41: b_buf_3_load_1 [2/2] 2.39ns
.preheader1131:109  %b_buf_3_load_1 = load float* %b_buf_3_addr_2, align 4


 <State 42>: 7.26ns
ST_42: a_buf_3_load_1 [1/2] 2.39ns
.preheader1131:25  %a_buf_3_load_1 = load float* %a_buf_3_addr_2, align 4

ST_42: result_6 [5/5] 7.26ns
.preheader1131:107  %result_6 = fadd float %result_5, %product_term_6

ST_42: b_buf_3_load_1 [1/2] 2.39ns
.preheader1131:109  %b_buf_3_load_1 = load float* %b_buf_3_addr_2, align 4


 <State 43>: 7.26ns
ST_43: result_6 [4/5] 7.26ns
.preheader1131:107  %result_6 = fadd float %result_5, %product_term_6

ST_43: product_term_7 [4/4] 5.70ns
.preheader1131:110  %product_term_7 = fmul float %a_buf_3_load_1, %b_buf_3_load_1


 <State 44>: 7.26ns
ST_44: result_6 [3/5] 7.26ns
.preheader1131:107  %result_6 = fadd float %result_5, %product_term_6

ST_44: product_term_7 [3/4] 5.70ns
.preheader1131:110  %product_term_7 = fmul float %a_buf_3_load_1, %b_buf_3_load_1


 <State 45>: 7.26ns
ST_45: result_6 [2/5] 7.26ns
.preheader1131:107  %result_6 = fadd float %result_5, %product_term_6

ST_45: product_term_7 [2/4] 5.70ns
.preheader1131:110  %product_term_7 = fmul float %a_buf_3_load_1, %b_buf_3_load_1


 <State 46>: 7.26ns
ST_46: a_buf_4_addr_1 [1/1] 0.00ns
.preheader1131:26  %a_buf_4_addr_1 = getelementptr [64 x float]* %a_buf_4, i64 0, i64 %tmp_9

ST_46: a_buf_4_load [2/2] 2.39ns
.preheader1131:27  %a_buf_4_load = load float* %a_buf_4_addr_1, align 16

ST_46: result_6 [1/5] 7.26ns
.preheader1131:107  %result_6 = fadd float %result_5, %product_term_6

ST_46: product_term_7 [1/4] 5.70ns
.preheader1131:110  %product_term_7 = fmul float %a_buf_3_load_1, %b_buf_3_load_1

ST_46: b_buf_4_addr_1 [1/1] 0.00ns
.preheader1131:112  %b_buf_4_addr_1 = getelementptr [64 x float]* %b_buf_4, i64 0, i64 %tmp_11

ST_46: b_buf_4_load [2/2] 2.39ns
.preheader1131:113  %b_buf_4_load = load float* %b_buf_4_addr_1, align 4


 <State 47>: 7.26ns
ST_47: a_buf_4_load [1/2] 2.39ns
.preheader1131:27  %a_buf_4_load = load float* %a_buf_4_addr_1, align 16

ST_47: result_7 [5/5] 7.26ns
.preheader1131:111  %result_7 = fadd float %result_6, %product_term_7

ST_47: b_buf_4_load [1/2] 2.39ns
.preheader1131:113  %b_buf_4_load = load float* %b_buf_4_addr_1, align 4


 <State 48>: 7.26ns
ST_48: result_7 [4/5] 7.26ns
.preheader1131:111  %result_7 = fadd float %result_6, %product_term_7

ST_48: product_term_8 [4/4] 5.70ns
.preheader1131:114  %product_term_8 = fmul float %a_buf_4_load, %b_buf_4_load


 <State 49>: 7.26ns
ST_49: result_7 [3/5] 7.26ns
.preheader1131:111  %result_7 = fadd float %result_6, %product_term_7

ST_49: product_term_8 [3/4] 5.70ns
.preheader1131:114  %product_term_8 = fmul float %a_buf_4_load, %b_buf_4_load


 <State 50>: 7.26ns
ST_50: result_7 [2/5] 7.26ns
.preheader1131:111  %result_7 = fadd float %result_6, %product_term_7

ST_50: product_term_8 [2/4] 5.70ns
.preheader1131:114  %product_term_8 = fmul float %a_buf_4_load, %b_buf_4_load


 <State 51>: 7.26ns
ST_51: a_buf_4_addr_2 [1/1] 0.00ns
.preheader1131:28  %a_buf_4_addr_2 = getelementptr [64 x float]* %a_buf_4, i64 0, i64 %tmp_10

ST_51: a_buf_4_load_1 [2/2] 2.39ns
.preheader1131:29  %a_buf_4_load_1 = load float* %a_buf_4_addr_2, align 4

ST_51: result_7 [1/5] 7.26ns
.preheader1131:111  %result_7 = fadd float %result_6, %product_term_7

ST_51: product_term_8 [1/4] 5.70ns
.preheader1131:114  %product_term_8 = fmul float %a_buf_4_load, %b_buf_4_load

ST_51: b_buf_4_addr_2 [1/1] 0.00ns
.preheader1131:116  %b_buf_4_addr_2 = getelementptr [64 x float]* %b_buf_4, i64 0, i64 %tmp_12

ST_51: b_buf_4_load_1 [2/2] 2.39ns
.preheader1131:117  %b_buf_4_load_1 = load float* %b_buf_4_addr_2, align 4


 <State 52>: 7.26ns
ST_52: a_buf_4_load_1 [1/2] 2.39ns
.preheader1131:29  %a_buf_4_load_1 = load float* %a_buf_4_addr_2, align 4

ST_52: result_8 [5/5] 7.26ns
.preheader1131:115  %result_8 = fadd float %result_7, %product_term_8

ST_52: b_buf_4_load_1 [1/2] 2.39ns
.preheader1131:117  %b_buf_4_load_1 = load float* %b_buf_4_addr_2, align 4


 <State 53>: 7.26ns
ST_53: result_8 [4/5] 7.26ns
.preheader1131:115  %result_8 = fadd float %result_7, %product_term_8

ST_53: product_term_9 [4/4] 5.70ns
.preheader1131:118  %product_term_9 = fmul float %a_buf_4_load_1, %b_buf_4_load_1


 <State 54>: 7.26ns
ST_54: result_8 [3/5] 7.26ns
.preheader1131:115  %result_8 = fadd float %result_7, %product_term_8

ST_54: product_term_9 [3/4] 5.70ns
.preheader1131:118  %product_term_9 = fmul float %a_buf_4_load_1, %b_buf_4_load_1


 <State 55>: 7.26ns
ST_55: result_8 [2/5] 7.26ns
.preheader1131:115  %result_8 = fadd float %result_7, %product_term_8

ST_55: product_term_9 [2/4] 5.70ns
.preheader1131:118  %product_term_9 = fmul float %a_buf_4_load_1, %b_buf_4_load_1


 <State 56>: 7.26ns
ST_56: a_buf_5_addr_1 [1/1] 0.00ns
.preheader1131:30  %a_buf_5_addr_1 = getelementptr [64 x float]* %a_buf_5, i64 0, i64 %tmp_9

ST_56: a_buf_5_load [2/2] 2.39ns
.preheader1131:31  %a_buf_5_load = load float* %a_buf_5_addr_1, align 8

ST_56: result_8 [1/5] 7.26ns
.preheader1131:115  %result_8 = fadd float %result_7, %product_term_8

ST_56: product_term_9 [1/4] 5.70ns
.preheader1131:118  %product_term_9 = fmul float %a_buf_4_load_1, %b_buf_4_load_1

ST_56: b_buf_5_addr_1 [1/1] 0.00ns
.preheader1131:120  %b_buf_5_addr_1 = getelementptr [64 x float]* %b_buf_5, i64 0, i64 %tmp_11

ST_56: b_buf_5_load [2/2] 2.39ns
.preheader1131:121  %b_buf_5_load = load float* %b_buf_5_addr_1, align 4


 <State 57>: 7.26ns
ST_57: a_buf_5_load [1/2] 2.39ns
.preheader1131:31  %a_buf_5_load = load float* %a_buf_5_addr_1, align 8

ST_57: result_9 [5/5] 7.26ns
.preheader1131:119  %result_9 = fadd float %result_8, %product_term_9

ST_57: b_buf_5_load [1/2] 2.39ns
.preheader1131:121  %b_buf_5_load = load float* %b_buf_5_addr_1, align 4


 <State 58>: 7.26ns
ST_58: result_9 [4/5] 7.26ns
.preheader1131:119  %result_9 = fadd float %result_8, %product_term_9

ST_58: product_term_s [4/4] 5.70ns
.preheader1131:122  %product_term_s = fmul float %a_buf_5_load, %b_buf_5_load


 <State 59>: 7.26ns
ST_59: result_9 [3/5] 7.26ns
.preheader1131:119  %result_9 = fadd float %result_8, %product_term_9

ST_59: product_term_s [3/4] 5.70ns
.preheader1131:122  %product_term_s = fmul float %a_buf_5_load, %b_buf_5_load


 <State 60>: 7.26ns
ST_60: result_9 [2/5] 7.26ns
.preheader1131:119  %result_9 = fadd float %result_8, %product_term_9

ST_60: product_term_s [2/4] 5.70ns
.preheader1131:122  %product_term_s = fmul float %a_buf_5_load, %b_buf_5_load


 <State 61>: 7.26ns
ST_61: a_buf_5_addr_2 [1/1] 0.00ns
.preheader1131:32  %a_buf_5_addr_2 = getelementptr [64 x float]* %a_buf_5, i64 0, i64 %tmp_10

ST_61: a_buf_5_load_1 [2/2] 2.39ns
.preheader1131:33  %a_buf_5_load_1 = load float* %a_buf_5_addr_2, align 4

ST_61: result_9 [1/5] 7.26ns
.preheader1131:119  %result_9 = fadd float %result_8, %product_term_9

ST_61: product_term_s [1/4] 5.70ns
.preheader1131:122  %product_term_s = fmul float %a_buf_5_load, %b_buf_5_load

ST_61: b_buf_5_addr_2 [1/1] 0.00ns
.preheader1131:124  %b_buf_5_addr_2 = getelementptr [64 x float]* %b_buf_5, i64 0, i64 %tmp_12

ST_61: b_buf_5_load_1 [2/2] 2.39ns
.preheader1131:125  %b_buf_5_load_1 = load float* %b_buf_5_addr_2, align 4


 <State 62>: 7.26ns
ST_62: a_buf_5_load_1 [1/2] 2.39ns
.preheader1131:33  %a_buf_5_load_1 = load float* %a_buf_5_addr_2, align 4

ST_62: result_s [5/5] 7.26ns
.preheader1131:123  %result_s = fadd float %result_9, %product_term_s

ST_62: b_buf_5_load_1 [1/2] 2.39ns
.preheader1131:125  %b_buf_5_load_1 = load float* %b_buf_5_addr_2, align 4


 <State 63>: 7.26ns
ST_63: result_s [4/5] 7.26ns
.preheader1131:123  %result_s = fadd float %result_9, %product_term_s

ST_63: product_term_10 [4/4] 5.70ns
.preheader1131:126  %product_term_10 = fmul float %a_buf_5_load_1, %b_buf_5_load_1


 <State 64>: 7.26ns
ST_64: result_s [3/5] 7.26ns
.preheader1131:123  %result_s = fadd float %result_9, %product_term_s

ST_64: product_term_10 [3/4] 5.70ns
.preheader1131:126  %product_term_10 = fmul float %a_buf_5_load_1, %b_buf_5_load_1


 <State 65>: 7.26ns
ST_65: result_s [2/5] 7.26ns
.preheader1131:123  %result_s = fadd float %result_9, %product_term_s

ST_65: product_term_10 [2/4] 5.70ns
.preheader1131:126  %product_term_10 = fmul float %a_buf_5_load_1, %b_buf_5_load_1


 <State 66>: 7.26ns
ST_66: a_buf_6_addr_1 [1/1] 0.00ns
.preheader1131:34  %a_buf_6_addr_1 = getelementptr [64 x float]* %a_buf_6, i64 0, i64 %tmp_9

ST_66: a_buf_6_load [2/2] 2.39ns
.preheader1131:35  %a_buf_6_load = load float* %a_buf_6_addr_1, align 16

ST_66: result_s [1/5] 7.26ns
.preheader1131:123  %result_s = fadd float %result_9, %product_term_s

ST_66: product_term_10 [1/4] 5.70ns
.preheader1131:126  %product_term_10 = fmul float %a_buf_5_load_1, %b_buf_5_load_1

ST_66: b_buf_6_addr_1 [1/1] 0.00ns
.preheader1131:128  %b_buf_6_addr_1 = getelementptr [64 x float]* %b_buf_6, i64 0, i64 %tmp_11

ST_66: b_buf_6_load [2/2] 2.39ns
.preheader1131:129  %b_buf_6_load = load float* %b_buf_6_addr_1, align 4


 <State 67>: 7.26ns
ST_67: a_buf_6_load [1/2] 2.39ns
.preheader1131:35  %a_buf_6_load = load float* %a_buf_6_addr_1, align 16

ST_67: result_10 [5/5] 7.26ns
.preheader1131:127  %result_10 = fadd float %result_s, %product_term_10

ST_67: b_buf_6_load [1/2] 2.39ns
.preheader1131:129  %b_buf_6_load = load float* %b_buf_6_addr_1, align 4


 <State 68>: 7.26ns
ST_68: result_10 [4/5] 7.26ns
.preheader1131:127  %result_10 = fadd float %result_s, %product_term_10

ST_68: product_term_11 [4/4] 5.70ns
.preheader1131:130  %product_term_11 = fmul float %a_buf_6_load, %b_buf_6_load


 <State 69>: 7.26ns
ST_69: result_10 [3/5] 7.26ns
.preheader1131:127  %result_10 = fadd float %result_s, %product_term_10

ST_69: product_term_11 [3/4] 5.70ns
.preheader1131:130  %product_term_11 = fmul float %a_buf_6_load, %b_buf_6_load


 <State 70>: 7.26ns
ST_70: result_10 [2/5] 7.26ns
.preheader1131:127  %result_10 = fadd float %result_s, %product_term_10

ST_70: product_term_11 [2/4] 5.70ns
.preheader1131:130  %product_term_11 = fmul float %a_buf_6_load, %b_buf_6_load


 <State 71>: 7.26ns
ST_71: a_buf_6_addr_2 [1/1] 0.00ns
.preheader1131:36  %a_buf_6_addr_2 = getelementptr [64 x float]* %a_buf_6, i64 0, i64 %tmp_10

ST_71: a_buf_6_load_1 [2/2] 2.39ns
.preheader1131:37  %a_buf_6_load_1 = load float* %a_buf_6_addr_2, align 4

ST_71: result_10 [1/5] 7.26ns
.preheader1131:127  %result_10 = fadd float %result_s, %product_term_10

ST_71: product_term_11 [1/4] 5.70ns
.preheader1131:130  %product_term_11 = fmul float %a_buf_6_load, %b_buf_6_load

ST_71: b_buf_6_addr_2 [1/1] 0.00ns
.preheader1131:132  %b_buf_6_addr_2 = getelementptr [64 x float]* %b_buf_6, i64 0, i64 %tmp_12

ST_71: b_buf_6_load_1 [2/2] 2.39ns
.preheader1131:133  %b_buf_6_load_1 = load float* %b_buf_6_addr_2, align 4


 <State 72>: 7.26ns
ST_72: a_buf_6_load_1 [1/2] 2.39ns
.preheader1131:37  %a_buf_6_load_1 = load float* %a_buf_6_addr_2, align 4

ST_72: result_11 [5/5] 7.26ns
.preheader1131:131  %result_11 = fadd float %result_10, %product_term_11

ST_72: b_buf_6_load_1 [1/2] 2.39ns
.preheader1131:133  %b_buf_6_load_1 = load float* %b_buf_6_addr_2, align 4


 <State 73>: 7.26ns
ST_73: result_11 [4/5] 7.26ns
.preheader1131:131  %result_11 = fadd float %result_10, %product_term_11

ST_73: product_term_12 [4/4] 5.70ns
.preheader1131:134  %product_term_12 = fmul float %a_buf_6_load_1, %b_buf_6_load_1


 <State 74>: 7.26ns
ST_74: result_11 [3/5] 7.26ns
.preheader1131:131  %result_11 = fadd float %result_10, %product_term_11

ST_74: product_term_12 [3/4] 5.70ns
.preheader1131:134  %product_term_12 = fmul float %a_buf_6_load_1, %b_buf_6_load_1


 <State 75>: 7.26ns
ST_75: result_11 [2/5] 7.26ns
.preheader1131:131  %result_11 = fadd float %result_10, %product_term_11

ST_75: product_term_12 [2/4] 5.70ns
.preheader1131:134  %product_term_12 = fmul float %a_buf_6_load_1, %b_buf_6_load_1


 <State 76>: 7.26ns
ST_76: a_buf_7_addr_1 [1/1] 0.00ns
.preheader1131:38  %a_buf_7_addr_1 = getelementptr [64 x float]* %a_buf_7, i64 0, i64 %tmp_9

ST_76: a_buf_7_load [2/2] 2.39ns
.preheader1131:39  %a_buf_7_load = load float* %a_buf_7_addr_1, align 8

ST_76: result_11 [1/5] 7.26ns
.preheader1131:131  %result_11 = fadd float %result_10, %product_term_11

ST_76: product_term_12 [1/4] 5.70ns
.preheader1131:134  %product_term_12 = fmul float %a_buf_6_load_1, %b_buf_6_load_1

ST_76: b_buf_7_addr_1 [1/1] 0.00ns
.preheader1131:136  %b_buf_7_addr_1 = getelementptr [64 x float]* %b_buf_7, i64 0, i64 %tmp_11

ST_76: b_buf_7_load [2/2] 2.39ns
.preheader1131:137  %b_buf_7_load = load float* %b_buf_7_addr_1, align 4


 <State 77>: 7.26ns
ST_77: a_buf_7_load [1/2] 2.39ns
.preheader1131:39  %a_buf_7_load = load float* %a_buf_7_addr_1, align 8

ST_77: result_12 [5/5] 7.26ns
.preheader1131:135  %result_12 = fadd float %result_11, %product_term_12

ST_77: b_buf_7_load [1/2] 2.39ns
.preheader1131:137  %b_buf_7_load = load float* %b_buf_7_addr_1, align 4


 <State 78>: 7.26ns
ST_78: result_12 [4/5] 7.26ns
.preheader1131:135  %result_12 = fadd float %result_11, %product_term_12

ST_78: product_term_13 [4/4] 5.70ns
.preheader1131:138  %product_term_13 = fmul float %a_buf_7_load, %b_buf_7_load


 <State 79>: 7.26ns
ST_79: result_12 [3/5] 7.26ns
.preheader1131:135  %result_12 = fadd float %result_11, %product_term_12

ST_79: product_term_13 [3/4] 5.70ns
.preheader1131:138  %product_term_13 = fmul float %a_buf_7_load, %b_buf_7_load


 <State 80>: 7.26ns
ST_80: result_12 [2/5] 7.26ns
.preheader1131:135  %result_12 = fadd float %result_11, %product_term_12

ST_80: product_term_13 [2/4] 5.70ns
.preheader1131:138  %product_term_13 = fmul float %a_buf_7_load, %b_buf_7_load


 <State 81>: 7.26ns
ST_81: a_buf_7_addr_2 [1/1] 0.00ns
.preheader1131:40  %a_buf_7_addr_2 = getelementptr [64 x float]* %a_buf_7, i64 0, i64 %tmp_10

ST_81: a_buf_7_load_1 [2/2] 2.39ns
.preheader1131:41  %a_buf_7_load_1 = load float* %a_buf_7_addr_2, align 4

ST_81: result_12 [1/5] 7.26ns
.preheader1131:135  %result_12 = fadd float %result_11, %product_term_12

ST_81: product_term_13 [1/4] 5.70ns
.preheader1131:138  %product_term_13 = fmul float %a_buf_7_load, %b_buf_7_load

ST_81: b_buf_7_addr_2 [1/1] 0.00ns
.preheader1131:140  %b_buf_7_addr_2 = getelementptr [64 x float]* %b_buf_7, i64 0, i64 %tmp_12

ST_81: b_buf_7_load_1 [2/2] 2.39ns
.preheader1131:141  %b_buf_7_load_1 = load float* %b_buf_7_addr_2, align 4


 <State 82>: 7.26ns
ST_82: a_buf_7_load_1 [1/2] 2.39ns
.preheader1131:41  %a_buf_7_load_1 = load float* %a_buf_7_addr_2, align 4

ST_82: result_13 [5/5] 7.26ns
.preheader1131:139  %result_13 = fadd float %result_12, %product_term_13

ST_82: b_buf_7_load_1 [1/2] 2.39ns
.preheader1131:141  %b_buf_7_load_1 = load float* %b_buf_7_addr_2, align 4


 <State 83>: 7.26ns
ST_83: result_13 [4/5] 7.26ns
.preheader1131:139  %result_13 = fadd float %result_12, %product_term_13

ST_83: product_term_14 [4/4] 5.70ns
.preheader1131:142  %product_term_14 = fmul float %a_buf_7_load_1, %b_buf_7_load_1


 <State 84>: 7.26ns
ST_84: result_13 [3/5] 7.26ns
.preheader1131:139  %result_13 = fadd float %result_12, %product_term_13

ST_84: product_term_14 [3/4] 5.70ns
.preheader1131:142  %product_term_14 = fmul float %a_buf_7_load_1, %b_buf_7_load_1


 <State 85>: 7.26ns
ST_85: result_13 [2/5] 7.26ns
.preheader1131:139  %result_13 = fadd float %result_12, %product_term_13

ST_85: product_term_14 [2/4] 5.70ns
.preheader1131:142  %product_term_14 = fmul float %a_buf_7_load_1, %b_buf_7_load_1


 <State 86>: 7.26ns
ST_86: a_buf_8_addr_1 [1/1] 0.00ns
.preheader1131:42  %a_buf_8_addr_1 = getelementptr [64 x float]* %a_buf_8, i64 0, i64 %tmp_9

ST_86: a_buf_8_load [2/2] 2.39ns
.preheader1131:43  %a_buf_8_load = load float* %a_buf_8_addr_1, align 16

ST_86: result_13 [1/5] 7.26ns
.preheader1131:139  %result_13 = fadd float %result_12, %product_term_13

ST_86: product_term_14 [1/4] 5.70ns
.preheader1131:142  %product_term_14 = fmul float %a_buf_7_load_1, %b_buf_7_load_1

ST_86: b_buf_8_addr_1 [1/1] 0.00ns
.preheader1131:144  %b_buf_8_addr_1 = getelementptr [64 x float]* %b_buf_8, i64 0, i64 %tmp_11

ST_86: b_buf_8_load [2/2] 2.39ns
.preheader1131:145  %b_buf_8_load = load float* %b_buf_8_addr_1, align 4


 <State 87>: 7.26ns
ST_87: a_buf_8_load [1/2] 2.39ns
.preheader1131:43  %a_buf_8_load = load float* %a_buf_8_addr_1, align 16

ST_87: result_14 [5/5] 7.26ns
.preheader1131:143  %result_14 = fadd float %result_13, %product_term_14

ST_87: b_buf_8_load [1/2] 2.39ns
.preheader1131:145  %b_buf_8_load = load float* %b_buf_8_addr_1, align 4


 <State 88>: 7.26ns
ST_88: result_14 [4/5] 7.26ns
.preheader1131:143  %result_14 = fadd float %result_13, %product_term_14

ST_88: product_term_15 [4/4] 5.70ns
.preheader1131:146  %product_term_15 = fmul float %a_buf_8_load, %b_buf_8_load


 <State 89>: 7.26ns
ST_89: result_14 [3/5] 7.26ns
.preheader1131:143  %result_14 = fadd float %result_13, %product_term_14

ST_89: product_term_15 [3/4] 5.70ns
.preheader1131:146  %product_term_15 = fmul float %a_buf_8_load, %b_buf_8_load


 <State 90>: 7.26ns
ST_90: result_14 [2/5] 7.26ns
.preheader1131:143  %result_14 = fadd float %result_13, %product_term_14

ST_90: product_term_15 [2/4] 5.70ns
.preheader1131:146  %product_term_15 = fmul float %a_buf_8_load, %b_buf_8_load


 <State 91>: 7.26ns
ST_91: a_buf_8_addr_2 [1/1] 0.00ns
.preheader1131:44  %a_buf_8_addr_2 = getelementptr [64 x float]* %a_buf_8, i64 0, i64 %tmp_10

ST_91: a_buf_8_load_1 [2/2] 2.39ns
.preheader1131:45  %a_buf_8_load_1 = load float* %a_buf_8_addr_2, align 4

ST_91: result_14 [1/5] 7.26ns
.preheader1131:143  %result_14 = fadd float %result_13, %product_term_14

ST_91: product_term_15 [1/4] 5.70ns
.preheader1131:146  %product_term_15 = fmul float %a_buf_8_load, %b_buf_8_load

ST_91: b_buf_8_addr_2 [1/1] 0.00ns
.preheader1131:148  %b_buf_8_addr_2 = getelementptr [64 x float]* %b_buf_8, i64 0, i64 %tmp_12

ST_91: b_buf_8_load_1 [2/2] 2.39ns
.preheader1131:149  %b_buf_8_load_1 = load float* %b_buf_8_addr_2, align 4


 <State 92>: 7.26ns
ST_92: a_buf_8_load_1 [1/2] 2.39ns
.preheader1131:45  %a_buf_8_load_1 = load float* %a_buf_8_addr_2, align 4

ST_92: result_15 [5/5] 7.26ns
.preheader1131:147  %result_15 = fadd float %result_14, %product_term_15

ST_92: b_buf_8_load_1 [1/2] 2.39ns
.preheader1131:149  %b_buf_8_load_1 = load float* %b_buf_8_addr_2, align 4


 <State 93>: 7.26ns
ST_93: result_15 [4/5] 7.26ns
.preheader1131:147  %result_15 = fadd float %result_14, %product_term_15

ST_93: product_term_16 [4/4] 5.70ns
.preheader1131:150  %product_term_16 = fmul float %a_buf_8_load_1, %b_buf_8_load_1


 <State 94>: 7.26ns
ST_94: result_15 [3/5] 7.26ns
.preheader1131:147  %result_15 = fadd float %result_14, %product_term_15

ST_94: product_term_16 [3/4] 5.70ns
.preheader1131:150  %product_term_16 = fmul float %a_buf_8_load_1, %b_buf_8_load_1


 <State 95>: 7.26ns
ST_95: result_15 [2/5] 7.26ns
.preheader1131:147  %result_15 = fadd float %result_14, %product_term_15

ST_95: product_term_16 [2/4] 5.70ns
.preheader1131:150  %product_term_16 = fmul float %a_buf_8_load_1, %b_buf_8_load_1


 <State 96>: 7.26ns
ST_96: a_buf_9_addr_1 [1/1] 0.00ns
.preheader1131:46  %a_buf_9_addr_1 = getelementptr [64 x float]* %a_buf_9, i64 0, i64 %tmp_9

ST_96: a_buf_9_load [2/2] 2.39ns
.preheader1131:47  %a_buf_9_load = load float* %a_buf_9_addr_1, align 8

ST_96: result_15 [1/5] 7.26ns
.preheader1131:147  %result_15 = fadd float %result_14, %product_term_15

ST_96: product_term_16 [1/4] 5.70ns
.preheader1131:150  %product_term_16 = fmul float %a_buf_8_load_1, %b_buf_8_load_1

ST_96: b_buf_9_addr_1 [1/1] 0.00ns
.preheader1131:152  %b_buf_9_addr_1 = getelementptr [64 x float]* %b_buf_9, i64 0, i64 %tmp_11

ST_96: b_buf_9_load [2/2] 2.39ns
.preheader1131:153  %b_buf_9_load = load float* %b_buf_9_addr_1, align 4


 <State 97>: 7.26ns
ST_97: a_buf_9_load [1/2] 2.39ns
.preheader1131:47  %a_buf_9_load = load float* %a_buf_9_addr_1, align 8

ST_97: result_16 [5/5] 7.26ns
.preheader1131:151  %result_16 = fadd float %result_15, %product_term_16

ST_97: b_buf_9_load [1/2] 2.39ns
.preheader1131:153  %b_buf_9_load = load float* %b_buf_9_addr_1, align 4


 <State 98>: 7.26ns
ST_98: result_16 [4/5] 7.26ns
.preheader1131:151  %result_16 = fadd float %result_15, %product_term_16

ST_98: product_term_17 [4/4] 5.70ns
.preheader1131:154  %product_term_17 = fmul float %a_buf_9_load, %b_buf_9_load


 <State 99>: 7.26ns
ST_99: result_16 [3/5] 7.26ns
.preheader1131:151  %result_16 = fadd float %result_15, %product_term_16

ST_99: product_term_17 [3/4] 5.70ns
.preheader1131:154  %product_term_17 = fmul float %a_buf_9_load, %b_buf_9_load


 <State 100>: 7.26ns
ST_100: result_16 [2/5] 7.26ns
.preheader1131:151  %result_16 = fadd float %result_15, %product_term_16

ST_100: product_term_17 [2/4] 5.70ns
.preheader1131:154  %product_term_17 = fmul float %a_buf_9_load, %b_buf_9_load


 <State 101>: 7.26ns
ST_101: a_buf_9_addr_2 [1/1] 0.00ns
.preheader1131:48  %a_buf_9_addr_2 = getelementptr [64 x float]* %a_buf_9, i64 0, i64 %tmp_10

ST_101: a_buf_9_load_1 [2/2] 2.39ns
.preheader1131:49  %a_buf_9_load_1 = load float* %a_buf_9_addr_2, align 4

ST_101: result_16 [1/5] 7.26ns
.preheader1131:151  %result_16 = fadd float %result_15, %product_term_16

ST_101: product_term_17 [1/4] 5.70ns
.preheader1131:154  %product_term_17 = fmul float %a_buf_9_load, %b_buf_9_load

ST_101: b_buf_9_addr_2 [1/1] 0.00ns
.preheader1131:156  %b_buf_9_addr_2 = getelementptr [64 x float]* %b_buf_9, i64 0, i64 %tmp_12

ST_101: b_buf_9_load_1 [2/2] 2.39ns
.preheader1131:157  %b_buf_9_load_1 = load float* %b_buf_9_addr_2, align 4


 <State 102>: 7.26ns
ST_102: a_buf_9_load_1 [1/2] 2.39ns
.preheader1131:49  %a_buf_9_load_1 = load float* %a_buf_9_addr_2, align 4

ST_102: result_17 [5/5] 7.26ns
.preheader1131:155  %result_17 = fadd float %result_16, %product_term_17

ST_102: b_buf_9_load_1 [1/2] 2.39ns
.preheader1131:157  %b_buf_9_load_1 = load float* %b_buf_9_addr_2, align 4


 <State 103>: 7.26ns
ST_103: result_17 [4/5] 7.26ns
.preheader1131:155  %result_17 = fadd float %result_16, %product_term_17

ST_103: product_term_18 [4/4] 5.70ns
.preheader1131:158  %product_term_18 = fmul float %a_buf_9_load_1, %b_buf_9_load_1


 <State 104>: 7.26ns
ST_104: result_17 [3/5] 7.26ns
.preheader1131:155  %result_17 = fadd float %result_16, %product_term_17

ST_104: product_term_18 [3/4] 5.70ns
.preheader1131:158  %product_term_18 = fmul float %a_buf_9_load_1, %b_buf_9_load_1


 <State 105>: 7.26ns
ST_105: result_17 [2/5] 7.26ns
.preheader1131:155  %result_17 = fadd float %result_16, %product_term_17

ST_105: product_term_18 [2/4] 5.70ns
.preheader1131:158  %product_term_18 = fmul float %a_buf_9_load_1, %b_buf_9_load_1


 <State 106>: 7.26ns
ST_106: a_buf_10_addr_1 [1/1] 0.00ns
.preheader1131:50  %a_buf_10_addr_1 = getelementptr [64 x float]* %a_buf_10, i64 0, i64 %tmp_9

ST_106: a_buf_10_load [2/2] 2.39ns
.preheader1131:51  %a_buf_10_load = load float* %a_buf_10_addr_1, align 16

ST_106: result_17 [1/5] 7.26ns
.preheader1131:155  %result_17 = fadd float %result_16, %product_term_17

ST_106: product_term_18 [1/4] 5.70ns
.preheader1131:158  %product_term_18 = fmul float %a_buf_9_load_1, %b_buf_9_load_1

ST_106: b_buf_10_addr_1 [1/1] 0.00ns
.preheader1131:160  %b_buf_10_addr_1 = getelementptr [64 x float]* %b_buf_10, i64 0, i64 %tmp_11

ST_106: b_buf_10_load [2/2] 2.39ns
.preheader1131:161  %b_buf_10_load = load float* %b_buf_10_addr_1, align 4


 <State 107>: 7.26ns
ST_107: a_buf_10_load [1/2] 2.39ns
.preheader1131:51  %a_buf_10_load = load float* %a_buf_10_addr_1, align 16

ST_107: result_18 [5/5] 7.26ns
.preheader1131:159  %result_18 = fadd float %result_17, %product_term_18

ST_107: b_buf_10_load [1/2] 2.39ns
.preheader1131:161  %b_buf_10_load = load float* %b_buf_10_addr_1, align 4


 <State 108>: 7.26ns
ST_108: result_18 [4/5] 7.26ns
.preheader1131:159  %result_18 = fadd float %result_17, %product_term_18

ST_108: product_term_19 [4/4] 5.70ns
.preheader1131:162  %product_term_19 = fmul float %a_buf_10_load, %b_buf_10_load


 <State 109>: 7.26ns
ST_109: result_18 [3/5] 7.26ns
.preheader1131:159  %result_18 = fadd float %result_17, %product_term_18

ST_109: product_term_19 [3/4] 5.70ns
.preheader1131:162  %product_term_19 = fmul float %a_buf_10_load, %b_buf_10_load


 <State 110>: 7.26ns
ST_110: result_18 [2/5] 7.26ns
.preheader1131:159  %result_18 = fadd float %result_17, %product_term_18

ST_110: product_term_19 [2/4] 5.70ns
.preheader1131:162  %product_term_19 = fmul float %a_buf_10_load, %b_buf_10_load


 <State 111>: 7.26ns
ST_111: a_buf_10_addr_2 [1/1] 0.00ns
.preheader1131:52  %a_buf_10_addr_2 = getelementptr [64 x float]* %a_buf_10, i64 0, i64 %tmp_10

ST_111: a_buf_10_load_1 [2/2] 2.39ns
.preheader1131:53  %a_buf_10_load_1 = load float* %a_buf_10_addr_2, align 4

ST_111: result_18 [1/5] 7.26ns
.preheader1131:159  %result_18 = fadd float %result_17, %product_term_18

ST_111: product_term_19 [1/4] 5.70ns
.preheader1131:162  %product_term_19 = fmul float %a_buf_10_load, %b_buf_10_load

ST_111: b_buf_10_addr_2 [1/1] 0.00ns
.preheader1131:164  %b_buf_10_addr_2 = getelementptr [64 x float]* %b_buf_10, i64 0, i64 %tmp_12

ST_111: b_buf_10_load_1 [2/2] 2.39ns
.preheader1131:165  %b_buf_10_load_1 = load float* %b_buf_10_addr_2, align 4


 <State 112>: 7.26ns
ST_112: a_buf_10_load_1 [1/2] 2.39ns
.preheader1131:53  %a_buf_10_load_1 = load float* %a_buf_10_addr_2, align 4

ST_112: result_19 [5/5] 7.26ns
.preheader1131:163  %result_19 = fadd float %result_18, %product_term_19

ST_112: b_buf_10_load_1 [1/2] 2.39ns
.preheader1131:165  %b_buf_10_load_1 = load float* %b_buf_10_addr_2, align 4


 <State 113>: 7.26ns
ST_113: result_19 [4/5] 7.26ns
.preheader1131:163  %result_19 = fadd float %result_18, %product_term_19

ST_113: product_term_20 [4/4] 5.70ns
.preheader1131:166  %product_term_20 = fmul float %a_buf_10_load_1, %b_buf_10_load_1


 <State 114>: 7.26ns
ST_114: result_19 [3/5] 7.26ns
.preheader1131:163  %result_19 = fadd float %result_18, %product_term_19

ST_114: product_term_20 [3/4] 5.70ns
.preheader1131:166  %product_term_20 = fmul float %a_buf_10_load_1, %b_buf_10_load_1


 <State 115>: 7.26ns
ST_115: result_19 [2/5] 7.26ns
.preheader1131:163  %result_19 = fadd float %result_18, %product_term_19

ST_115: product_term_20 [2/4] 5.70ns
.preheader1131:166  %product_term_20 = fmul float %a_buf_10_load_1, %b_buf_10_load_1


 <State 116>: 7.26ns
ST_116: a_buf_11_addr_1 [1/1] 0.00ns
.preheader1131:54  %a_buf_11_addr_1 = getelementptr [64 x float]* %a_buf_11, i64 0, i64 %tmp_9

ST_116: a_buf_11_load [2/2] 2.39ns
.preheader1131:55  %a_buf_11_load = load float* %a_buf_11_addr_1, align 8

ST_116: result_19 [1/5] 7.26ns
.preheader1131:163  %result_19 = fadd float %result_18, %product_term_19

ST_116: product_term_20 [1/4] 5.70ns
.preheader1131:166  %product_term_20 = fmul float %a_buf_10_load_1, %b_buf_10_load_1

ST_116: b_buf_11_addr_1 [1/1] 0.00ns
.preheader1131:168  %b_buf_11_addr_1 = getelementptr [64 x float]* %b_buf_11, i64 0, i64 %tmp_11

ST_116: b_buf_11_load [2/2] 2.39ns
.preheader1131:169  %b_buf_11_load = load float* %b_buf_11_addr_1, align 4


 <State 117>: 7.26ns
ST_117: a_buf_11_load [1/2] 2.39ns
.preheader1131:55  %a_buf_11_load = load float* %a_buf_11_addr_1, align 8

ST_117: result_20 [5/5] 7.26ns
.preheader1131:167  %result_20 = fadd float %result_19, %product_term_20

ST_117: b_buf_11_load [1/2] 2.39ns
.preheader1131:169  %b_buf_11_load = load float* %b_buf_11_addr_1, align 4


 <State 118>: 7.26ns
ST_118: result_20 [4/5] 7.26ns
.preheader1131:167  %result_20 = fadd float %result_19, %product_term_20

ST_118: product_term_21 [4/4] 5.70ns
.preheader1131:170  %product_term_21 = fmul float %a_buf_11_load, %b_buf_11_load


 <State 119>: 7.26ns
ST_119: result_20 [3/5] 7.26ns
.preheader1131:167  %result_20 = fadd float %result_19, %product_term_20

ST_119: product_term_21 [3/4] 5.70ns
.preheader1131:170  %product_term_21 = fmul float %a_buf_11_load, %b_buf_11_load


 <State 120>: 7.26ns
ST_120: result_20 [2/5] 7.26ns
.preheader1131:167  %result_20 = fadd float %result_19, %product_term_20

ST_120: product_term_21 [2/4] 5.70ns
.preheader1131:170  %product_term_21 = fmul float %a_buf_11_load, %b_buf_11_load


 <State 121>: 7.26ns
ST_121: a_buf_11_addr_2 [1/1] 0.00ns
.preheader1131:56  %a_buf_11_addr_2 = getelementptr [64 x float]* %a_buf_11, i64 0, i64 %tmp_10

ST_121: a_buf_11_load_1 [2/2] 2.39ns
.preheader1131:57  %a_buf_11_load_1 = load float* %a_buf_11_addr_2, align 4

ST_121: result_20 [1/5] 7.26ns
.preheader1131:167  %result_20 = fadd float %result_19, %product_term_20

ST_121: product_term_21 [1/4] 5.70ns
.preheader1131:170  %product_term_21 = fmul float %a_buf_11_load, %b_buf_11_load

ST_121: b_buf_11_addr_2 [1/1] 0.00ns
.preheader1131:172  %b_buf_11_addr_2 = getelementptr [64 x float]* %b_buf_11, i64 0, i64 %tmp_12

ST_121: b_buf_11_load_1 [2/2] 2.39ns
.preheader1131:173  %b_buf_11_load_1 = load float* %b_buf_11_addr_2, align 4


 <State 122>: 7.26ns
ST_122: a_buf_11_load_1 [1/2] 2.39ns
.preheader1131:57  %a_buf_11_load_1 = load float* %a_buf_11_addr_2, align 4

ST_122: result_21 [5/5] 7.26ns
.preheader1131:171  %result_21 = fadd float %result_20, %product_term_21

ST_122: b_buf_11_load_1 [1/2] 2.39ns
.preheader1131:173  %b_buf_11_load_1 = load float* %b_buf_11_addr_2, align 4


 <State 123>: 7.26ns
ST_123: result_21 [4/5] 7.26ns
.preheader1131:171  %result_21 = fadd float %result_20, %product_term_21

ST_123: product_term_22 [4/4] 5.70ns
.preheader1131:174  %product_term_22 = fmul float %a_buf_11_load_1, %b_buf_11_load_1


 <State 124>: 7.26ns
ST_124: result_21 [3/5] 7.26ns
.preheader1131:171  %result_21 = fadd float %result_20, %product_term_21

ST_124: product_term_22 [3/4] 5.70ns
.preheader1131:174  %product_term_22 = fmul float %a_buf_11_load_1, %b_buf_11_load_1


 <State 125>: 7.26ns
ST_125: result_21 [2/5] 7.26ns
.preheader1131:171  %result_21 = fadd float %result_20, %product_term_21

ST_125: product_term_22 [2/4] 5.70ns
.preheader1131:174  %product_term_22 = fmul float %a_buf_11_load_1, %b_buf_11_load_1


 <State 126>: 7.26ns
ST_126: a_buf_12_addr_1 [1/1] 0.00ns
.preheader1131:58  %a_buf_12_addr_1 = getelementptr [64 x float]* %a_buf_12, i64 0, i64 %tmp_9

ST_126: a_buf_12_load [2/2] 2.39ns
.preheader1131:59  %a_buf_12_load = load float* %a_buf_12_addr_1, align 16

ST_126: a_buf_13_addr_1 [1/1] 0.00ns
.preheader1131:62  %a_buf_13_addr_1 = getelementptr [64 x float]* %a_buf_13, i64 0, i64 %tmp_9

ST_126: a_buf_13_load [2/2] 2.39ns
.preheader1131:63  %a_buf_13_load = load float* %a_buf_13_addr_1, align 8

ST_126: a_buf_14_addr_1 [1/1] 0.00ns
.preheader1131:66  %a_buf_14_addr_1 = getelementptr [64 x float]* %a_buf_14, i64 0, i64 %tmp_9

ST_126: a_buf_14_load [2/2] 2.39ns
.preheader1131:67  %a_buf_14_load = load float* %a_buf_14_addr_1, align 16

ST_126: a_buf_15_addr_1 [1/1] 0.00ns
.preheader1131:70  %a_buf_15_addr_1 = getelementptr [64 x float]* %a_buf_15, i64 0, i64 %tmp_9

ST_126: a_buf_15_load [2/2] 2.39ns
.preheader1131:71  %a_buf_15_load = load float* %a_buf_15_addr_1, align 8

ST_126: result_21 [1/5] 7.26ns
.preheader1131:171  %result_21 = fadd float %result_20, %product_term_21

ST_126: product_term_22 [1/4] 5.70ns
.preheader1131:174  %product_term_22 = fmul float %a_buf_11_load_1, %b_buf_11_load_1

ST_126: b_buf_12_addr_1 [1/1] 0.00ns
.preheader1131:176  %b_buf_12_addr_1 = getelementptr [64 x float]* %b_buf_12, i64 0, i64 %tmp_11

ST_126: b_buf_12_load [2/2] 2.39ns
.preheader1131:177  %b_buf_12_load = load float* %b_buf_12_addr_1, align 4

ST_126: b_buf_13_addr_1 [1/1] 0.00ns
.preheader1131:184  %b_buf_13_addr_1 = getelementptr [64 x float]* %b_buf_13, i64 0, i64 %tmp_11

ST_126: b_buf_13_load [2/2] 2.39ns
.preheader1131:185  %b_buf_13_load = load float* %b_buf_13_addr_1, align 4

ST_126: b_buf_14_addr_1 [1/1] 0.00ns
.preheader1131:192  %b_buf_14_addr_1 = getelementptr [64 x float]* %b_buf_14, i64 0, i64 %tmp_11

ST_126: b_buf_14_load [2/2] 2.39ns
.preheader1131:193  %b_buf_14_load = load float* %b_buf_14_addr_1, align 4

ST_126: b_buf_15_addr_1 [1/1] 0.00ns
.preheader1131:200  %b_buf_15_addr_1 = getelementptr [64 x float]* %b_buf_15, i64 0, i64 %tmp_11

ST_126: b_buf_15_load [2/2] 2.39ns
.preheader1131:201  %b_buf_15_load = load float* %b_buf_15_addr_1, align 4


 <State 127>: 7.26ns
ST_127: a_buf_12_load [1/2] 2.39ns
.preheader1131:59  %a_buf_12_load = load float* %a_buf_12_addr_1, align 16

ST_127: a_buf_13_load [1/2] 2.39ns
.preheader1131:63  %a_buf_13_load = load float* %a_buf_13_addr_1, align 8

ST_127: a_buf_14_load [1/2] 2.39ns
.preheader1131:67  %a_buf_14_load = load float* %a_buf_14_addr_1, align 16

ST_127: a_buf_15_load [1/2] 2.39ns
.preheader1131:71  %a_buf_15_load = load float* %a_buf_15_addr_1, align 8

ST_127: result_22 [5/5] 7.26ns
.preheader1131:175  %result_22 = fadd float %result_21, %product_term_22

ST_127: b_buf_12_load [1/2] 2.39ns
.preheader1131:177  %b_buf_12_load = load float* %b_buf_12_addr_1, align 4

ST_127: b_buf_13_load [1/2] 2.39ns
.preheader1131:185  %b_buf_13_load = load float* %b_buf_13_addr_1, align 4

ST_127: b_buf_14_load [1/2] 2.39ns
.preheader1131:193  %b_buf_14_load = load float* %b_buf_14_addr_1, align 4

ST_127: b_buf_15_load [1/2] 2.39ns
.preheader1131:201  %b_buf_15_load = load float* %b_buf_15_addr_1, align 4


 <State 128>: 7.26ns
ST_128: result_22 [4/5] 7.26ns
.preheader1131:175  %result_22 = fadd float %result_21, %product_term_22

ST_128: product_term_23 [4/4] 5.70ns
.preheader1131:178  %product_term_23 = fmul float %a_buf_12_load, %b_buf_12_load

ST_128: product_term_25 [4/4] 5.70ns
.preheader1131:186  %product_term_25 = fmul float %a_buf_13_load, %b_buf_13_load

ST_128: product_term_27 [4/4] 5.70ns
.preheader1131:194  %product_term_27 = fmul float %a_buf_14_load, %b_buf_14_load

ST_128: product_term_29 [4/4] 5.70ns
.preheader1131:202  %product_term_29 = fmul float %a_buf_15_load, %b_buf_15_load


 <State 129>: 7.26ns
ST_129: result_22 [3/5] 7.26ns
.preheader1131:175  %result_22 = fadd float %result_21, %product_term_22

ST_129: product_term_23 [3/4] 5.70ns
.preheader1131:178  %product_term_23 = fmul float %a_buf_12_load, %b_buf_12_load

ST_129: product_term_25 [3/4] 5.70ns
.preheader1131:186  %product_term_25 = fmul float %a_buf_13_load, %b_buf_13_load

ST_129: product_term_27 [3/4] 5.70ns
.preheader1131:194  %product_term_27 = fmul float %a_buf_14_load, %b_buf_14_load

ST_129: product_term_29 [3/4] 5.70ns
.preheader1131:202  %product_term_29 = fmul float %a_buf_15_load, %b_buf_15_load


 <State 130>: 7.26ns
ST_130: result_22 [2/5] 7.26ns
.preheader1131:175  %result_22 = fadd float %result_21, %product_term_22

ST_130: product_term_23 [2/4] 5.70ns
.preheader1131:178  %product_term_23 = fmul float %a_buf_12_load, %b_buf_12_load

ST_130: product_term_25 [2/4] 5.70ns
.preheader1131:186  %product_term_25 = fmul float %a_buf_13_load, %b_buf_13_load

ST_130: product_term_27 [2/4] 5.70ns
.preheader1131:194  %product_term_27 = fmul float %a_buf_14_load, %b_buf_14_load

ST_130: product_term_29 [2/4] 5.70ns
.preheader1131:202  %product_term_29 = fmul float %a_buf_15_load, %b_buf_15_load


 <State 131>: 7.26ns
ST_131: a_buf_12_addr_2 [1/1] 0.00ns
.preheader1131:60  %a_buf_12_addr_2 = getelementptr [64 x float]* %a_buf_12, i64 0, i64 %tmp_10

ST_131: a_buf_12_load_1 [2/2] 2.39ns
.preheader1131:61  %a_buf_12_load_1 = load float* %a_buf_12_addr_2, align 4

ST_131: a_buf_13_addr_2 [1/1] 0.00ns
.preheader1131:64  %a_buf_13_addr_2 = getelementptr [64 x float]* %a_buf_13, i64 0, i64 %tmp_10

ST_131: a_buf_13_load_1 [2/2] 2.39ns
.preheader1131:65  %a_buf_13_load_1 = load float* %a_buf_13_addr_2, align 4

ST_131: a_buf_14_addr_2 [1/1] 0.00ns
.preheader1131:68  %a_buf_14_addr_2 = getelementptr [64 x float]* %a_buf_14, i64 0, i64 %tmp_10

ST_131: a_buf_14_load_1 [2/2] 2.39ns
.preheader1131:69  %a_buf_14_load_1 = load float* %a_buf_14_addr_2, align 4

ST_131: a_buf_15_addr_2 [1/1] 0.00ns
.preheader1131:72  %a_buf_15_addr_2 = getelementptr [64 x float]* %a_buf_15, i64 0, i64 %tmp_10

ST_131: a_buf_15_load_1 [2/2] 2.39ns
.preheader1131:73  %a_buf_15_load_1 = load float* %a_buf_15_addr_2, align 4

ST_131: result_22 [1/5] 7.26ns
.preheader1131:175  %result_22 = fadd float %result_21, %product_term_22

ST_131: product_term_23 [1/4] 5.70ns
.preheader1131:178  %product_term_23 = fmul float %a_buf_12_load, %b_buf_12_load

ST_131: b_buf_12_addr_2 [1/1] 0.00ns
.preheader1131:180  %b_buf_12_addr_2 = getelementptr [64 x float]* %b_buf_12, i64 0, i64 %tmp_12

ST_131: b_buf_12_load_1 [2/2] 2.39ns
.preheader1131:181  %b_buf_12_load_1 = load float* %b_buf_12_addr_2, align 4

ST_131: product_term_25 [1/4] 5.70ns
.preheader1131:186  %product_term_25 = fmul float %a_buf_13_load, %b_buf_13_load

ST_131: b_buf_13_addr_2 [1/1] 0.00ns
.preheader1131:188  %b_buf_13_addr_2 = getelementptr [64 x float]* %b_buf_13, i64 0, i64 %tmp_12

ST_131: b_buf_13_load_1 [2/2] 2.39ns
.preheader1131:189  %b_buf_13_load_1 = load float* %b_buf_13_addr_2, align 4

ST_131: product_term_27 [1/4] 5.70ns
.preheader1131:194  %product_term_27 = fmul float %a_buf_14_load, %b_buf_14_load

ST_131: b_buf_14_addr_2 [1/1] 0.00ns
.preheader1131:196  %b_buf_14_addr_2 = getelementptr [64 x float]* %b_buf_14, i64 0, i64 %tmp_12

ST_131: b_buf_14_load_1 [2/2] 2.39ns
.preheader1131:197  %b_buf_14_load_1 = load float* %b_buf_14_addr_2, align 4

ST_131: product_term_29 [1/4] 5.70ns
.preheader1131:202  %product_term_29 = fmul float %a_buf_15_load, %b_buf_15_load

ST_131: b_buf_15_addr_2 [1/1] 0.00ns
.preheader1131:204  %b_buf_15_addr_2 = getelementptr [64 x float]* %b_buf_15, i64 0, i64 %tmp_12

ST_131: b_buf_15_load_1 [2/2] 2.39ns
.preheader1131:205  %b_buf_15_load_1 = load float* %b_buf_15_addr_2, align 4


 <State 132>: 7.26ns
ST_132: a_buf_12_load_1 [1/2] 2.39ns
.preheader1131:61  %a_buf_12_load_1 = load float* %a_buf_12_addr_2, align 4

ST_132: a_buf_13_load_1 [1/2] 2.39ns
.preheader1131:65  %a_buf_13_load_1 = load float* %a_buf_13_addr_2, align 4

ST_132: a_buf_14_load_1 [1/2] 2.39ns
.preheader1131:69  %a_buf_14_load_1 = load float* %a_buf_14_addr_2, align 4

ST_132: a_buf_15_load_1 [1/2] 2.39ns
.preheader1131:73  %a_buf_15_load_1 = load float* %a_buf_15_addr_2, align 4

ST_132: result_23 [5/5] 7.26ns
.preheader1131:179  %result_23 = fadd float %result_22, %product_term_23

ST_132: b_buf_12_load_1 [1/2] 2.39ns
.preheader1131:181  %b_buf_12_load_1 = load float* %b_buf_12_addr_2, align 4

ST_132: b_buf_13_load_1 [1/2] 2.39ns
.preheader1131:189  %b_buf_13_load_1 = load float* %b_buf_13_addr_2, align 4

ST_132: b_buf_14_load_1 [1/2] 2.39ns
.preheader1131:197  %b_buf_14_load_1 = load float* %b_buf_14_addr_2, align 4

ST_132: b_buf_15_load_1 [1/2] 2.39ns
.preheader1131:205  %b_buf_15_load_1 = load float* %b_buf_15_addr_2, align 4


 <State 133>: 7.26ns
ST_133: result_23 [4/5] 7.26ns
.preheader1131:179  %result_23 = fadd float %result_22, %product_term_23

ST_133: product_term_24 [4/4] 5.70ns
.preheader1131:182  %product_term_24 = fmul float %a_buf_12_load_1, %b_buf_12_load_1

ST_133: product_term_26 [4/4] 5.70ns
.preheader1131:190  %product_term_26 = fmul float %a_buf_13_load_1, %b_buf_13_load_1

ST_133: product_term_28 [4/4] 5.70ns
.preheader1131:198  %product_term_28 = fmul float %a_buf_14_load_1, %b_buf_14_load_1

ST_133: product_term_30 [4/4] 5.70ns
.preheader1131:206  %product_term_30 = fmul float %a_buf_15_load_1, %b_buf_15_load_1


 <State 134>: 7.26ns
ST_134: result_23 [3/5] 7.26ns
.preheader1131:179  %result_23 = fadd float %result_22, %product_term_23

ST_134: product_term_24 [3/4] 5.70ns
.preheader1131:182  %product_term_24 = fmul float %a_buf_12_load_1, %b_buf_12_load_1

ST_134: product_term_26 [3/4] 5.70ns
.preheader1131:190  %product_term_26 = fmul float %a_buf_13_load_1, %b_buf_13_load_1

ST_134: product_term_28 [3/4] 5.70ns
.preheader1131:198  %product_term_28 = fmul float %a_buf_14_load_1, %b_buf_14_load_1

ST_134: product_term_30 [3/4] 5.70ns
.preheader1131:206  %product_term_30 = fmul float %a_buf_15_load_1, %b_buf_15_load_1


 <State 135>: 7.26ns
ST_135: result_23 [2/5] 7.26ns
.preheader1131:179  %result_23 = fadd float %result_22, %product_term_23

ST_135: product_term_24 [2/4] 5.70ns
.preheader1131:182  %product_term_24 = fmul float %a_buf_12_load_1, %b_buf_12_load_1

ST_135: product_term_26 [2/4] 5.70ns
.preheader1131:190  %product_term_26 = fmul float %a_buf_13_load_1, %b_buf_13_load_1

ST_135: product_term_28 [2/4] 5.70ns
.preheader1131:198  %product_term_28 = fmul float %a_buf_14_load_1, %b_buf_14_load_1

ST_135: product_term_30 [2/4] 5.70ns
.preheader1131:206  %product_term_30 = fmul float %a_buf_15_load_1, %b_buf_15_load_1


 <State 136>: 7.26ns
ST_136: result_23 [1/5] 7.26ns
.preheader1131:179  %result_23 = fadd float %result_22, %product_term_23

ST_136: product_term_24 [1/4] 5.70ns
.preheader1131:182  %product_term_24 = fmul float %a_buf_12_load_1, %b_buf_12_load_1

ST_136: product_term_26 [1/4] 5.70ns
.preheader1131:190  %product_term_26 = fmul float %a_buf_13_load_1, %b_buf_13_load_1

ST_136: product_term_28 [1/4] 5.70ns
.preheader1131:198  %product_term_28 = fmul float %a_buf_14_load_1, %b_buf_14_load_1

ST_136: product_term_30 [1/4] 5.70ns
.preheader1131:206  %product_term_30 = fmul float %a_buf_15_load_1, %b_buf_15_load_1


 <State 137>: 7.26ns
ST_137: result_24 [5/5] 7.26ns
.preheader1131:183  %result_24 = fadd float %result_23, %product_term_24


 <State 138>: 7.26ns
ST_138: result_24 [4/5] 7.26ns
.preheader1131:183  %result_24 = fadd float %result_23, %product_term_24


 <State 139>: 7.26ns
ST_139: result_24 [3/5] 7.26ns
.preheader1131:183  %result_24 = fadd float %result_23, %product_term_24


 <State 140>: 7.26ns
ST_140: result_24 [2/5] 7.26ns
.preheader1131:183  %result_24 = fadd float %result_23, %product_term_24


 <State 141>: 7.26ns
ST_141: result_24 [1/5] 7.26ns
.preheader1131:183  %result_24 = fadd float %result_23, %product_term_24


 <State 142>: 7.26ns
ST_142: result_25 [5/5] 7.26ns
.preheader1131:187  %result_25 = fadd float %result_24, %product_term_25


 <State 143>: 7.26ns
ST_143: result_25 [4/5] 7.26ns
.preheader1131:187  %result_25 = fadd float %result_24, %product_term_25


 <State 144>: 7.26ns
ST_144: result_25 [3/5] 7.26ns
.preheader1131:187  %result_25 = fadd float %result_24, %product_term_25


 <State 145>: 7.26ns
ST_145: result_25 [2/5] 7.26ns
.preheader1131:187  %result_25 = fadd float %result_24, %product_term_25


 <State 146>: 7.26ns
ST_146: result_25 [1/5] 7.26ns
.preheader1131:187  %result_25 = fadd float %result_24, %product_term_25


 <State 147>: 7.26ns
ST_147: result_26 [5/5] 7.26ns
.preheader1131:191  %result_26 = fadd float %result_25, %product_term_26


 <State 148>: 7.26ns
ST_148: result_26 [4/5] 7.26ns
.preheader1131:191  %result_26 = fadd float %result_25, %product_term_26


 <State 149>: 7.26ns
ST_149: result_26 [3/5] 7.26ns
.preheader1131:191  %result_26 = fadd float %result_25, %product_term_26


 <State 150>: 7.26ns
ST_150: result_26 [2/5] 7.26ns
.preheader1131:191  %result_26 = fadd float %result_25, %product_term_26


 <State 151>: 7.26ns
ST_151: result_26 [1/5] 7.26ns
.preheader1131:191  %result_26 = fadd float %result_25, %product_term_26


 <State 152>: 7.26ns
ST_152: result_27 [5/5] 7.26ns
.preheader1131:195  %result_27 = fadd float %result_26, %product_term_27


 <State 153>: 7.26ns
ST_153: result_27 [4/5] 7.26ns
.preheader1131:195  %result_27 = fadd float %result_26, %product_term_27


 <State 154>: 7.26ns
ST_154: result_27 [3/5] 7.26ns
.preheader1131:195  %result_27 = fadd float %result_26, %product_term_27


 <State 155>: 7.26ns
ST_155: result_27 [2/5] 7.26ns
.preheader1131:195  %result_27 = fadd float %result_26, %product_term_27


 <State 156>: 7.26ns
ST_156: result_27 [1/5] 7.26ns
.preheader1131:195  %result_27 = fadd float %result_26, %product_term_27


 <State 157>: 7.26ns
ST_157: result_28 [5/5] 7.26ns
.preheader1131:199  %result_28 = fadd float %result_27, %product_term_28


 <State 158>: 7.26ns
ST_158: result_28 [4/5] 7.26ns
.preheader1131:199  %result_28 = fadd float %result_27, %product_term_28


 <State 159>: 7.26ns
ST_159: result_28 [3/5] 7.26ns
.preheader1131:199  %result_28 = fadd float %result_27, %product_term_28


 <State 160>: 7.26ns
ST_160: result_28 [2/5] 7.26ns
.preheader1131:199  %result_28 = fadd float %result_27, %product_term_28


 <State 161>: 7.26ns
ST_161: result_28 [1/5] 7.26ns
.preheader1131:199  %result_28 = fadd float %result_27, %product_term_28


 <State 162>: 7.26ns
ST_162: result_29 [5/5] 7.26ns
.preheader1131:203  %result_29 = fadd float %result_28, %product_term_29


 <State 163>: 7.26ns
ST_163: result_29 [4/5] 7.26ns
.preheader1131:203  %result_29 = fadd float %result_28, %product_term_29


 <State 164>: 7.26ns
ST_164: result_29 [3/5] 7.26ns
.preheader1131:203  %result_29 = fadd float %result_28, %product_term_29


 <State 165>: 7.26ns
ST_165: result_29 [2/5] 7.26ns
.preheader1131:203  %result_29 = fadd float %result_28, %product_term_29


 <State 166>: 7.26ns
ST_166: result_29 [1/5] 7.26ns
.preheader1131:203  %result_29 = fadd float %result_28, %product_term_29


 <State 167>: 7.26ns
ST_167: result_30 [5/5] 7.26ns
.preheader1131:207  %result_30 = fadd float %result_29, %product_term_30


 <State 168>: 7.26ns
ST_168: result_30 [4/5] 7.26ns
.preheader1131:207  %result_30 = fadd float %result_29, %product_term_30


 <State 169>: 7.26ns
ST_169: result_30 [3/5] 7.26ns
.preheader1131:207  %result_30 = fadd float %result_29, %product_term_30


 <State 170>: 7.26ns
ST_170: result_30 [2/5] 7.26ns
.preheader1131:207  %result_30 = fadd float %result_29, %product_term_30


 <State 171>: 7.26ns
ST_171: result_30 [1/5] 7.26ns
.preheader1131:207  %result_30 = fadd float %result_29, %product_term_30


 <State 172>: 1.86ns
ST_172: empty_9 [1/1] 0.00ns
.preheader1131:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_172: tmp_2 [1/1] 0.00ns
.preheader1131:74  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2) nounwind

ST_172: stg_859 [1/1] 0.00ns
.preheader1131:75  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_172: stg_860 [1/1] 1.86ns
.preheader1131:208  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %out_C, float %result_30)

ST_172: empty_10 [1/1] 0.00ns
.preheader1131:209  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp_2) nounwind

ST_172: stg_862 [1/1] 0.00ns
.preheader1131:211  br label %.preheader.i


 <State 173>: 0.00ns
ST_173: stg_863 [1/1] 0.00ns
mmult_kernel.exit:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
