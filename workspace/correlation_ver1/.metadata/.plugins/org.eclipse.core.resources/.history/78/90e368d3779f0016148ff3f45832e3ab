// (c) Copyright 1995-2016 Xilinx, Inc. All rights reserved.
// 
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
// 
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
// 
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
// 
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES.
// 
// DO NOT MODIFY THIS FILE.

// IP VLNV: xilinx.com:hls:mmult:1.0
// IP Revision: 1610311524

// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.

//----------- Begin Cut here for INSTANTIATION Template ---// INST_TAG
zed_mmult_0_0 your_instance_name (
  .ap_clk(ap_clk),      // input wire ap_clk
  .ap_rst_n(ap_rst_n),  // input wire ap_rst_n
  .A_TVALID(A_TVALID),  // input wire A_TVALID
  .A_TREADY(A_TREADY),  // output wire A_TREADY
  .A_TDATA(A_TDATA),    // input wire [31 : 0] A_TDATA
  .A_TDEST(A_TDEST),    // input wire [0 : 0] A_TDEST
  .A_TKEEP(A_TKEEP),    // input wire [3 : 0] A_TKEEP
  .A_TSTRB(A_TSTRB),    // input wire [3 : 0] A_TSTRB
  .A_TUSER(A_TUSER),    // input wire [0 : 0] A_TUSER
  .A_TLAST(A_TLAST),    // input wire [0 : 0] A_TLAST
  .A_TID(A_TID),        // input wire [0 : 0] A_TID
  .B_TVALID(B_TVALID),  // input wire B_TVALID
  .B_TREADY(B_TREADY),  // output wire B_TREADY
  .B_TDATA(B_TDATA),    // input wire [31 : 0] B_TDATA
  .B_TDEST(B_TDEST),    // input wire [0 : 0] B_TDEST
  .B_TKEEP(B_TKEEP),    // input wire [3 : 0] B_TKEEP
  .B_TSTRB(B_TSTRB),    // input wire [3 : 0] B_TSTRB
  .B_TUSER(B_TUSER),    // input wire [0 : 0] B_TUSER
  .B_TLAST(B_TLAST),    // input wire [0 : 0] B_TLAST
  .B_TID(B_TID),        // input wire [0 : 0] B_TID
  .C_TVALID(C_TVALID),  // output wire C_TVALID
  .C_TREADY(C_TREADY),  // input wire C_TREADY
  .C_TDATA(C_TDATA),    // output wire [31 : 0] C_TDATA
  .C_TDEST(C_TDEST),    // output wire [0 : 0] C_TDEST
  .C_TKEEP(C_TKEEP),    // output wire [3 : 0] C_TKEEP
  .C_TSTRB(C_TSTRB),    // output wire [3 : 0] C_TSTRB
  .C_TUSER(C_TUSER),    // output wire [0 : 0] C_TUSER
  .C_TLAST(C_TLAST),    // output wire [0 : 0] C_TLAST
  .C_TID(C_TID)        // output wire [0 : 0] C_TID
);
// INST_TAG_END ------ End INSTANTIATION Template ---------

// You must compile the wrapper file zed_mmult_0_0.v when simulating
// the core, zed_mmult_0_0. When compiling the wrapper file, be sure to
// reference the Verilog simulation library.

