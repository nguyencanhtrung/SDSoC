// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="correlation_accel_v1,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=8.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.646000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=68,HLS_SYN_FF=11473,HLS_SYN_LUT=15424}" *)

module correlation_accel_v1 (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem32_AWVALID,
        m_axi_gmem32_AWREADY,
        m_axi_gmem32_AWADDR,
        m_axi_gmem32_AWID,
        m_axi_gmem32_AWLEN,
        m_axi_gmem32_AWSIZE,
        m_axi_gmem32_AWBURST,
        m_axi_gmem32_AWLOCK,
        m_axi_gmem32_AWCACHE,
        m_axi_gmem32_AWPROT,
        m_axi_gmem32_AWQOS,
        m_axi_gmem32_AWREGION,
        m_axi_gmem32_AWUSER,
        m_axi_gmem32_WVALID,
        m_axi_gmem32_WREADY,
        m_axi_gmem32_WDATA,
        m_axi_gmem32_WSTRB,
        m_axi_gmem32_WLAST,
        m_axi_gmem32_WID,
        m_axi_gmem32_WUSER,
        m_axi_gmem32_ARVALID,
        m_axi_gmem32_ARREADY,
        m_axi_gmem32_ARADDR,
        m_axi_gmem32_ARID,
        m_axi_gmem32_ARLEN,
        m_axi_gmem32_ARSIZE,
        m_axi_gmem32_ARBURST,
        m_axi_gmem32_ARLOCK,
        m_axi_gmem32_ARCACHE,
        m_axi_gmem32_ARPROT,
        m_axi_gmem32_ARQOS,
        m_axi_gmem32_ARREGION,
        m_axi_gmem32_ARUSER,
        m_axi_gmem32_RVALID,
        m_axi_gmem32_RREADY,
        m_axi_gmem32_RDATA,
        m_axi_gmem32_RLAST,
        m_axi_gmem32_RID,
        m_axi_gmem32_RUSER,
        m_axi_gmem32_RRESP,
        m_axi_gmem32_BVALID,
        m_axi_gmem32_BREADY,
        m_axi_gmem32_BRESP,
        m_axi_gmem32_BID,
        m_axi_gmem32_BUSER,
        number_of_days,
        number_of_indices,
        in_indices,
        out_correlation,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 146'b1;
parameter    ap_ST_st2_fsm_1 = 146'b10;
parameter    ap_ST_st3_fsm_2 = 146'b100;
parameter    ap_ST_st4_fsm_3 = 146'b1000;
parameter    ap_ST_st5_fsm_4 = 146'b10000;
parameter    ap_ST_st6_fsm_5 = 146'b100000;
parameter    ap_ST_st7_fsm_6 = 146'b1000000;
parameter    ap_ST_st8_fsm_7 = 146'b10000000;
parameter    ap_ST_st9_fsm_8 = 146'b100000000;
parameter    ap_ST_st10_fsm_9 = 146'b1000000000;
parameter    ap_ST_st11_fsm_10 = 146'b10000000000;
parameter    ap_ST_st12_fsm_11 = 146'b100000000000;
parameter    ap_ST_st13_fsm_12 = 146'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 146'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 146'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 146'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 146'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 146'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 146'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 146'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 146'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 146'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 146'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 146'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 146'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 146'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 146'b100000000000000000000000000;
parameter    ap_ST_pp0_stg0_fsm_27 = 146'b1000000000000000000000000000;
parameter    ap_ST_st31_fsm_28 = 146'b10000000000000000000000000000;
parameter    ap_ST_st32_fsm_29 = 146'b100000000000000000000000000000;
parameter    ap_ST_st33_fsm_30 = 146'b1000000000000000000000000000000;
parameter    ap_ST_st34_fsm_31 = 146'b10000000000000000000000000000000;
parameter    ap_ST_st35_fsm_32 = 146'b100000000000000000000000000000000;
parameter    ap_ST_st36_fsm_33 = 146'b1000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_34 = 146'b10000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_35 = 146'b100000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_36 = 146'b1000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_37 = 146'b10000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_38 = 146'b100000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_39 = 146'b1000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_40 = 146'b10000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_41 = 146'b100000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_42 = 146'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_43 = 146'b10000000000000000000000000000000000000000000;
parameter    ap_ST_pp1_stg0_fsm_44 = 146'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_45 = 146'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_46 = 146'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_47 = 146'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_pp2_stg0_fsm_48 = 146'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_49 = 146'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_50 = 146'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg0_fsm_51 = 146'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg1_fsm_52 = 146'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg2_fsm_53 = 146'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg3_fsm_54 = 146'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg4_fsm_55 = 146'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_56 = 146'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_57 = 146'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_58 = 146'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_59 = 146'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_60 = 146'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_61 = 146'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_62 = 146'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_63 = 146'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_64 = 146'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_65 = 146'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_66 = 146'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_67 = 146'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_68 = 146'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_69 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_70 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_71 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_72 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_73 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_74 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_75 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_76 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_77 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_78 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_79 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_80 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_81 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_82 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_83 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_84 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_85 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_86 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st140_fsm_87 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st141_fsm_88 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st142_fsm_89 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st143_fsm_90 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st144_fsm_91 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st145_fsm_92 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st146_fsm_93 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st147_fsm_94 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st148_fsm_95 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_96 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st150_fsm_97 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st151_fsm_98 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st152_fsm_99 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st153_fsm_100 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st154_fsm_101 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st155_fsm_102 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st156_fsm_103 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st157_fsm_104 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st158_fsm_105 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st159_fsm_106 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st160_fsm_107 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st161_fsm_108 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st162_fsm_109 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st163_fsm_110 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st164_fsm_111 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st165_fsm_112 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st166_fsm_113 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st167_fsm_114 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st168_fsm_115 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st169_fsm_116 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st170_fsm_117 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st171_fsm_118 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st172_fsm_119 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st173_fsm_120 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st174_fsm_121 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st175_fsm_122 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st176_fsm_123 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st177_fsm_124 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st178_fsm_125 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st179_fsm_126 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st180_fsm_127 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st181_fsm_128 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st182_fsm_129 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st183_fsm_130 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st184_fsm_131 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st185_fsm_132 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st186_fsm_133 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st187_fsm_134 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st188_fsm_135 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st189_fsm_136 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st190_fsm_137 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st191_fsm_138 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st192_fsm_139 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st193_fsm_140 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st194_fsm_141 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st195_fsm_142 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st196_fsm_143 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st197_fsm_144 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st198_fsm_145 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    C_M_AXI_GMEM32_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM32_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM32_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_M_AXI_GMEM32_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_BUSER_WIDTH = 1;
parameter    C_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM32_USER_VALUE = 0;
parameter    C_M_AXI_GMEM32_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM32_CACHE_VALUE = 3;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_7D = 32'b1111101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_8D = 32'b10001101;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_69 = 32'b1101001;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv32_79 = 32'b1111001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv31_2 = 31'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_8E = 32'b10001110;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_66 = 32'b1100110;
parameter    ap_const_lv32_3F70A3D7 = 32'b111111011100001010001111010111;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_7E = 32'b1111110;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv8_FC = 8'b11111100;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv31_6 = 31'b110;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_81 = 32'b10000001;
parameter    ap_const_lv32_82 = 32'b10000010;
parameter    ap_const_lv32_83 = 32'b10000011;
parameter    ap_const_lv32_84 = 32'b10000100;
parameter    ap_const_lv32_85 = 32'b10000101;
parameter    ap_const_lv32_86 = 32'b10000110;
parameter    ap_const_lv32_87 = 32'b10000111;
parameter    ap_const_lv32_88 = 32'b10001000;
parameter    ap_const_lv32_89 = 32'b10001001;
parameter    ap_const_lv32_8A = 32'b10001010;
parameter    ap_const_lv32_8B = 32'b10001011;
parameter    ap_const_lv32_8C = 32'b10001100;
parameter    C_M_AXI_GMEM32_WSTRB_WIDTH = (C_M_AXI_GMEM32_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem32_AWVALID;
input   m_axi_gmem32_AWREADY;
output  [C_M_AXI_GMEM32_ADDR_WIDTH - 1 : 0] m_axi_gmem32_AWADDR;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_AWID;
output  [7:0] m_axi_gmem32_AWLEN;
output  [2:0] m_axi_gmem32_AWSIZE;
output  [1:0] m_axi_gmem32_AWBURST;
output  [1:0] m_axi_gmem32_AWLOCK;
output  [3:0] m_axi_gmem32_AWCACHE;
output  [2:0] m_axi_gmem32_AWPROT;
output  [3:0] m_axi_gmem32_AWQOS;
output  [3:0] m_axi_gmem32_AWREGION;
output  [C_M_AXI_GMEM32_AWUSER_WIDTH - 1 : 0] m_axi_gmem32_AWUSER;
output   m_axi_gmem32_WVALID;
input   m_axi_gmem32_WREADY;
output  [C_M_AXI_GMEM32_DATA_WIDTH - 1 : 0] m_axi_gmem32_WDATA;
output  [C_M_AXI_GMEM32_WSTRB_WIDTH - 1 : 0] m_axi_gmem32_WSTRB;
output   m_axi_gmem32_WLAST;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_WID;
output  [C_M_AXI_GMEM32_WUSER_WIDTH - 1 : 0] m_axi_gmem32_WUSER;
output   m_axi_gmem32_ARVALID;
input   m_axi_gmem32_ARREADY;
output  [C_M_AXI_GMEM32_ADDR_WIDTH - 1 : 0] m_axi_gmem32_ARADDR;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_ARID;
output  [7:0] m_axi_gmem32_ARLEN;
output  [2:0] m_axi_gmem32_ARSIZE;
output  [1:0] m_axi_gmem32_ARBURST;
output  [1:0] m_axi_gmem32_ARLOCK;
output  [3:0] m_axi_gmem32_ARCACHE;
output  [2:0] m_axi_gmem32_ARPROT;
output  [3:0] m_axi_gmem32_ARQOS;
output  [3:0] m_axi_gmem32_ARREGION;
output  [C_M_AXI_GMEM32_ARUSER_WIDTH - 1 : 0] m_axi_gmem32_ARUSER;
input   m_axi_gmem32_RVALID;
output   m_axi_gmem32_RREADY;
input  [C_M_AXI_GMEM32_DATA_WIDTH - 1 : 0] m_axi_gmem32_RDATA;
input   m_axi_gmem32_RLAST;
input  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_RID;
input  [C_M_AXI_GMEM32_RUSER_WIDTH - 1 : 0] m_axi_gmem32_RUSER;
input  [1:0] m_axi_gmem32_RRESP;
input   m_axi_gmem32_BVALID;
output   m_axi_gmem32_BREADY;
input  [1:0] m_axi_gmem32_BRESP;
input  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_BID;
input  [C_M_AXI_GMEM32_BUSER_WIDTH - 1 : 0] m_axi_gmem32_BUSER;
input  [31:0] number_of_days;
input  [31:0] number_of_indices;
input  [31:0] in_indices;
input  [31:0] out_correlation;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [145:0] ap_CS_fsm = 146'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_164;
reg   [7:0] weight_rom_address0;
reg    weight_rom_ce0;
reg    weight_rom_we0;
reg   [31:0] weight_rom_d0;
wire   [31:0] weight_rom_q0;
reg   [7:0] weight_rom_address1;
reg    weight_rom_ce1;
reg    weight_rom_we1;
reg   [31:0] weight_rom_d1;
wire   [31:0] weight_rom_q1;
reg   [7:0] bramA_address0;
reg    bramA_ce0;
reg    bramA_we0;
wire   [31:0] bramA_d0;
wire   [31:0] bramA_q0;
wire   [7:0] bramA_address1;
reg    bramA_ce1;
wire   [31:0] bramA_q1;
reg   [7:0] bramB_address0;
reg    bramB_ce0;
reg    bramB_we0;
wire   [31:0] bramB_d0;
wire   [31:0] bramB_q0;
wire   [7:0] bramB_address1;
reg    bramB_ce1;
wire   [31:0] bramB_q1;
reg    gmem32_AWVALID;
wire    gmem32_AWREADY;
wire   [31:0] gmem32_AWADDR;
wire   [0:0] gmem32_AWID;
wire   [31:0] gmem32_AWLEN;
wire   [2:0] gmem32_AWSIZE;
wire   [1:0] gmem32_AWBURST;
wire   [1:0] gmem32_AWLOCK;
wire   [3:0] gmem32_AWCACHE;
wire   [2:0] gmem32_AWPROT;
wire   [3:0] gmem32_AWQOS;
wire   [3:0] gmem32_AWREGION;
wire   [0:0] gmem32_AWUSER;
reg    gmem32_WVALID;
wire    gmem32_WREADY;
wire   [31:0] gmem32_WDATA;
wire   [3:0] gmem32_WSTRB;
wire    gmem32_WLAST;
wire   [0:0] gmem32_WID;
wire   [0:0] gmem32_WUSER;
reg    gmem32_ARVALID;
wire    gmem32_ARREADY;
reg   [31:0] gmem32_ARADDR;
wire   [0:0] gmem32_ARID;
wire   [31:0] gmem32_ARLEN;
wire   [2:0] gmem32_ARSIZE;
wire   [1:0] gmem32_ARBURST;
wire   [1:0] gmem32_ARLOCK;
wire   [3:0] gmem32_ARCACHE;
wire   [2:0] gmem32_ARPROT;
wire   [3:0] gmem32_ARQOS;
wire   [3:0] gmem32_ARREGION;
wire   [0:0] gmem32_ARUSER;
wire    gmem32_RVALID;
reg    gmem32_RREADY;
wire   [31:0] gmem32_RDATA;
wire    gmem32_RLAST;
wire   [0:0] gmem32_RID;
wire   [0:0] gmem32_RUSER;
wire   [1:0] gmem32_RRESP;
wire    gmem32_BVALID;
reg    gmem32_BREADY;
wire   [1:0] gmem32_BRESP;
wire   [0:0] gmem32_BID;
wire   [0:0] gmem32_BUSER;
wire    correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce;
reg   [29:0] indvar_reg_872;
reg   [29:0] ap_reg_ppstg_indvar_reg_872_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_27;
reg    ap_sig_bdd_353;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond4_reg_1900;
reg    ap_sig_bdd_362;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [29:0] indvar1_reg_904;
reg   [29:0] ap_reg_ppstg_indvar1_reg_904_pp1_it1;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_44;
reg    ap_sig_bdd_378;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg   [0:0] exitcond2_reg_1949;
reg    ap_sig_bdd_385;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg   [30:0] i1_reg_916;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_48;
reg    ap_sig_bdd_401;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
reg    ap_reg_ppiten_pp2_it3 = 1'b0;
reg    ap_reg_ppiten_pp2_it4 = 1'b0;
reg    ap_reg_ppiten_pp2_it5 = 1'b0;
reg    ap_reg_ppiten_pp2_it6 = 1'b0;
reg    ap_reg_ppiten_pp2_it7 = 1'b0;
reg    ap_reg_ppiten_pp2_it8 = 1'b0;
reg    ap_reg_ppiten_pp2_it9 = 1'b0;
reg    ap_reg_ppiten_pp2_it10 = 1'b0;
reg    ap_reg_ppiten_pp2_it11 = 1'b0;
reg    ap_reg_ppiten_pp2_it12 = 1'b0;
reg    ap_reg_ppiten_pp2_it13 = 1'b0;
reg    ap_reg_ppiten_pp2_it14 = 1'b0;
reg    ap_reg_ppiten_pp2_it15 = 1'b0;
reg    ap_reg_ppiten_pp2_it16 = 1'b0;
reg    ap_reg_ppiten_pp2_it17 = 1'b0;
reg    ap_reg_ppiten_pp2_it18 = 1'b0;
reg    ap_reg_ppiten_pp2_it19 = 1'b0;
reg    ap_reg_ppiten_pp2_it20 = 1'b0;
reg    ap_reg_ppiten_pp2_it21 = 1'b0;
reg    ap_reg_ppiten_pp2_it22 = 1'b0;
reg    ap_reg_ppiten_pp2_it23 = 1'b0;
reg    ap_reg_ppiten_pp2_it24 = 1'b0;
reg    ap_reg_ppiten_pp2_it25 = 1'b0;
reg    ap_reg_ppiten_pp2_it26 = 1'b0;
reg    ap_reg_ppiten_pp2_it27 = 1'b0;
reg    ap_reg_ppiten_pp2_it28 = 1'b0;
reg    ap_reg_ppiten_pp2_it29 = 1'b0;
reg    ap_reg_ppiten_pp2_it30 = 1'b0;
reg    ap_reg_ppiten_pp2_it31 = 1'b0;
reg    ap_reg_ppiten_pp2_it32 = 1'b0;
reg    ap_reg_ppiten_pp2_it33 = 1'b0;
reg    ap_reg_ppiten_pp2_it34 = 1'b0;
reg    ap_reg_ppiten_pp2_it35 = 1'b0;
reg    ap_reg_ppiten_pp2_it36 = 1'b0;
reg    ap_reg_ppiten_pp2_it37 = 1'b0;
reg    ap_reg_ppiten_pp2_it38 = 1'b0;
reg    ap_reg_ppiten_pp2_it39 = 1'b0;
reg    ap_reg_ppiten_pp2_it40 = 1'b0;
reg    ap_reg_ppiten_pp2_it41 = 1'b0;
reg    ap_reg_ppiten_pp2_it42 = 1'b0;
reg    ap_reg_ppiten_pp2_it43 = 1'b0;
reg   [31:0] sum_returnA_reg_928;
reg   [31:0] sum_returnB_reg_940;
reg   [31:0] sum_weight_returnSquareA_reg_952;
reg   [31:0] sum_weight_returnA_reg_964;
reg   [31:0] sum_weight_returnSquareB_reg_976;
reg   [31:0] sum_weight_returnB_reg_988;
reg   [31:0] sum_weight_returnA_returnB_reg_1000;
reg   [2:0] i2_reg_1012;
wire   [31:0] grp_fu_1074_p2;
reg   [31:0] reg_1147;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_546;
reg   [0:0] tmp_14_reg_1958;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it33;
reg    ap_sig_cseq_ST_st128_fsm_75;
reg    ap_sig_bdd_562;
reg    ap_sig_cseq_ST_st132_fsm_79;
reg    ap_sig_bdd_570;
reg    ap_sig_cseq_ST_st153_fsm_100;
reg    ap_sig_bdd_578;
reg    ap_sig_cseq_ST_st178_fsm_125;
reg    ap_sig_bdd_586;
reg   [31:0] reg_1157;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_595;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it2;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it3;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it4;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it5;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it6;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it7;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it8;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it9;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it10;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it11;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it12;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it13;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it14;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it15;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it16;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it17;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it18;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it19;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it20;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it21;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it22;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it23;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it24;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it25;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it26;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it27;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it28;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it29;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it30;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it31;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it32;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it33;
reg   [31:0] ap_reg_ppstg_reg_1157_pp2_it34;
reg    ap_sig_cseq_ST_st98_fsm_50;
reg    ap_sig_bdd_642;
wire   [31:0] grp_fu_1024_p2;
reg   [31:0] reg_1170;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_652;
reg    ap_sig_cseq_ST_pp3_stg1_fsm_52;
reg    ap_sig_bdd_659;
reg    ap_reg_ppiten_pp3_it1 = 1'b0;
reg    ap_reg_ppiten_pp3_it0 = 1'b0;
reg   [0:0] exitcond_reg_2097;
reg   [0:0] ap_reg_ppstg_exitcond_reg_2097_pp3_it1;
reg   [31:0] reg_1176;
wire   [31:0] grp_fu_1114_p2;
reg   [31:0] reg_1182;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it16;
reg    ap_sig_cseq_ST_st124_fsm_71;
reg    ap_sig_bdd_699;
reg    ap_sig_cseq_ST_st194_fsm_141;
reg    ap_sig_bdd_708;
reg    ap_sig_ioackin_gmem32_AWREADY;
wire   [31:0] grp_fu_1118_p2;
reg   [31:0] reg_1192;
wire   [31:0] grp_fu_1080_p2;
reg   [31:0] reg_1202;
wire   [31:0] grp_fu_1084_p2;
reg   [31:0] reg_1209;
wire   [31:0] acc_returnA_q0;
reg   [31:0] reg_1215;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it34;
wire   [31:0] acc_returnB_q0;
reg   [31:0] reg_1221;
wire   [31:0] acc_weight_returnA_q0;
reg   [31:0] reg_1227;
reg    ap_sig_cseq_ST_pp3_stg2_fsm_53;
reg    ap_sig_bdd_776;
wire   [31:0] acc_weight_returnB_q0;
reg   [31:0] reg_1233;
reg    ap_sig_cseq_ST_pp3_stg3_fsm_54;
reg    ap_sig_bdd_791;
wire   [31:0] acc_weight_returnSquareA_q0;
reg   [31:0] reg_1239;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it38;
wire   [31:0] acc_weight_returnSquareB_q0;
reg   [31:0] reg_1245;
wire   [31:0] acc_weight_returnA_returnB_q0;
reg   [31:0] reg_1251;
reg   [31:0] reg_1257;
reg    ap_sig_cseq_ST_st133_fsm_80;
reg    ap_sig_bdd_825;
reg    ap_sig_cseq_ST_st138_fsm_85;
reg    ap_sig_bdd_832;
reg    ap_sig_cseq_ST_st158_fsm_105;
reg    ap_sig_bdd_840;
reg   [31:0] reg_1264;
reg    ap_sig_cseq_ST_st137_fsm_84;
reg    ap_sig_bdd_849;
reg    ap_sig_cseq_ST_st159_fsm_106;
reg    ap_sig_bdd_856;
wire   [31:0] grp_fu_1030_p2;
reg   [31:0] reg_1269;
wire   [32:0] tmp_61_cast_fu_1285_p1;
reg   [32:0] tmp_61_cast_reg_1601;
wire   [32:0] tmp_62_cast_fu_1299_p1;
reg   [32:0] tmp_62_cast_reg_1606;
wire   [7:0] i_2_fu_1314_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_880;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_889;
wire   [0:0] tmp_59_i_fu_1324_p2;
wire   [30:0] i_3_fu_1334_p2;
reg   [30:0] i_3_reg_1628;
wire  signed [31:0] tmp_1_fu_1340_p2;
reg  signed [31:0] tmp_1_reg_1633;
reg   [31:0] weight_rom_load_1_reg_1639;
wire   [31:0] tmp_fu_1345_p2;
reg   [31:0] tmp_reg_1644;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_908;
wire   [31:0] grp_fu_1124_p1;
reg   [31:0] tmp_2_reg_1649;
wire   [29:0] tmp_6_fu_1350_p1;
reg   [29:0] tmp_6_reg_1655;
wire   [31:0] p_add_i32_shr_fu_1353_p1;
reg   [31:0] p_add_i32_shr_reg_1661;
wire   [2:0] acc_returnA_addr_gep_fu_257_p3;
reg   [2:0] acc_returnA_addr_reg_1666;
wire   [2:0] acc_returnB_addr_gep_fu_264_p3;
reg   [2:0] acc_returnB_addr_reg_1671;
wire   [2:0] acc_weight_returnSquareA_addr_gep_fu_271_p3;
reg   [2:0] acc_weight_returnSquareA_addr_reg_1676;
wire   [2:0] acc_weight_returnA_addr_gep_fu_278_p3;
reg   [2:0] acc_weight_returnA_addr_reg_1681;
wire   [2:0] acc_weight_returnSquareB_addr_gep_fu_285_p3;
reg   [2:0] acc_weight_returnSquareB_addr_reg_1686;
wire   [2:0] acc_weight_returnB_addr_gep_fu_292_p3;
reg   [2:0] acc_weight_returnB_addr_reg_1691;
wire   [2:0] acc_weight_returnA_returnB_add_gep_fu_299_p3;
reg   [2:0] acc_weight_returnA_returnB_add_reg_1696;
wire   [2:0] acc_returnA_addr_6_gep_fu_306_p3;
reg   [2:0] acc_returnA_addr_6_reg_1701;
wire   [2:0] acc_returnB_addr_6_gep_fu_313_p3;
reg   [2:0] acc_returnB_addr_6_reg_1706;
wire   [2:0] acc_weight_returnSquareA_addr_6_gep_fu_320_p3;
reg   [2:0] acc_weight_returnSquareA_addr_6_reg_1711;
wire   [2:0] acc_weight_returnA_addr_6_gep_fu_327_p3;
reg   [2:0] acc_weight_returnA_addr_6_reg_1716;
wire   [2:0] acc_weight_returnSquareB_addr_6_gep_fu_334_p3;
reg   [2:0] acc_weight_returnSquareB_addr_6_reg_1721;
wire   [2:0] acc_weight_returnB_addr_6_gep_fu_341_p3;
reg   [2:0] acc_weight_returnB_addr_6_reg_1726;
wire   [2:0] acc_weight_returnA_returnB_add_1_gep_fu_348_p3;
reg   [2:0] acc_weight_returnA_returnB_add_1_reg_1731;
wire   [2:0] acc_returnA_addr_7_gep_fu_355_p3;
reg   [2:0] acc_returnA_addr_7_reg_1736;
wire   [2:0] acc_returnB_addr_7_gep_fu_362_p3;
reg   [2:0] acc_returnB_addr_7_reg_1741;
wire   [2:0] acc_weight_returnSquareA_addr_7_gep_fu_369_p3;
reg   [2:0] acc_weight_returnSquareA_addr_7_reg_1746;
wire   [2:0] acc_weight_returnA_addr_7_gep_fu_376_p3;
reg   [2:0] acc_weight_returnA_addr_7_reg_1751;
wire   [2:0] acc_weight_returnSquareB_addr_7_gep_fu_383_p3;
reg   [2:0] acc_weight_returnSquareB_addr_7_reg_1756;
wire   [2:0] acc_weight_returnB_addr_7_gep_fu_390_p3;
reg   [2:0] acc_weight_returnB_addr_7_reg_1761;
wire   [2:0] acc_weight_returnA_returnB_add_2_gep_fu_397_p3;
reg   [2:0] acc_weight_returnA_returnB_add_2_reg_1766;
wire   [2:0] acc_returnA_addr_3_gep_fu_404_p3;
reg   [2:0] acc_returnA_addr_3_reg_1771;
wire   [2:0] acc_returnB_addr_3_gep_fu_411_p3;
reg   [2:0] acc_returnB_addr_3_reg_1776;
wire   [2:0] acc_weight_returnSquareA_addr_3_gep_fu_418_p3;
reg   [2:0] acc_weight_returnSquareA_addr_3_reg_1781;
wire   [2:0] acc_weight_returnA_addr_3_gep_fu_425_p3;
reg   [2:0] acc_weight_returnA_addr_3_reg_1786;
wire   [2:0] acc_weight_returnSquareB_addr_3_gep_fu_432_p3;
reg   [2:0] acc_weight_returnSquareB_addr_3_reg_1791;
wire   [2:0] acc_weight_returnB_addr_3_gep_fu_439_p3;
reg   [2:0] acc_weight_returnB_addr_3_reg_1796;
wire   [2:0] acc_weight_returnA_returnB_add_3_gep_fu_446_p3;
reg   [2:0] acc_weight_returnA_returnB_add_3_reg_1801;
wire   [2:0] acc_returnA_addr_4_gep_fu_453_p3;
reg   [2:0] acc_returnA_addr_4_reg_1806;
wire   [2:0] acc_returnB_addr_4_gep_fu_460_p3;
reg   [2:0] acc_returnB_addr_4_reg_1811;
wire   [2:0] acc_weight_returnSquareA_addr_4_gep_fu_467_p3;
reg   [2:0] acc_weight_returnSquareA_addr_4_reg_1816;
wire   [2:0] acc_weight_returnA_addr_4_gep_fu_474_p3;
reg   [2:0] acc_weight_returnA_addr_4_reg_1821;
wire   [2:0] acc_weight_returnSquareB_addr_4_gep_fu_481_p3;
reg   [2:0] acc_weight_returnSquareB_addr_4_reg_1826;
wire   [2:0] acc_weight_returnB_addr_4_gep_fu_488_p3;
reg   [2:0] acc_weight_returnB_addr_4_reg_1831;
wire   [2:0] acc_weight_returnA_returnB_add_4_gep_fu_495_p3;
reg   [2:0] acc_weight_returnA_returnB_add_4_reg_1836;
wire   [2:0] acc_returnA_addr_5_gep_fu_502_p3;
reg   [2:0] acc_returnA_addr_5_reg_1841;
wire   [2:0] acc_returnB_addr_5_gep_fu_509_p3;
reg   [2:0] acc_returnB_addr_5_reg_1846;
wire   [2:0] acc_weight_returnSquareA_addr_5_gep_fu_516_p3;
reg   [2:0] acc_weight_returnSquareA_addr_5_reg_1851;
wire   [2:0] acc_weight_returnA_addr_5_gep_fu_523_p3;
reg   [2:0] acc_weight_returnA_addr_5_reg_1856;
wire   [2:0] acc_weight_returnSquareB_addr_5_gep_fu_530_p3;
reg   [2:0] acc_weight_returnSquareB_addr_5_reg_1861;
wire   [2:0] acc_weight_returnB_addr_5_gep_fu_537_p3;
reg   [2:0] acc_weight_returnB_addr_5_reg_1866;
wire   [2:0] acc_weight_returnA_returnB_add_5_gep_fu_544_p3;
reg   [2:0] acc_weight_returnA_returnB_add_5_reg_1871;
wire  signed [31:0] next_mul_fu_1357_p2;
reg  signed [31:0] next_mul_reg_1876;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_1007;
wire   [31:0] row_index_cast_fu_1362_p1;
reg   [31:0] row_index_cast_reg_1881;
wire   [30:0] row_index_1_fu_1371_p2;
reg   [30:0] row_index_1_reg_1889;
reg   [31:0] gmem32_addr_reg_1894;
wire   [0:0] tmp_4_fu_1366_p2;
wire   [0:0] exitcond4_fu_1396_p2;
reg   [0:0] ap_reg_ppstg_exitcond4_reg_1900_pp0_it1;
wire   [29:0] indvar_next_fu_1401_p2;
reg   [29:0] indvar_next_reg_1904;
wire   [0:0] tmp_61_fu_1412_p2;
reg   [0:0] tmp_61_reg_1909;
reg    ap_sig_cseq_ST_st31_fsm_28;
reg    ap_sig_bdd_1033;
wire   [31:0] counter_2_fu_1429_p2;
reg   [31:0] counter_2_reg_1914;
reg    ap_sig_cseq_ST_st32_fsm_29;
reg    ap_sig_bdd_1042;
wire  signed [31:0] column_index_fu_1435_p2;
reg  signed [31:0] column_index_reg_1919;
reg    ap_sig_cseq_ST_st33_fsm_30;
reg    ap_sig_bdd_1051;
wire   [31:0] indvars_iv_next_fu_1446_p2;
wire   [0:0] tmp_8_fu_1441_p2;
wire   [31:0] indvars_iv_next3_fu_1452_p2;
wire  signed [31:0] grp_fu_1458_p2;
reg  signed [31:0] tmp_10_reg_1938;
reg    ap_sig_cseq_ST_st39_fsm_36;
reg    ap_sig_bdd_1067;
reg   [31:0] gmem32_addr_1_reg_1943;
reg    ap_sig_cseq_ST_st40_fsm_37;
reg    ap_sig_bdd_1076;
wire   [0:0] exitcond2_fu_1480_p2;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_1949_pp1_it1;
wire   [29:0] indvar_next1_fu_1485_p2;
reg   [29:0] indvar_next1_reg_1953;
wire   [0:0] tmp_14_fu_1500_p2;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it1;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it2;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it3;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it4;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it5;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it6;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it7;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it8;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it9;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it10;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it11;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it12;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it13;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it14;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it15;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it17;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it18;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it19;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it20;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it21;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it22;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it23;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it24;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it25;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it26;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it27;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it28;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it29;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it30;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it31;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it32;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it35;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it36;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it37;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it39;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it40;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it41;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1958_pp2_it42;
wire   [30:0] i_fu_1505_p2;
reg   [30:0] i_reg_1962;
reg   [31:0] bramA_load_reg_1992;
reg   [31:0] bramA_load_1_reg_1997;
reg   [31:0] bramB_load_reg_2002;
reg   [31:0] bramB_load_1_reg_2007;
wire   [31:0] grp_fu_1137_p2;
reg   [31:0] lnReturnA_reg_2012;
reg   [31:0] ap_reg_ppstg_lnReturnA_reg_2012_pp2_it31;
reg   [31:0] ap_reg_ppstg_lnReturnA_reg_2012_pp2_it32;
reg   [31:0] ap_reg_ppstg_lnReturnA_reg_2012_pp2_it33;
reg   [31:0] ap_reg_ppstg_lnReturnA_reg_2012_pp2_it34;
wire   [31:0] grp_fu_1142_p2;
reg   [31:0] lnReturnB_reg_2021;
reg   [31:0] ap_reg_ppstg_lnReturnB_reg_2021_pp2_it31;
reg   [31:0] ap_reg_ppstg_lnReturnB_reg_2021_pp2_it32;
reg   [31:0] ap_reg_ppstg_lnReturnB_reg_2021_pp2_it33;
reg   [31:0] ap_reg_ppstg_lnReturnB_reg_2021_pp2_it34;
reg   [2:0] acc_returnA_addr_1_reg_2030;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it35;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it36;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it37;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it38;
reg   [2:0] acc_returnB_addr_1_reg_2036;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it35;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it36;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it37;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it38;
reg   [2:0] acc_weight_returnSquareA_addr_1_reg_2042;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it35;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it39;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it40;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it41;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it42;
reg   [2:0] acc_weight_returnSquareB_addr_1_reg_2048;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it35;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it39;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it40;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it41;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it42;
reg   [2:0] acc_weight_returnA_addr_1_reg_2054;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it35;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it38;
wire   [31:0] grp_fu_1088_p2;
reg   [31:0] tmp_31_reg_2060;
reg   [2:0] acc_weight_returnB_addr_1_reg_2065;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it35;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it38;
wire   [31:0] grp_fu_1092_p2;
reg   [31:0] tmp_33_reg_2071;
reg   [2:0] acc_weight_returnA_returnB_add_6_reg_2076;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it35;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it39;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it40;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it41;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it42;
wire   [31:0] grp_fu_1096_p2;
reg   [31:0] tmp_24_reg_2082;
wire   [31:0] grp_fu_1100_p2;
reg   [31:0] tmp_27_reg_2087;
wire   [31:0] grp_fu_1104_p2;
reg   [31:0] tmp_34_reg_2092;
wire   [0:0] exitcond_fu_1541_p2;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_51;
reg    ap_sig_bdd_1336;
wire   [2:0] i_1_fu_1547_p2;
reg   [2:0] i_1_reg_2101;
wire   [63:0] tmp_57_fu_1553_p1;
reg   [63:0] tmp_57_reg_2106;
reg   [31:0] sum_returnB_1_reg_2150;
reg   [31:0] sum_weight_returnSquareA_1_reg_2155;
reg   [31:0] sum_weight_returnA_1_reg_2160;
reg   [31:0] sum_weight_returnSquareB_1_reg_2165;
reg   [31:0] sum_weight_returnB_1_reg_2170;
reg    ap_sig_cseq_ST_pp3_stg4_fsm_55;
reg    ap_sig_bdd_1375;
reg   [31:0] gmem32_addr_2_reg_2180;
reg    ap_sig_cseq_ST_st109_fsm_56;
reg    ap_sig_bdd_1386;
wire   [31:0] tmp_56_fu_1578_p2;
reg   [31:0] tmp_56_reg_2185;
reg   [31:0] tmp_50_reg_2190;
reg   [31:0] tmp_52_reg_2195;
reg    ap_sig_cseq_ST_st154_fsm_101;
reg    ap_sig_bdd_1397;
wire   [31:0] grp_fu_1127_p2;
reg   [31:0] volatilityA_reg_2200;
reg    ap_sig_cseq_ST_st174_fsm_121;
reg    ap_sig_bdd_1406;
wire   [31:0] grp_fu_1132_p2;
reg   [31:0] volatilityB_reg_2205;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_1415;
reg    ap_sig_cseq_ST_st46_fsm_43;
reg    ap_sig_bdd_1427;
reg    ap_sig_cseq_ST_st52_fsm_47;
reg    ap_sig_bdd_1439;
reg   [2:0] acc_returnA_address0;
reg    acc_returnA_ce0;
reg    acc_returnA_we0;
wire   [31:0] acc_returnA_d0;
reg   [2:0] acc_returnA_address1;
reg    acc_returnA_ce1;
reg    acc_returnA_we1;
reg   [31:0] acc_returnA_d1;
reg   [2:0] acc_returnB_address0;
reg    acc_returnB_ce0;
reg    acc_returnB_we0;
wire   [31:0] acc_returnB_d0;
reg   [2:0] acc_returnB_address1;
reg    acc_returnB_ce1;
reg    acc_returnB_we1;
reg   [31:0] acc_returnB_d1;
reg   [2:0] acc_weight_returnSquareA_address0;
reg    acc_weight_returnSquareA_ce0;
reg    acc_weight_returnSquareA_we0;
wire   [31:0] acc_weight_returnSquareA_d0;
reg   [2:0] acc_weight_returnSquareA_address1;
reg    acc_weight_returnSquareA_ce1;
reg    acc_weight_returnSquareA_we1;
reg   [31:0] acc_weight_returnSquareA_d1;
reg   [2:0] acc_weight_returnA_address0;
reg    acc_weight_returnA_ce0;
reg    acc_weight_returnA_we0;
wire   [31:0] acc_weight_returnA_d0;
reg   [2:0] acc_weight_returnA_address1;
reg    acc_weight_returnA_ce1;
reg    acc_weight_returnA_we1;
reg   [31:0] acc_weight_returnA_d1;
reg   [2:0] acc_weight_returnSquareB_address0;
reg    acc_weight_returnSquareB_ce0;
reg    acc_weight_returnSquareB_we0;
wire   [31:0] acc_weight_returnSquareB_d0;
reg   [2:0] acc_weight_returnSquareB_address1;
reg    acc_weight_returnSquareB_ce1;
reg    acc_weight_returnSquareB_we1;
reg   [31:0] acc_weight_returnSquareB_d1;
reg   [2:0] acc_weight_returnB_address0;
reg    acc_weight_returnB_ce0;
reg    acc_weight_returnB_we0;
wire   [31:0] acc_weight_returnB_d0;
reg   [2:0] acc_weight_returnB_address1;
reg    acc_weight_returnB_ce1;
reg    acc_weight_returnB_we1;
reg   [31:0] acc_weight_returnB_d1;
reg   [2:0] acc_weight_returnA_returnB_address0;
reg    acc_weight_returnA_returnB_ce0;
reg    acc_weight_returnA_returnB_we0;
wire   [31:0] acc_weight_returnA_returnB_d0;
reg   [2:0] acc_weight_returnA_returnB_address1;
reg    acc_weight_returnA_returnB_ce1;
reg    acc_weight_returnA_returnB_we1;
reg   [31:0] acc_weight_returnA_returnB_d1;
reg   [31:0] tmp_i_reg_779;
reg   [7:0] i_i_reg_791;
reg   [30:0] i1_i_reg_803;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_1547;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_1555;
wire   [0:0] exitcond_i_fu_1303_p2;
reg   [31:0] indvars_iv2_reg_814;
reg   [31:0] indvars_iv_reg_826;
reg   [30:0] row_index_reg_838;
reg   [31:0] counter_reg_849;
reg   [31:0] phi_mul_reg_861;
reg   [29:0] indvar_phi_fu_876_p4;
reg   [31:0] column_index_0_in_reg_884;
reg    ap_sig_cseq_ST_st198_fsm_145;
reg    ap_sig_bdd_1586;
reg   [31:0] counter_1_reg_893;
reg   [29:0] indvar1_phi_fu_908_p4;
reg   [30:0] i1_phi_fu_920_p4;
reg   [31:0] sum_returnA_phi_fu_932_p4;
reg   [31:0] sum_returnB_phi_fu_944_p4;
reg   [31:0] sum_weight_returnSquareA_phi_fu_956_p4;
reg   [31:0] sum_weight_returnA_phi_fu_968_p4;
reg   [31:0] sum_weight_returnSquareB_phi_fu_980_p4;
reg   [31:0] sum_weight_returnB_phi_fu_992_p4;
wire   [31:0] sum_weight_returnA_returnB_phi_fu_1004_p4;
reg   [2:0] i2_phi_fu_1016_p4;
wire   [63:0] tmp_58_i_fu_1309_p1;
wire   [63:0] tmp_60_i_fu_1329_p1;
wire   [63:0] tmp_s_fu_1407_p1;
wire   [63:0] tmp_12_fu_1491_p1;
wire   [63:0] tmp_15_fu_1511_p1;
wire   [63:0] tmp_16_fu_1517_p1;
wire   [63:0] tmp_20_fu_1530_p1;
wire  signed [63:0] tmp_55_fu_1386_p1;
wire  signed [63:0] tmp_64_fu_1470_p1;
wire  signed [63:0] out_correlation4_sum_cast_fu_1568_p1;
reg    ap_reg_ioackin_gmem32_ARREADY = 1'b0;
reg    ap_sig_ioackin_gmem32_ARREADY;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_1650;
reg    ap_sig_cseq_ST_st41_fsm_38;
reg    ap_sig_bdd_1666;
reg    ap_reg_ioackin_gmem32_AWREADY = 1'b0;
reg    ap_reg_ioackin_gmem32_WREADY = 1'b0;
reg    ap_sig_ioackin_gmem32_WREADY;
reg    ap_sig_cseq_ST_st195_fsm_142;
reg    ap_sig_bdd_1688;
reg    ap_sig_cseq_ST_st97_fsm_49;
reg    ap_sig_bdd_1713;
reg    ap_sig_cseq_ST_st50_fsm_45;
reg    ap_sig_bdd_1733;
reg    ap_sig_cseq_ST_st51_fsm_46;
reg    ap_sig_bdd_1740;
wire   [31:0] grp_fu_1048_p2;
wire   [31:0] grp_fu_1036_p2;
wire   [31:0] grp_fu_1054_p2;
wire   [31:0] grp_fu_1042_p2;
wire   [31:0] grp_fu_1060_p2;
reg   [31:0] grp_fu_1024_p0;
reg   [31:0] grp_fu_1024_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_1784;
reg    ap_sig_cseq_ST_st129_fsm_76;
reg    ap_sig_bdd_1793;
reg    ap_sig_cseq_ST_st134_fsm_81;
reg    ap_sig_bdd_1800;
reg    ap_sig_cseq_ST_st155_fsm_102;
reg    ap_sig_bdd_1807;
reg   [31:0] grp_fu_1030_p0;
reg   [31:0] grp_fu_1030_p1;
wire   [31:0] grp_fu_1036_p0;
wire   [31:0] grp_fu_1036_p1;
wire   [31:0] grp_fu_1042_p0;
wire   [31:0] grp_fu_1042_p1;
wire   [31:0] grp_fu_1048_p0;
wire   [31:0] grp_fu_1048_p1;
wire   [31:0] grp_fu_1054_p0;
wire   [31:0] grp_fu_1054_p1;
wire   [31:0] grp_fu_1060_p0;
wire   [31:0] grp_fu_1060_p1;
reg   [31:0] grp_fu_1074_p0;
reg   [31:0] grp_fu_1074_p1;
reg    ap_sig_cseq_ST_st125_fsm_72;
reg    ap_sig_bdd_1832;
reg    ap_sig_cseq_ST_st150_fsm_97;
reg    ap_sig_bdd_1839;
reg    ap_sig_cseq_ST_st175_fsm_122;
reg    ap_sig_bdd_1847;
reg   [31:0] grp_fu_1080_p0;
reg   [31:0] grp_fu_1080_p1;
reg   [31:0] grp_fu_1084_p0;
reg   [31:0] grp_fu_1084_p1;
wire   [31:0] grp_fu_1088_p0;
wire   [31:0] grp_fu_1088_p1;
wire   [31:0] grp_fu_1092_p0;
wire   [31:0] grp_fu_1092_p1;
wire   [31:0] grp_fu_1096_p0;
wire   [31:0] grp_fu_1096_p1;
wire   [31:0] grp_fu_1100_p0;
wire   [31:0] grp_fu_1100_p1;
wire   [31:0] grp_fu_1104_p0;
wire   [31:0] grp_fu_1104_p1;
reg   [31:0] grp_fu_1114_p0;
reg   [31:0] grp_fu_1114_p1;
reg    ap_sig_cseq_ST_st139_fsm_86;
reg    ap_sig_bdd_1870;
reg    ap_sig_cseq_ST_st179_fsm_126;
reg    ap_sig_bdd_1877;
reg   [31:0] grp_fu_1118_p0;
reg   [31:0] grp_fu_1118_p1;
wire  signed [31:0] grp_fu_1124_p0;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_1889;
wire   [31:0] grp_fu_1127_p1;
wire   [31:0] grp_fu_1132_p1;
wire   [31:0] grp_fu_1137_p1;
wire   [31:0] grp_fu_1142_p1;
wire   [29:0] tmp_3_fu_1275_p4;
wire   [29:0] tmp_5_fu_1289_p4;
wire   [31:0] i1_i_cast_fu_1320_p1;
wire  signed [31:0] tmp_59_i_fu_1324_p1;
wire  signed [31:0] tmp_1_fu_1340_p0;
wire  signed [31:0] tmp_6_fu_1350_p0;
wire  signed [31:0] next_mul_fu_1357_p1;
wire  signed [32:0] tmp_9_fu_1377_p1;
wire  signed [32:0] tmp_11_fu_1381_p2;
wire   [31:0] smax_fu_1417_p3;
wire   [31:0] tmp_13_fu_1423_p2;
wire  signed [31:0] grp_fu_1458_p0;
wire  signed [31:0] grp_fu_1458_p1;
reg    ap_sig_cseq_ST_st34_fsm_31;
reg    ap_sig_bdd_1971;
wire  signed [32:0] tmp_62_fu_1462_p1;
wire  signed [32:0] tmp_63_fu_1465_p2;
wire   [31:0] i1_cast_fu_1496_p1;
wire   [30:0] grp_fu_1524_p0;
wire   [3:0] grp_fu_1524_p1;
wire   [30:0] grp_fu_1524_p2;
wire  signed [32:0] tmp_55_cast_fu_1559_p1;
wire  signed [32:0] out_correlation4_sum_fu_1563_p2;
reg   [1:0] grp_fu_1024_opcode;
wire    grp_fu_1024_ce;
reg   [1:0] grp_fu_1030_opcode;
wire    grp_fu_1030_ce;
wire    grp_fu_1036_ce;
wire    grp_fu_1042_ce;
wire    grp_fu_1048_ce;
wire    grp_fu_1054_ce;
wire    grp_fu_1060_ce;
wire    grp_fu_1074_ce;
wire    grp_fu_1080_ce;
wire    grp_fu_1084_ce;
wire    grp_fu_1088_ce;
wire    grp_fu_1092_ce;
wire    grp_fu_1096_ce;
wire    grp_fu_1100_ce;
wire    grp_fu_1104_ce;
reg    grp_fu_1114_ce;
reg    ap_sig_cseq_ST_st110_fsm_57;
reg    ap_sig_bdd_2119;
reg    ap_sig_cseq_ST_st111_fsm_58;
reg    ap_sig_bdd_2127;
reg    ap_sig_cseq_ST_st112_fsm_59;
reg    ap_sig_bdd_2135;
reg    ap_sig_cseq_ST_st113_fsm_60;
reg    ap_sig_bdd_2143;
reg    ap_sig_cseq_ST_st114_fsm_61;
reg    ap_sig_bdd_2151;
reg    ap_sig_cseq_ST_st115_fsm_62;
reg    ap_sig_bdd_2159;
reg    ap_sig_cseq_ST_st116_fsm_63;
reg    ap_sig_bdd_2167;
reg    ap_sig_cseq_ST_st117_fsm_64;
reg    ap_sig_bdd_2175;
reg    ap_sig_cseq_ST_st118_fsm_65;
reg    ap_sig_bdd_2183;
reg    ap_sig_cseq_ST_st119_fsm_66;
reg    ap_sig_bdd_2191;
reg    ap_sig_cseq_ST_st120_fsm_67;
reg    ap_sig_bdd_2199;
reg    ap_sig_cseq_ST_st121_fsm_68;
reg    ap_sig_bdd_2207;
reg    ap_sig_cseq_ST_st122_fsm_69;
reg    ap_sig_bdd_2215;
reg    ap_sig_cseq_ST_st123_fsm_70;
reg    ap_sig_bdd_2223;
reg    ap_sig_cseq_ST_st140_fsm_87;
reg    ap_sig_bdd_2234;
reg    ap_sig_cseq_ST_st141_fsm_88;
reg    ap_sig_bdd_2242;
reg    ap_sig_cseq_ST_st142_fsm_89;
reg    ap_sig_bdd_2250;
reg    ap_sig_cseq_ST_st143_fsm_90;
reg    ap_sig_bdd_2258;
reg    ap_sig_cseq_ST_st144_fsm_91;
reg    ap_sig_bdd_2266;
reg    ap_sig_cseq_ST_st145_fsm_92;
reg    ap_sig_bdd_2274;
reg    ap_sig_cseq_ST_st146_fsm_93;
reg    ap_sig_bdd_2282;
reg    ap_sig_cseq_ST_st147_fsm_94;
reg    ap_sig_bdd_2290;
reg    ap_sig_cseq_ST_st148_fsm_95;
reg    ap_sig_bdd_2298;
reg    ap_sig_cseq_ST_st149_fsm_96;
reg    ap_sig_bdd_2306;
reg    ap_sig_cseq_ST_st151_fsm_98;
reg    ap_sig_bdd_2315;
reg    ap_sig_cseq_ST_st152_fsm_99;
reg    ap_sig_bdd_2323;
reg    ap_sig_cseq_ST_st180_fsm_127;
reg    ap_sig_bdd_2334;
reg    ap_sig_cseq_ST_st181_fsm_128;
reg    ap_sig_bdd_2342;
reg    ap_sig_cseq_ST_st182_fsm_129;
reg    ap_sig_bdd_2350;
reg    ap_sig_cseq_ST_st183_fsm_130;
reg    ap_sig_bdd_2358;
reg    ap_sig_cseq_ST_st184_fsm_131;
reg    ap_sig_bdd_2366;
reg    ap_sig_cseq_ST_st185_fsm_132;
reg    ap_sig_bdd_2374;
reg    ap_sig_cseq_ST_st186_fsm_133;
reg    ap_sig_bdd_2382;
reg    ap_sig_cseq_ST_st187_fsm_134;
reg    ap_sig_bdd_2390;
reg    ap_sig_cseq_ST_st188_fsm_135;
reg    ap_sig_bdd_2398;
reg    ap_sig_cseq_ST_st189_fsm_136;
reg    ap_sig_bdd_2406;
reg    ap_sig_cseq_ST_st190_fsm_137;
reg    ap_sig_bdd_2414;
reg    ap_sig_cseq_ST_st191_fsm_138;
reg    ap_sig_bdd_2422;
reg    ap_sig_cseq_ST_st192_fsm_139;
reg    ap_sig_bdd_2430;
reg    ap_sig_cseq_ST_st193_fsm_140;
reg    ap_sig_bdd_2438;
wire    grp_fu_1118_ce;
wire    grp_fu_1124_ce;
wire   [31:0] grp_fu_1127_p0;
wire    grp_fu_1127_ce;
wire   [31:0] grp_fu_1132_p0;
wire    grp_fu_1132_ce;
wire   [31:0] grp_fu_1137_p0;
wire    grp_fu_1137_ce;
wire   [31:0] grp_fu_1142_p0;
wire    grp_fu_1142_ce;
wire    grp_fu_1458_ce;
wire    grp_fu_1524_ce;
reg   [145:0] ap_NS_fsm;


correlation_accel_v1_weight_rom #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
weight_rom_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( weight_rom_address0 ),
    .ce0( weight_rom_ce0 ),
    .we0( weight_rom_we0 ),
    .d0( weight_rom_d0 ),
    .q0( weight_rom_q0 ),
    .address1( weight_rom_address1 ),
    .ce1( weight_rom_ce1 ),
    .we1( weight_rom_we1 ),
    .d1( weight_rom_d1 ),
    .q1( weight_rom_q1 )
);

correlation_accel_v1_bramA #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
bramA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( bramA_address0 ),
    .ce0( bramA_ce0 ),
    .we0( bramA_we0 ),
    .d0( bramA_d0 ),
    .q0( bramA_q0 ),
    .address1( bramA_address1 ),
    .ce1( bramA_ce1 ),
    .q1( bramA_q1 )
);

correlation_accel_v1_bramA #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
bramB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( bramB_address0 ),
    .ce0( bramB_ce0 ),
    .we0( bramB_we0 ),
    .d0( bramB_d0 ),
    .q0( bramB_q0 ),
    .address1( bramB_address1 ),
    .ce1( bramB_ce1 ),
    .q1( bramB_q1 )
);

correlation_accel_v1_gmem32_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_ID_WIDTH( C_M_AXI_GMEM32_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_GMEM32_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_GMEM32_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_GMEM32_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_GMEM32_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_GMEM32_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_GMEM32_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_GMEM32_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM32_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM32_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM32_CACHE_VALUE ))
correlation_accel_v1_gmem32_m_axi_U(
    .AWVALID( m_axi_gmem32_AWVALID ),
    .AWREADY( m_axi_gmem32_AWREADY ),
    .AWADDR( m_axi_gmem32_AWADDR ),
    .AWID( m_axi_gmem32_AWID ),
    .AWLEN( m_axi_gmem32_AWLEN ),
    .AWSIZE( m_axi_gmem32_AWSIZE ),
    .AWBURST( m_axi_gmem32_AWBURST ),
    .AWLOCK( m_axi_gmem32_AWLOCK ),
    .AWCACHE( m_axi_gmem32_AWCACHE ),
    .AWPROT( m_axi_gmem32_AWPROT ),
    .AWQOS( m_axi_gmem32_AWQOS ),
    .AWREGION( m_axi_gmem32_AWREGION ),
    .AWUSER( m_axi_gmem32_AWUSER ),
    .WVALID( m_axi_gmem32_WVALID ),
    .WREADY( m_axi_gmem32_WREADY ),
    .WDATA( m_axi_gmem32_WDATA ),
    .WSTRB( m_axi_gmem32_WSTRB ),
    .WLAST( m_axi_gmem32_WLAST ),
    .WID( m_axi_gmem32_WID ),
    .WUSER( m_axi_gmem32_WUSER ),
    .ARVALID( m_axi_gmem32_ARVALID ),
    .ARREADY( m_axi_gmem32_ARREADY ),
    .ARADDR( m_axi_gmem32_ARADDR ),
    .ARID( m_axi_gmem32_ARID ),
    .ARLEN( m_axi_gmem32_ARLEN ),
    .ARSIZE( m_axi_gmem32_ARSIZE ),
    .ARBURST( m_axi_gmem32_ARBURST ),
    .ARLOCK( m_axi_gmem32_ARLOCK ),
    .ARCACHE( m_axi_gmem32_ARCACHE ),
    .ARPROT( m_axi_gmem32_ARPROT ),
    .ARQOS( m_axi_gmem32_ARQOS ),
    .ARREGION( m_axi_gmem32_ARREGION ),
    .ARUSER( m_axi_gmem32_ARUSER ),
    .RVALID( m_axi_gmem32_RVALID ),
    .RREADY( m_axi_gmem32_RREADY ),
    .RDATA( m_axi_gmem32_RDATA ),
    .RLAST( m_axi_gmem32_RLAST ),
    .RID( m_axi_gmem32_RID ),
    .RUSER( m_axi_gmem32_RUSER ),
    .RRESP( m_axi_gmem32_RRESP ),
    .BVALID( m_axi_gmem32_BVALID ),
    .BREADY( m_axi_gmem32_BREADY ),
    .BRESP( m_axi_gmem32_BRESP ),
    .BID( m_axi_gmem32_BID ),
    .BUSER( m_axi_gmem32_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem32_ARVALID ),
    .I_ARREADY( gmem32_ARREADY ),
    .I_ARADDR( gmem32_ARADDR ),
    .I_ARID( gmem32_ARID ),
    .I_ARLEN( gmem32_ARLEN ),
    .I_ARSIZE( gmem32_ARSIZE ),
    .I_ARLOCK( gmem32_ARLOCK ),
    .I_ARCACHE( gmem32_ARCACHE ),
    .I_ARQOS( gmem32_ARQOS ),
    .I_ARPROT( gmem32_ARPROT ),
    .I_ARUSER( gmem32_ARUSER ),
    .I_ARBURST( gmem32_ARBURST ),
    .I_ARREGION( gmem32_ARREGION ),
    .I_RVALID( gmem32_RVALID ),
    .I_RREADY( gmem32_RREADY ),
    .I_RDATA( gmem32_RDATA ),
    .I_RID( gmem32_RID ),
    .I_RUSER( gmem32_RUSER ),
    .I_RRESP( gmem32_RRESP ),
    .I_RLAST( gmem32_RLAST ),
    .I_AWVALID( gmem32_AWVALID ),
    .I_AWREADY( gmem32_AWREADY ),
    .I_AWADDR( gmem32_AWADDR ),
    .I_AWID( gmem32_AWID ),
    .I_AWLEN( gmem32_AWLEN ),
    .I_AWSIZE( gmem32_AWSIZE ),
    .I_AWLOCK( gmem32_AWLOCK ),
    .I_AWCACHE( gmem32_AWCACHE ),
    .I_AWQOS( gmem32_AWQOS ),
    .I_AWPROT( gmem32_AWPROT ),
    .I_AWUSER( gmem32_AWUSER ),
    .I_AWBURST( gmem32_AWBURST ),
    .I_AWREGION( gmem32_AWREGION ),
    .I_WVALID( gmem32_WVALID ),
    .I_WREADY( gmem32_WREADY ),
    .I_WDATA( gmem32_WDATA ),
    .I_WID( gmem32_WID ),
    .I_WUSER( gmem32_WUSER ),
    .I_WLAST( gmem32_WLAST ),
    .I_WSTRB( gmem32_WSTRB ),
    .I_BVALID( gmem32_BVALID ),
    .I_BREADY( gmem32_BREADY ),
    .I_BRESP( gmem32_BRESP ),
    .I_BID( gmem32_BID ),
    .I_BUSER( gmem32_BUSER )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_returnA_address0 ),
    .ce0( acc_returnA_ce0 ),
    .we0( acc_returnA_we0 ),
    .d0( acc_returnA_d0 ),
    .q0( acc_returnA_q0 ),
    .address1( acc_returnA_address1 ),
    .ce1( acc_returnA_ce1 ),
    .we1( acc_returnA_we1 ),
    .d1( acc_returnA_d1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_returnB_address0 ),
    .ce0( acc_returnB_ce0 ),
    .we0( acc_returnB_we0 ),
    .d0( acc_returnB_d0 ),
    .q0( acc_returnB_q0 ),
    .address1( acc_returnB_address1 ),
    .ce1( acc_returnB_ce1 ),
    .we1( acc_returnB_we1 ),
    .d1( acc_returnB_d1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnSquareA_address0 ),
    .ce0( acc_weight_returnSquareA_ce0 ),
    .we0( acc_weight_returnSquareA_we0 ),
    .d0( acc_weight_returnSquareA_d0 ),
    .q0( acc_weight_returnSquareA_q0 ),
    .address1( acc_weight_returnSquareA_address1 ),
    .ce1( acc_weight_returnSquareA_ce1 ),
    .we1( acc_weight_returnSquareA_we1 ),
    .d1( acc_weight_returnSquareA_d1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnA_address0 ),
    .ce0( acc_weight_returnA_ce0 ),
    .we0( acc_weight_returnA_we0 ),
    .d0( acc_weight_returnA_d0 ),
    .q0( acc_weight_returnA_q0 ),
    .address1( acc_weight_returnA_address1 ),
    .ce1( acc_weight_returnA_ce1 ),
    .we1( acc_weight_returnA_we1 ),
    .d1( acc_weight_returnA_d1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnSquareB_address0 ),
    .ce0( acc_weight_returnSquareB_ce0 ),
    .we0( acc_weight_returnSquareB_we0 ),
    .d0( acc_weight_returnSquareB_d0 ),
    .q0( acc_weight_returnSquareB_q0 ),
    .address1( acc_weight_returnSquareB_address1 ),
    .ce1( acc_weight_returnSquareB_ce1 ),
    .we1( acc_weight_returnSquareB_we1 ),
    .d1( acc_weight_returnSquareB_d1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnB_address0 ),
    .ce0( acc_weight_returnB_ce0 ),
    .we0( acc_weight_returnB_we0 ),
    .d0( acc_weight_returnB_d0 ),
    .q0( acc_weight_returnB_q0 ),
    .address1( acc_weight_returnB_address1 ),
    .ce1( acc_weight_returnB_ce1 ),
    .we1( acc_weight_returnB_we1 ),
    .d1( acc_weight_returnB_d1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnA_returnB_address0 ),
    .ce0( acc_weight_returnA_returnB_ce0 ),
    .we0( acc_weight_returnA_returnB_we0 ),
    .d0( acc_weight_returnA_returnB_d0 ),
    .q0( acc_weight_returnA_returnB_q0 ),
    .address1( acc_weight_returnA_returnB_address1 ),
    .ce1( acc_weight_returnA_returnB_ce1 ),
    .we1( acc_weight_returnA_returnB_we1 ),
    .d1( acc_weight_returnA_returnB_d1 )
);

correlation_accel_v1_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_faddfsub_32ns_32ns_32_5_full_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1024_p0 ),
    .din1( grp_fu_1024_p1 ),
    .opcode( grp_fu_1024_opcode ),
    .ce( grp_fu_1024_ce ),
    .dout( grp_fu_1024_p2 )
);

correlation_accel_v1_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_faddfsub_32ns_32ns_32_5_full_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1030_p0 ),
    .din1( grp_fu_1030_p1 ),
    .opcode( grp_fu_1030_opcode ),
    .ce( grp_fu_1030_ce ),
    .dout( grp_fu_1030_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp_U3(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1036_p0 ),
    .din1( grp_fu_1036_p1 ),
    .ce( grp_fu_1036_ce ),
    .dout( grp_fu_1036_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1042_p0 ),
    .din1( grp_fu_1042_p1 ),
    .ce( grp_fu_1042_ce ),
    .dout( grp_fu_1042_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1048_p0 ),
    .din1( grp_fu_1048_p1 ),
    .ce( grp_fu_1048_ce ),
    .dout( grp_fu_1048_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1054_p0 ),
    .din1( grp_fu_1054_p1 ),
    .ce( grp_fu_1054_ce ),
    .dout( grp_fu_1054_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_5_full_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1060_p0 ),
    .din1( grp_fu_1060_p1 ),
    .ce( grp_fu_1060_ce ),
    .dout( grp_fu_1060_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1074_p0 ),
    .din1( grp_fu_1074_p1 ),
    .ce( grp_fu_1074_ce ),
    .dout( grp_fu_1074_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U9(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1080_p0 ),
    .din1( grp_fu_1080_p1 ),
    .ce( grp_fu_1080_ce ),
    .dout( grp_fu_1080_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U10(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1084_p0 ),
    .din1( grp_fu_1084_p1 ),
    .ce( grp_fu_1084_ce ),
    .dout( grp_fu_1084_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U11(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1088_p0 ),
    .din1( grp_fu_1088_p1 ),
    .ce( grp_fu_1088_ce ),
    .dout( grp_fu_1088_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U12(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1092_p0 ),
    .din1( grp_fu_1092_p1 ),
    .ce( grp_fu_1092_ce ),
    .dout( grp_fu_1092_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U13(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1096_p0 ),
    .din1( grp_fu_1096_p1 ),
    .ce( grp_fu_1096_ce ),
    .dout( grp_fu_1096_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U14(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1100_p0 ),
    .din1( grp_fu_1100_p1 ),
    .ce( grp_fu_1100_ce ),
    .dout( grp_fu_1100_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_4_max_dsp_U15(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1104_p0 ),
    .din1( grp_fu_1104_p1 ),
    .ce( grp_fu_1104_ce ),
    .dout( grp_fu_1104_p2 )
);

correlation_accel_v1_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fdiv_32ns_32ns_32_16_U16(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1114_p0 ),
    .din1( grp_fu_1114_p1 ),
    .ce( grp_fu_1114_ce ),
    .dout( grp_fu_1114_p2 )
);

correlation_accel_v1_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fdiv_32ns_32ns_32_16_U17(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1118_p0 ),
    .din1( grp_fu_1118_p1 ),
    .ce( grp_fu_1118_ce ),
    .dout( grp_fu_1118_p2 )
);

correlation_accel_v1_sitofp_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_sitofp_32s_32_6_U18(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1124_p0 ),
    .ce( grp_fu_1124_ce ),
    .dout( grp_fu_1124_p1 )
);

correlation_accel_v1_fsqrt_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fsqrt_32ns_32ns_32_16_U19(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1127_p0 ),
    .din1( grp_fu_1127_p1 ),
    .ce( grp_fu_1127_ce ),
    .dout( grp_fu_1127_p2 )
);

correlation_accel_v1_fsqrt_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fsqrt_32ns_32ns_32_16_U20(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1132_p0 ),
    .din1( grp_fu_1132_p1 ),
    .ce( grp_fu_1132_ce ),
    .dout( grp_fu_1132_p2 )
);

correlation_accel_v1_flog_32ns_32ns_32_13_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_flog_32ns_32ns_32_13_full_dsp_U21(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1137_p0 ),
    .din1( grp_fu_1137_p1 ),
    .ce( grp_fu_1137_ce ),
    .dout( grp_fu_1137_p2 )
);

correlation_accel_v1_flog_32ns_32ns_32_13_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_flog_32ns_32ns_32_13_full_dsp_U22(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1142_p0 ),
    .din1( grp_fu_1142_p1 ),
    .ce( grp_fu_1142_ce ),
    .dout( grp_fu_1142_p2 )
);

correlation_accel_v1_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_mul_32s_32s_32_6_U23(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1458_p0 ),
    .din1( grp_fu_1458_p1 ),
    .ce( grp_fu_1458_ce ),
    .dout( grp_fu_1458_p2 )
);

correlation_accel_v1_urem_31ns_4ns_31_35 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 31 ))
correlation_accel_v1_urem_31ns_4ns_31_35_U24(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1524_p0 ),
    .din1( grp_fu_1524_p1 ),
    .ce( grp_fu_1524_ce ),
    .dout( grp_fu_1524_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_gmem32_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) | (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_38)))) begin
            ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) | ((ap_const_logic_1 == gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_38)))) begin
            ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_gmem32_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_AWREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st194_fsm_141)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) begin
                ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem32_AWREADY)) begin
                ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_gmem32_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_WREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st195_fsm_142)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_WREADY)) begin
                ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem32_WREADY)) begin
                ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1396_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond4_fu_1396_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1396_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1480_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_43)) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond2_fu_1480_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_43) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1480_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_43)) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_lv1_0 == tmp_14_fu_1500_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & ~(ap_const_lv1_0 == tmp_14_fu_1500_p2))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_lv1_0 == tmp_14_fu_1500_p2)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it10
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it10 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it10 <= ap_reg_ppiten_pp2_it9;
    end
end

/// ap_reg_ppiten_pp2_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it11
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it11 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it11 <= ap_reg_ppiten_pp2_it10;
    end
end

/// ap_reg_ppiten_pp2_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it12
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it12 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it12 <= ap_reg_ppiten_pp2_it11;
    end
end

/// ap_reg_ppiten_pp2_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it13
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it13 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it13 <= ap_reg_ppiten_pp2_it12;
    end
end

/// ap_reg_ppiten_pp2_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it14
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it14 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it14 <= ap_reg_ppiten_pp2_it13;
    end
end

/// ap_reg_ppiten_pp2_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it15
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it15 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it15 <= ap_reg_ppiten_pp2_it14;
    end
end

/// ap_reg_ppiten_pp2_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it16
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it16 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it16 <= ap_reg_ppiten_pp2_it15;
    end
end

/// ap_reg_ppiten_pp2_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it17
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it17 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it17 <= ap_reg_ppiten_pp2_it16;
    end
end

/// ap_reg_ppiten_pp2_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it18
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it18 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it18 <= ap_reg_ppiten_pp2_it17;
    end
end

/// ap_reg_ppiten_pp2_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it19
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it19 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it19 <= ap_reg_ppiten_pp2_it18;
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
    end
end

/// ap_reg_ppiten_pp2_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it20
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it20 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it20 <= ap_reg_ppiten_pp2_it19;
    end
end

/// ap_reg_ppiten_pp2_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it21
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it21 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it21 <= ap_reg_ppiten_pp2_it20;
    end
end

/// ap_reg_ppiten_pp2_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it22
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it22 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it22 <= ap_reg_ppiten_pp2_it21;
    end
end

/// ap_reg_ppiten_pp2_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it23
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it23 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it23 <= ap_reg_ppiten_pp2_it22;
    end
end

/// ap_reg_ppiten_pp2_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it24
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it24 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it24 <= ap_reg_ppiten_pp2_it23;
    end
end

/// ap_reg_ppiten_pp2_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it25
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it25 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it25 <= ap_reg_ppiten_pp2_it24;
    end
end

/// ap_reg_ppiten_pp2_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it26
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it26 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it26 <= ap_reg_ppiten_pp2_it25;
    end
end

/// ap_reg_ppiten_pp2_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it27
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it27 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it27 <= ap_reg_ppiten_pp2_it26;
    end
end

/// ap_reg_ppiten_pp2_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it28
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it28 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it28 <= ap_reg_ppiten_pp2_it27;
    end
end

/// ap_reg_ppiten_pp2_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it29
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it29 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it29 <= ap_reg_ppiten_pp2_it28;
    end
end

/// ap_reg_ppiten_pp2_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
    end
end

/// ap_reg_ppiten_pp2_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it30
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it30 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it30 <= ap_reg_ppiten_pp2_it29;
    end
end

/// ap_reg_ppiten_pp2_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it31
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it31 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it31 <= ap_reg_ppiten_pp2_it30;
    end
end

/// ap_reg_ppiten_pp2_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it32
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it32 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it32 <= ap_reg_ppiten_pp2_it31;
    end
end

/// ap_reg_ppiten_pp2_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it33
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it33 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it33 <= ap_reg_ppiten_pp2_it32;
    end
end

/// ap_reg_ppiten_pp2_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it34
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it34 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it34 <= ap_reg_ppiten_pp2_it33;
    end
end

/// ap_reg_ppiten_pp2_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it35
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it35 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it35 <= ap_reg_ppiten_pp2_it34;
    end
end

/// ap_reg_ppiten_pp2_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it36
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it36 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it36 <= ap_reg_ppiten_pp2_it35;
    end
end

/// ap_reg_ppiten_pp2_it37 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it37
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it37 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it37 <= ap_reg_ppiten_pp2_it36;
    end
end

/// ap_reg_ppiten_pp2_it38 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it38
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it38 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it38 <= ap_reg_ppiten_pp2_it37;
    end
end

/// ap_reg_ppiten_pp2_it39 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it39
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it39 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it39 <= ap_reg_ppiten_pp2_it38;
    end
end

/// ap_reg_ppiten_pp2_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
    end
end

/// ap_reg_ppiten_pp2_it40 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it40
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it40 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it40 <= ap_reg_ppiten_pp2_it39;
    end
end

/// ap_reg_ppiten_pp2_it41 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it41
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it41 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it41 <= ap_reg_ppiten_pp2_it40;
    end
end

/// ap_reg_ppiten_pp2_it42 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it42
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it42 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it42 <= ap_reg_ppiten_pp2_it41;
    end
end

/// ap_reg_ppiten_pp2_it43 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it43
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it43 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it43 <= ap_reg_ppiten_pp2_it42;
    end
end

/// ap_reg_ppiten_pp2_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
    end
end

/// ap_reg_ppiten_pp2_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
    end
end

/// ap_reg_ppiten_pp2_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
    end
end

/// ap_reg_ppiten_pp2_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it8
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it8 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it8 <= ap_reg_ppiten_pp2_it7;
    end
end

/// ap_reg_ppiten_pp2_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it9
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it9 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it9 <= ap_reg_ppiten_pp2_it8;
    end
end

/// ap_reg_ppiten_pp3_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51) & ~(ap_const_lv1_0 == exitcond_fu_1541_p2))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp3_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55) & ~(ap_const_lv1_0 == exitcond_reg_2097)))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_145) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        column_index_0_in_reg_884 <= column_index_reg_1919;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_29)) begin
        column_index_0_in_reg_884 <= row_index_cast_reg_1881;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_145) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        counter_1_reg_893 <= tmp_56_reg_2185;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_29)) begin
        counter_1_reg_893 <= counter_reg_849;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        counter_reg_849 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_30) & (ap_const_lv1_0 == tmp_8_fu_1441_p2))) begin
        counter_reg_849 <= counter_2_reg_1914;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond_i_fu_1303_p2))) begin
        i1_i_reg_803 <= ap_const_lv31_2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        i1_i_reg_803 <= i_3_reg_1628;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        i1_reg_916 <= ap_const_lv31_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_const_lv1_0 == tmp_14_reg_1958))) begin
        i1_reg_916 <= i_reg_1962;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51))) begin
        i2_reg_1012 <= i_1_reg_2101;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        i2_reg_1012 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_i_reg_791 <= i_2_fu_1314_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_i_reg_791 <= ap_const_lv8_2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & (ap_const_lv1_0 == exitcond2_reg_1949) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar1_reg_904 <= indvar_next1_reg_1953;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_43)) begin
        indvar1_reg_904 <= ap_const_lv30_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & (exitcond4_reg_1900 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_reg_872 <= indvar_next_reg_1904;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        indvar_reg_872 <= ap_const_lv30_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        indvars_iv2_reg_814 <= ap_const_lv32_FFFFFFFF;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_30) & (ap_const_lv1_0 == tmp_8_fu_1441_p2))) begin
        indvars_iv2_reg_814 <= indvars_iv_next3_fu_1452_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        indvars_iv_reg_826 <= ap_const_lv32_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_30) & (ap_const_lv1_0 == tmp_8_fu_1441_p2))) begin
        indvars_iv_reg_826 <= indvars_iv_next_fu_1446_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        phi_mul_reg_861 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_30) & (ap_const_lv1_0 == tmp_8_fu_1441_p2))) begin
        phi_mul_reg_861 <= next_mul_reg_1876;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & ~(ap_const_lv1_0 == tmp_14_reg_1958))) begin
        reg_1157 <= weight_rom_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50))) begin
        reg_1157 <= weight_rom_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        row_index_reg_838 <= ap_const_lv31_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_30) & (ap_const_lv1_0 == tmp_8_fu_1441_p2))) begin
        row_index_reg_838 <= row_index_1_reg_1889;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        sum_returnA_reg_928 <= reg_1170;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        sum_returnA_reg_928 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        sum_returnB_reg_940 <= sum_returnB_1_reg_2150;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        sum_returnB_reg_940 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        sum_weight_returnA_reg_964 <= sum_weight_returnA_1_reg_2160;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        sum_weight_returnA_reg_964 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        sum_weight_returnA_returnB_reg_1000 <= grp_fu_1024_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        sum_weight_returnA_returnB_reg_1000 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        sum_weight_returnB_reg_988 <= sum_weight_returnB_1_reg_2170;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        sum_weight_returnB_reg_988 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        sum_weight_returnSquareA_reg_952 <= sum_weight_returnSquareA_1_reg_2155;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        sum_weight_returnSquareA_reg_952 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        sum_weight_returnSquareB_reg_976 <= sum_weight_returnSquareB_1_reg_2165;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_50)) begin
        sum_weight_returnSquareB_reg_976 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_i_reg_779 <= reg_1147;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_i_reg_779 <= ap_const_lv32_3F800000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it33)) begin
        acc_returnA_addr_1_reg_2030 <= tmp_20_fu_1530_p1;
        acc_returnB_addr_1_reg_2036 <= tmp_20_fu_1530_p1;
        acc_weight_returnA_addr_1_reg_2054 <= tmp_20_fu_1530_p1;
        acc_weight_returnA_returnB_add_6_reg_2076 <= tmp_20_fu_1530_p1;
        acc_weight_returnB_addr_1_reg_2065 <= tmp_20_fu_1530_p1;
        acc_weight_returnSquareA_addr_1_reg_2042 <= tmp_20_fu_1530_p1;
        acc_weight_returnSquareB_addr_1_reg_2048 <= tmp_20_fu_1530_p1;
        tmp_31_reg_2060 <= grp_fu_1088_p2;
        tmp_33_reg_2071 <= grp_fu_1092_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it35 <= acc_returnA_addr_1_reg_2030;
        ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it36 <= ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it35;
        ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it37 <= ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it36;
        ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it38 <= ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it37;
        ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it35 <= acc_returnB_addr_1_reg_2036;
        ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it36 <= ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it35;
        ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it37 <= ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it36;
        ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it38 <= ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it37;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it35 <= acc_weight_returnA_addr_1_reg_2054;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it36 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it35;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it37 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it36;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it38 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it37;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it35 <= acc_weight_returnA_returnB_add_6_reg_2076;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it36 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it35;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it37 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it36;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it38 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it37;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it39 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it38;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it40 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it39;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it41 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it40;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it42 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it41;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it35 <= acc_weight_returnB_addr_1_reg_2065;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it36 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it35;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it37 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it36;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it38 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it37;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it35 <= acc_weight_returnSquareA_addr_1_reg_2042;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it36 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it35;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it37 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it36;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it38 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it37;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it39 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it38;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it40 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it39;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it41 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it40;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it42 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it41;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it35 <= acc_weight_returnSquareB_addr_1_reg_2048;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it36 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it35;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it37 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it36;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it38 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it37;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it39 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it38;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it40 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it39;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it41 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it40;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it42 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it41;
        ap_reg_ppstg_lnReturnA_reg_2012_pp2_it31 <= lnReturnA_reg_2012;
        ap_reg_ppstg_lnReturnA_reg_2012_pp2_it32 <= ap_reg_ppstg_lnReturnA_reg_2012_pp2_it31;
        ap_reg_ppstg_lnReturnA_reg_2012_pp2_it33 <= ap_reg_ppstg_lnReturnA_reg_2012_pp2_it32;
        ap_reg_ppstg_lnReturnA_reg_2012_pp2_it34 <= ap_reg_ppstg_lnReturnA_reg_2012_pp2_it33;
        ap_reg_ppstg_lnReturnB_reg_2021_pp2_it31 <= lnReturnB_reg_2021;
        ap_reg_ppstg_lnReturnB_reg_2021_pp2_it32 <= ap_reg_ppstg_lnReturnB_reg_2021_pp2_it31;
        ap_reg_ppstg_lnReturnB_reg_2021_pp2_it33 <= ap_reg_ppstg_lnReturnB_reg_2021_pp2_it32;
        ap_reg_ppstg_lnReturnB_reg_2021_pp2_it34 <= ap_reg_ppstg_lnReturnB_reg_2021_pp2_it33;
        ap_reg_ppstg_reg_1157_pp2_it10 <= ap_reg_ppstg_reg_1157_pp2_it9;
        ap_reg_ppstg_reg_1157_pp2_it11 <= ap_reg_ppstg_reg_1157_pp2_it10;
        ap_reg_ppstg_reg_1157_pp2_it12 <= ap_reg_ppstg_reg_1157_pp2_it11;
        ap_reg_ppstg_reg_1157_pp2_it13 <= ap_reg_ppstg_reg_1157_pp2_it12;
        ap_reg_ppstg_reg_1157_pp2_it14 <= ap_reg_ppstg_reg_1157_pp2_it13;
        ap_reg_ppstg_reg_1157_pp2_it15 <= ap_reg_ppstg_reg_1157_pp2_it14;
        ap_reg_ppstg_reg_1157_pp2_it16 <= ap_reg_ppstg_reg_1157_pp2_it15;
        ap_reg_ppstg_reg_1157_pp2_it17 <= ap_reg_ppstg_reg_1157_pp2_it16;
        ap_reg_ppstg_reg_1157_pp2_it18 <= ap_reg_ppstg_reg_1157_pp2_it17;
        ap_reg_ppstg_reg_1157_pp2_it19 <= ap_reg_ppstg_reg_1157_pp2_it18;
        ap_reg_ppstg_reg_1157_pp2_it2 <= reg_1157;
        ap_reg_ppstg_reg_1157_pp2_it20 <= ap_reg_ppstg_reg_1157_pp2_it19;
        ap_reg_ppstg_reg_1157_pp2_it21 <= ap_reg_ppstg_reg_1157_pp2_it20;
        ap_reg_ppstg_reg_1157_pp2_it22 <= ap_reg_ppstg_reg_1157_pp2_it21;
        ap_reg_ppstg_reg_1157_pp2_it23 <= ap_reg_ppstg_reg_1157_pp2_it22;
        ap_reg_ppstg_reg_1157_pp2_it24 <= ap_reg_ppstg_reg_1157_pp2_it23;
        ap_reg_ppstg_reg_1157_pp2_it25 <= ap_reg_ppstg_reg_1157_pp2_it24;
        ap_reg_ppstg_reg_1157_pp2_it26 <= ap_reg_ppstg_reg_1157_pp2_it25;
        ap_reg_ppstg_reg_1157_pp2_it27 <= ap_reg_ppstg_reg_1157_pp2_it26;
        ap_reg_ppstg_reg_1157_pp2_it28 <= ap_reg_ppstg_reg_1157_pp2_it27;
        ap_reg_ppstg_reg_1157_pp2_it29 <= ap_reg_ppstg_reg_1157_pp2_it28;
        ap_reg_ppstg_reg_1157_pp2_it3 <= ap_reg_ppstg_reg_1157_pp2_it2;
        ap_reg_ppstg_reg_1157_pp2_it30 <= ap_reg_ppstg_reg_1157_pp2_it29;
        ap_reg_ppstg_reg_1157_pp2_it31 <= ap_reg_ppstg_reg_1157_pp2_it30;
        ap_reg_ppstg_reg_1157_pp2_it32 <= ap_reg_ppstg_reg_1157_pp2_it31;
        ap_reg_ppstg_reg_1157_pp2_it33 <= ap_reg_ppstg_reg_1157_pp2_it32;
        ap_reg_ppstg_reg_1157_pp2_it34 <= ap_reg_ppstg_reg_1157_pp2_it33;
        ap_reg_ppstg_reg_1157_pp2_it4 <= ap_reg_ppstg_reg_1157_pp2_it3;
        ap_reg_ppstg_reg_1157_pp2_it5 <= ap_reg_ppstg_reg_1157_pp2_it4;
        ap_reg_ppstg_reg_1157_pp2_it6 <= ap_reg_ppstg_reg_1157_pp2_it5;
        ap_reg_ppstg_reg_1157_pp2_it7 <= ap_reg_ppstg_reg_1157_pp2_it6;
        ap_reg_ppstg_reg_1157_pp2_it8 <= ap_reg_ppstg_reg_1157_pp2_it7;
        ap_reg_ppstg_reg_1157_pp2_it9 <= ap_reg_ppstg_reg_1157_pp2_it8;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it10 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it9;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it11 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it10;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it12 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it11;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it13 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it12;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it14 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it13;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it15 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it14;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it16 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it15;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it17 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it16;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it18 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it17;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it19 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it18;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it2 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it1;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it20 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it19;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it21 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it20;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it22 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it21;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it23 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it22;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it24 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it23;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it25 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it24;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it26 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it25;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it27 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it26;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it28 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it27;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it29 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it28;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it3 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it2;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it30 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it29;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it31 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it30;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it32 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it31;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it33 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it32;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it34 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it33;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it35 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it34;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it36 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it35;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it37 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it36;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it38 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it37;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it39 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it38;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it4 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it3;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it40 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it39;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it41 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it40;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it42 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it41;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it5 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it4;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it6 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it5;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it7 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it6;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it8 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it7;
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it9 <= ap_reg_ppstg_tmp_14_reg_1958_pp2_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        ap_reg_ppstg_exitcond2_reg_1949_pp1_it1 <= exitcond2_reg_1949;
        ap_reg_ppstg_indvar1_reg_904_pp1_it1 <= indvar1_reg_904;
        exitcond2_reg_1949 <= exitcond2_fu_1480_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond4_reg_1900_pp0_it1 <= exitcond4_reg_1900;
        ap_reg_ppstg_indvar_reg_872_pp0_it1 <= indvar_reg_872;
        exitcond4_reg_1900 <= exitcond4_fu_1396_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51)) begin
        ap_reg_ppstg_exitcond_reg_2097_pp3_it1 <= exitcond_reg_2097;
        exitcond_reg_2097 <= exitcond_fu_1541_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48)) begin
        ap_reg_ppstg_tmp_14_reg_1958_pp2_it1 <= tmp_14_reg_1958;
        tmp_14_reg_1958 <= tmp_14_fu_1500_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & ~(ap_const_lv1_0 == tmp_14_reg_1958))) begin
        bramA_load_1_reg_1997 <= bramA_q1;
        bramA_load_reg_1992 <= bramA_q0;
        bramB_load_1_reg_2007 <= bramB_q1;
        bramB_load_reg_2002 <= bramB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_30)) begin
        column_index_reg_1919 <= column_index_fu_1435_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_29)) begin
        counter_2_reg_1914 <= counter_2_fu_1429_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_37)) begin
        gmem32_addr_1_reg_1943 <= tmp_64_fu_1470_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_56)) begin
        gmem32_addr_2_reg_2180 <= out_correlation4_sum_cast_fu_1568_p1;
        tmp_56_reg_2185 <= tmp_56_fu_1578_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & ~(ap_const_lv1_0 == tmp_4_fu_1366_p2))) begin
        gmem32_addr_reg_1894 <= tmp_55_fu_1386_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51))) begin
        i_1_reg_2101 <= i_1_fu_1547_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_59_i_fu_1324_p2))) begin
        i_3_reg_1628 <= i_3_fu_1334_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        i_reg_1962 <= i_fu_1505_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar_next1_reg_1953 <= indvar_next1_fu_1485_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_next_reg_1904 <= indvar_next_fu_1401_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it29)) begin
        lnReturnA_reg_2012 <= grp_fu_1137_p2;
        lnReturnB_reg_2021 <= grp_fu_1142_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        next_mul_reg_1876 <= next_mul_fu_1357_p2;
        row_index_1_reg_1889 <= row_index_1_fu_1371_p2;
        row_index_cast_reg_1881[0] <= row_index_cast_fu_1362_p1[0];
row_index_cast_reg_1881[1] <= row_index_cast_fu_1362_p1[1];
row_index_cast_reg_1881[2] <= row_index_cast_fu_1362_p1[2];
row_index_cast_reg_1881[3] <= row_index_cast_fu_1362_p1[3];
row_index_cast_reg_1881[4] <= row_index_cast_fu_1362_p1[4];
row_index_cast_reg_1881[5] <= row_index_cast_fu_1362_p1[5];
row_index_cast_reg_1881[6] <= row_index_cast_fu_1362_p1[6];
row_index_cast_reg_1881[7] <= row_index_cast_fu_1362_p1[7];
row_index_cast_reg_1881[8] <= row_index_cast_fu_1362_p1[8];
row_index_cast_reg_1881[9] <= row_index_cast_fu_1362_p1[9];
row_index_cast_reg_1881[10] <= row_index_cast_fu_1362_p1[10];
row_index_cast_reg_1881[11] <= row_index_cast_fu_1362_p1[11];
row_index_cast_reg_1881[12] <= row_index_cast_fu_1362_p1[12];
row_index_cast_reg_1881[13] <= row_index_cast_fu_1362_p1[13];
row_index_cast_reg_1881[14] <= row_index_cast_fu_1362_p1[14];
row_index_cast_reg_1881[15] <= row_index_cast_fu_1362_p1[15];
row_index_cast_reg_1881[16] <= row_index_cast_fu_1362_p1[16];
row_index_cast_reg_1881[17] <= row_index_cast_fu_1362_p1[17];
row_index_cast_reg_1881[18] <= row_index_cast_fu_1362_p1[18];
row_index_cast_reg_1881[19] <= row_index_cast_fu_1362_p1[19];
row_index_cast_reg_1881[20] <= row_index_cast_fu_1362_p1[20];
row_index_cast_reg_1881[21] <= row_index_cast_fu_1362_p1[21];
row_index_cast_reg_1881[22] <= row_index_cast_fu_1362_p1[22];
row_index_cast_reg_1881[23] <= row_index_cast_fu_1362_p1[23];
row_index_cast_reg_1881[24] <= row_index_cast_fu_1362_p1[24];
row_index_cast_reg_1881[25] <= row_index_cast_fu_1362_p1[25];
row_index_cast_reg_1881[26] <= row_index_cast_fu_1362_p1[26];
row_index_cast_reg_1881[27] <= row_index_cast_fu_1362_p1[27];
row_index_cast_reg_1881[28] <= row_index_cast_fu_1362_p1[28];
row_index_cast_reg_1881[29] <= row_index_cast_fu_1362_p1[29];
row_index_cast_reg_1881[30] <= row_index_cast_fu_1362_p1[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        p_add_i32_shr_reg_1661[0] <= p_add_i32_shr_fu_1353_p1[0];
p_add_i32_shr_reg_1661[1] <= p_add_i32_shr_fu_1353_p1[1];
p_add_i32_shr_reg_1661[2] <= p_add_i32_shr_fu_1353_p1[2];
p_add_i32_shr_reg_1661[3] <= p_add_i32_shr_fu_1353_p1[3];
p_add_i32_shr_reg_1661[4] <= p_add_i32_shr_fu_1353_p1[4];
p_add_i32_shr_reg_1661[5] <= p_add_i32_shr_fu_1353_p1[5];
p_add_i32_shr_reg_1661[6] <= p_add_i32_shr_fu_1353_p1[6];
p_add_i32_shr_reg_1661[7] <= p_add_i32_shr_fu_1353_p1[7];
p_add_i32_shr_reg_1661[8] <= p_add_i32_shr_fu_1353_p1[8];
p_add_i32_shr_reg_1661[9] <= p_add_i32_shr_fu_1353_p1[9];
p_add_i32_shr_reg_1661[10] <= p_add_i32_shr_fu_1353_p1[10];
p_add_i32_shr_reg_1661[11] <= p_add_i32_shr_fu_1353_p1[11];
p_add_i32_shr_reg_1661[12] <= p_add_i32_shr_fu_1353_p1[12];
p_add_i32_shr_reg_1661[13] <= p_add_i32_shr_fu_1353_p1[13];
p_add_i32_shr_reg_1661[14] <= p_add_i32_shr_fu_1353_p1[14];
p_add_i32_shr_reg_1661[15] <= p_add_i32_shr_fu_1353_p1[15];
p_add_i32_shr_reg_1661[16] <= p_add_i32_shr_fu_1353_p1[16];
p_add_i32_shr_reg_1661[17] <= p_add_i32_shr_fu_1353_p1[17];
p_add_i32_shr_reg_1661[18] <= p_add_i32_shr_fu_1353_p1[18];
p_add_i32_shr_reg_1661[19] <= p_add_i32_shr_fu_1353_p1[19];
p_add_i32_shr_reg_1661[20] <= p_add_i32_shr_fu_1353_p1[20];
p_add_i32_shr_reg_1661[21] <= p_add_i32_shr_fu_1353_p1[21];
p_add_i32_shr_reg_1661[22] <= p_add_i32_shr_fu_1353_p1[22];
p_add_i32_shr_reg_1661[23] <= p_add_i32_shr_fu_1353_p1[23];
p_add_i32_shr_reg_1661[24] <= p_add_i32_shr_fu_1353_p1[24];
p_add_i32_shr_reg_1661[25] <= p_add_i32_shr_fu_1353_p1[25];
p_add_i32_shr_reg_1661[26] <= p_add_i32_shr_fu_1353_p1[26];
p_add_i32_shr_reg_1661[27] <= p_add_i32_shr_fu_1353_p1[27];
p_add_i32_shr_reg_1661[28] <= p_add_i32_shr_fu_1353_p1[28];
p_add_i32_shr_reg_1661[29] <= p_add_i32_shr_fu_1353_p1[29];
        tmp_2_reg_1649 <= grp_fu_1124_p1;
        tmp_6_reg_1655 <= tmp_6_fu_1350_p1;
        tmp_reg_1644 <= tmp_fu_1345_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it33) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st132_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_100) | (ap_const_logic_1 == ap_sig_cseq_ST_st178_fsm_125))) begin
        reg_1147 <= grp_fu_1074_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1)))) begin
        reg_1170 <= grp_fu_1024_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & (exitcond4_reg_1900 == ap_const_lv1_0) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & (ap_const_lv1_0 == exitcond2_reg_1949) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        reg_1176 <= gmem32_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_100) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it16) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_71) | ((ap_const_logic_1 == ap_sig_cseq_ST_st194_fsm_141) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)))) begin
        reg_1182 <= grp_fu_1114_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_100) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it16) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_71))) begin
        reg_1192 <= grp_fu_1118_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it33) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st132_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_100))) begin
        reg_1202 <= grp_fu_1080_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it33) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_100))) begin
        reg_1209 <= grp_fu_1084_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it34) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_52) & (ap_const_lv1_0 == exitcond_reg_2097)))) begin
        reg_1215 <= acc_returnA_q0;
        reg_1221 <= acc_returnB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it34) | ((ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53)))) begin
        reg_1227 <= acc_weight_returnA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it34) | ((ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54)))) begin
        reg_1233 <= acc_weight_returnB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53)) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it38))) begin
        reg_1239 <= acc_weight_returnSquareA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54)) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it38))) begin
        reg_1245 <= acc_weight_returnSquareB_q0;
        reg_1251 <= acc_weight_returnA_returnB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_105))) begin
        reg_1257 <= grp_fu_1024_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_84) | (ap_const_logic_1 == ap_sig_cseq_ST_st159_fsm_106))) begin
        reg_1264 <= grp_fu_1024_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_105) | (ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_84))) begin
        reg_1269 <= grp_fu_1030_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1))) begin
        sum_returnB_1_reg_2150 <= grp_fu_1030_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        sum_weight_returnA_1_reg_2160 <= grp_fu_1030_p2;
        sum_weight_returnSquareA_1_reg_2155 <= grp_fu_1024_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        sum_weight_returnB_1_reg_2170 <= grp_fu_1030_p2;
        sum_weight_returnSquareB_1_reg_2165 <= grp_fu_1024_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_36)) begin
        tmp_10_reg_1938 <= grp_fu_1458_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_59_i_fu_1324_p2))) begin
        tmp_1_reg_1633 <= tmp_1_fu_1340_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it37)) begin
        tmp_24_reg_2082 <= grp_fu_1096_p2;
        tmp_27_reg_2087 <= grp_fu_1100_p2;
        tmp_34_reg_2092 <= grp_fu_1104_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st132_fsm_79)) begin
        tmp_50_reg_2190 <= grp_fu_1084_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101)) begin
        tmp_52_reg_2195 <= grp_fu_1114_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51) & (ap_const_lv1_0 == exitcond_fu_1541_p2))) begin
        tmp_57_reg_2106[0] <= tmp_57_fu_1553_p1[0];
tmp_57_reg_2106[1] <= tmp_57_fu_1553_p1[1];
tmp_57_reg_2106[2] <= tmp_57_fu_1553_p1[2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_61_cast_reg_1601[0] <= tmp_61_cast_fu_1285_p1[0];
tmp_61_cast_reg_1601[1] <= tmp_61_cast_fu_1285_p1[1];
tmp_61_cast_reg_1601[2] <= tmp_61_cast_fu_1285_p1[2];
tmp_61_cast_reg_1601[3] <= tmp_61_cast_fu_1285_p1[3];
tmp_61_cast_reg_1601[4] <= tmp_61_cast_fu_1285_p1[4];
tmp_61_cast_reg_1601[5] <= tmp_61_cast_fu_1285_p1[5];
tmp_61_cast_reg_1601[6] <= tmp_61_cast_fu_1285_p1[6];
tmp_61_cast_reg_1601[7] <= tmp_61_cast_fu_1285_p1[7];
tmp_61_cast_reg_1601[8] <= tmp_61_cast_fu_1285_p1[8];
tmp_61_cast_reg_1601[9] <= tmp_61_cast_fu_1285_p1[9];
tmp_61_cast_reg_1601[10] <= tmp_61_cast_fu_1285_p1[10];
tmp_61_cast_reg_1601[11] <= tmp_61_cast_fu_1285_p1[11];
tmp_61_cast_reg_1601[12] <= tmp_61_cast_fu_1285_p1[12];
tmp_61_cast_reg_1601[13] <= tmp_61_cast_fu_1285_p1[13];
tmp_61_cast_reg_1601[14] <= tmp_61_cast_fu_1285_p1[14];
tmp_61_cast_reg_1601[15] <= tmp_61_cast_fu_1285_p1[15];
tmp_61_cast_reg_1601[16] <= tmp_61_cast_fu_1285_p1[16];
tmp_61_cast_reg_1601[17] <= tmp_61_cast_fu_1285_p1[17];
tmp_61_cast_reg_1601[18] <= tmp_61_cast_fu_1285_p1[18];
tmp_61_cast_reg_1601[19] <= tmp_61_cast_fu_1285_p1[19];
tmp_61_cast_reg_1601[20] <= tmp_61_cast_fu_1285_p1[20];
tmp_61_cast_reg_1601[21] <= tmp_61_cast_fu_1285_p1[21];
tmp_61_cast_reg_1601[22] <= tmp_61_cast_fu_1285_p1[22];
tmp_61_cast_reg_1601[23] <= tmp_61_cast_fu_1285_p1[23];
tmp_61_cast_reg_1601[24] <= tmp_61_cast_fu_1285_p1[24];
tmp_61_cast_reg_1601[25] <= tmp_61_cast_fu_1285_p1[25];
tmp_61_cast_reg_1601[26] <= tmp_61_cast_fu_1285_p1[26];
tmp_61_cast_reg_1601[27] <= tmp_61_cast_fu_1285_p1[27];
tmp_61_cast_reg_1601[28] <= tmp_61_cast_fu_1285_p1[28];
tmp_61_cast_reg_1601[29] <= tmp_61_cast_fu_1285_p1[29];
        tmp_62_cast_reg_1606[0] <= tmp_62_cast_fu_1299_p1[0];
tmp_62_cast_reg_1606[1] <= tmp_62_cast_fu_1299_p1[1];
tmp_62_cast_reg_1606[2] <= tmp_62_cast_fu_1299_p1[2];
tmp_62_cast_reg_1606[3] <= tmp_62_cast_fu_1299_p1[3];
tmp_62_cast_reg_1606[4] <= tmp_62_cast_fu_1299_p1[4];
tmp_62_cast_reg_1606[5] <= tmp_62_cast_fu_1299_p1[5];
tmp_62_cast_reg_1606[6] <= tmp_62_cast_fu_1299_p1[6];
tmp_62_cast_reg_1606[7] <= tmp_62_cast_fu_1299_p1[7];
tmp_62_cast_reg_1606[8] <= tmp_62_cast_fu_1299_p1[8];
tmp_62_cast_reg_1606[9] <= tmp_62_cast_fu_1299_p1[9];
tmp_62_cast_reg_1606[10] <= tmp_62_cast_fu_1299_p1[10];
tmp_62_cast_reg_1606[11] <= tmp_62_cast_fu_1299_p1[11];
tmp_62_cast_reg_1606[12] <= tmp_62_cast_fu_1299_p1[12];
tmp_62_cast_reg_1606[13] <= tmp_62_cast_fu_1299_p1[13];
tmp_62_cast_reg_1606[14] <= tmp_62_cast_fu_1299_p1[14];
tmp_62_cast_reg_1606[15] <= tmp_62_cast_fu_1299_p1[15];
tmp_62_cast_reg_1606[16] <= tmp_62_cast_fu_1299_p1[16];
tmp_62_cast_reg_1606[17] <= tmp_62_cast_fu_1299_p1[17];
tmp_62_cast_reg_1606[18] <= tmp_62_cast_fu_1299_p1[18];
tmp_62_cast_reg_1606[19] <= tmp_62_cast_fu_1299_p1[19];
tmp_62_cast_reg_1606[20] <= tmp_62_cast_fu_1299_p1[20];
tmp_62_cast_reg_1606[21] <= tmp_62_cast_fu_1299_p1[21];
tmp_62_cast_reg_1606[22] <= tmp_62_cast_fu_1299_p1[22];
tmp_62_cast_reg_1606[23] <= tmp_62_cast_fu_1299_p1[23];
tmp_62_cast_reg_1606[24] <= tmp_62_cast_fu_1299_p1[24];
tmp_62_cast_reg_1606[25] <= tmp_62_cast_fu_1299_p1[25];
tmp_62_cast_reg_1606[26] <= tmp_62_cast_fu_1299_p1[26];
tmp_62_cast_reg_1606[27] <= tmp_62_cast_fu_1299_p1[27];
tmp_62_cast_reg_1606[28] <= tmp_62_cast_fu_1299_p1[28];
tmp_62_cast_reg_1606[29] <= tmp_62_cast_fu_1299_p1[29];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_28)) begin
        tmp_61_reg_1909 <= tmp_61_fu_1412_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st174_fsm_121)) begin
        volatilityA_reg_2200 <= grp_fu_1127_p2;
        volatilityB_reg_2205 <= grp_fu_1132_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        weight_rom_load_1_reg_1639 <= weight_rom_q0;
    end
end

/// acc_returnA_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp3_it0 or acc_returnA_addr_reg_1666 or acc_returnA_addr_7_reg_1736 or acc_returnA_addr_4_reg_1806 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or tmp_57_fu_1553_p1 or ap_sig_cseq_ST_st52_fsm_47 or tmp_20_fu_1530_p1 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_returnA_address0 = acc_returnA_addr_4_reg_1806;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_returnA_address0 = acc_returnA_addr_7_reg_1736;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_returnA_address0 = acc_returnA_addr_reg_1666;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51))) begin
        acc_returnA_address0 = tmp_57_fu_1553_p1;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34)) begin
        acc_returnA_address0 = tmp_20_fu_1530_p1;
    end else begin
        acc_returnA_address0 = 'bx;
    end
end

/// acc_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or acc_returnA_addr_6_reg_1701 or acc_returnA_addr_3_reg_1771 or acc_returnA_addr_5_reg_1841 or ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_returnA_address1 = ap_reg_ppstg_acc_returnA_addr_1_reg_2030_pp2_it38;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_returnA_address1 = acc_returnA_addr_5_reg_1841;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_returnA_address1 = acc_returnA_addr_3_reg_1771;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_returnA_address1 = acc_returnA_addr_6_reg_1701;
    end else begin
        acc_returnA_address1 = 'bx;
    end
end

/// acc_returnA_ce0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51)) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_returnA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_returnA_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or grp_fu_1024_p2 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_returnA_d1 = grp_fu_1024_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnA_d1 = ap_const_lv32_0;
    end else begin
        acc_returnA_d1 = 'bx;
    end
end

/// acc_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_returnA_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it38)))) begin
        acc_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_returnB_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp3_it0 or acc_returnB_addr_reg_1671 or acc_returnB_addr_7_reg_1741 or acc_returnB_addr_4_reg_1811 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or tmp_57_fu_1553_p1 or ap_sig_cseq_ST_st52_fsm_47 or tmp_20_fu_1530_p1 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_returnB_address0 = acc_returnB_addr_4_reg_1811;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_returnB_address0 = acc_returnB_addr_7_reg_1741;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_returnB_address0 = acc_returnB_addr_reg_1671;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51))) begin
        acc_returnB_address0 = tmp_57_fu_1553_p1;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34)) begin
        acc_returnB_address0 = tmp_20_fu_1530_p1;
    end else begin
        acc_returnB_address0 = 'bx;
    end
end

/// acc_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or acc_returnB_addr_6_reg_1706 or acc_returnB_addr_3_reg_1776 or acc_returnB_addr_5_reg_1846 or ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_returnB_address1 = ap_reg_ppstg_acc_returnB_addr_1_reg_2036_pp2_it38;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_returnB_address1 = acc_returnB_addr_5_reg_1846;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_returnB_address1 = acc_returnB_addr_3_reg_1776;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_returnB_address1 = acc_returnB_addr_6_reg_1706;
    end else begin
        acc_returnB_address1 = 'bx;
    end
end

/// acc_returnB_ce0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51)) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or grp_fu_1030_p2 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_returnB_d1 = grp_fu_1030_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_returnB_d1 = 'bx;
    end
end

/// acc_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_returnB_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it38)))) begin
        acc_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp3_stg1_fsm_52 or ap_reg_ppiten_pp3_it0 or acc_weight_returnA_addr_reg_1681 or acc_weight_returnA_addr_7_reg_1751 or acc_weight_returnA_addr_4_reg_1821 or tmp_57_reg_2106 or ap_sig_cseq_ST_st52_fsm_47 or tmp_20_fu_1530_p1 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_4_reg_1821;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_7_reg_1751;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_reg_1681;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
        acc_weight_returnA_address0 = tmp_57_reg_2106;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34)) begin
        acc_weight_returnA_address0 = tmp_20_fu_1530_p1;
    end else begin
        acc_weight_returnA_address0 = 'bx;
    end
end

/// acc_weight_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or acc_weight_returnA_addr_6_reg_1716 or acc_weight_returnA_addr_3_reg_1786 or acc_weight_returnA_addr_5_reg_1856 or ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_weight_returnA_address1 = ap_reg_ppstg_acc_weight_returnA_addr_1_reg_2054_pp2_it38;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_5_reg_1856;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_3_reg_1786;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_6_reg_1716;
    end else begin
        acc_weight_returnA_address1 = 'bx;
    end
end

/// acc_weight_returnA_ce0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp3_stg1_fsm_52 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46 or grp_fu_1036_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_weight_returnA_d1 = grp_fu_1036_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_d1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it38 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or acc_weight_returnA_returnB_add_reg_1696 or acc_weight_returnA_returnB_add_2_reg_1766 or acc_weight_returnA_returnB_add_4_reg_1836 or ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it37 or tmp_57_reg_2106 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_4_reg_1836;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_2_reg_1766;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_reg_1696;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        acc_weight_returnA_returnB_address0 = tmp_57_reg_2106;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it38)) begin
        acc_weight_returnA_returnB_address0 = ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it37;
    end else begin
        acc_weight_returnA_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or acc_weight_returnA_returnB_add_1_reg_1731 or acc_weight_returnA_returnB_add_3_reg_1801 or acc_weight_returnA_returnB_add_5_reg_1871 or ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it42 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43)) begin
        acc_weight_returnA_returnB_address1 = ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2076_pp2_it42;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_5_reg_1871;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_3_reg_1801;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_1_reg_1731;
    end else begin
        acc_weight_returnA_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_ce0 assign process. ///
always @ (ap_reg_ppiten_pp2_it38 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it38) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53)) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it43) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46 or grp_fu_1060_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43)) begin
        acc_weight_returnA_returnB_d1 = grp_fu_1060_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_returnB_d1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it42 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it42)))) begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it38)))) begin
        acc_weight_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or acc_weight_returnB_addr_reg_1691 or acc_weight_returnB_addr_7_reg_1761 or acc_weight_returnB_addr_4_reg_1831 or tmp_57_reg_2106 or ap_sig_cseq_ST_st52_fsm_47 or tmp_20_fu_1530_p1 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_4_reg_1831;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_7_reg_1761;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_reg_1691;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        acc_weight_returnB_address0 = tmp_57_reg_2106;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34)) begin
        acc_weight_returnB_address0 = tmp_20_fu_1530_p1;
    end else begin
        acc_weight_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or acc_weight_returnB_addr_6_reg_1726 or acc_weight_returnB_addr_3_reg_1796 or acc_weight_returnB_addr_5_reg_1866 or ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_weight_returnB_address1 = ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2065_pp2_it38;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_5_reg_1866;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_3_reg_1796;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_6_reg_1726;
    end else begin
        acc_weight_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnB_ce0 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53)) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46 or grp_fu_1042_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39)) begin
        acc_weight_returnB_d1 = grp_fu_1042_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnB_d1 = 'bx;
    end
end

/// acc_weight_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it39 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it38 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it39) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it38)))) begin
        acc_weight_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it38 or ap_sig_cseq_ST_pp3_stg1_fsm_52 or ap_reg_ppiten_pp3_it0 or acc_weight_returnSquareA_addr_reg_1676 or acc_weight_returnSquareA_addr_7_reg_1746 or acc_weight_returnSquareA_addr_4_reg_1816 or ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it37 or tmp_57_reg_2106 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_4_reg_1816;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_7_reg_1746;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_reg_1676;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
        acc_weight_returnSquareA_address0 = tmp_57_reg_2106;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it38)) begin
        acc_weight_returnSquareA_address0 = ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it37;
    end else begin
        acc_weight_returnSquareA_address0 = 'bx;
    end
end

/// acc_weight_returnSquareA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or acc_weight_returnSquareA_addr_6_reg_1711 or acc_weight_returnSquareA_addr_3_reg_1781 or acc_weight_returnSquareA_addr_5_reg_1851 or ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it42 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43)) begin
        acc_weight_returnSquareA_address1 = ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_2042_pp2_it42;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_5_reg_1851;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_3_reg_1781;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_6_reg_1711;
    end else begin
        acc_weight_returnSquareA_address1 = 'bx;
    end
end

/// acc_weight_returnSquareA_ce0 assign process. ///
always @ (ap_reg_ppiten_pp2_it38 or ap_sig_cseq_ST_pp3_stg1_fsm_52 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it38) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it43) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46 or grp_fu_1048_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43)) begin
        acc_weight_returnSquareA_d1 = grp_fu_1048_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareA_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareA_d1 = 'bx;
    end
end

/// acc_weight_returnSquareA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it42 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it42)))) begin
        acc_weight_returnSquareA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it38 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or acc_weight_returnSquareB_addr_reg_1686 or acc_weight_returnSquareB_addr_7_reg_1756 or acc_weight_returnSquareB_addr_4_reg_1826 or ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it37 or tmp_57_reg_2106 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_4_reg_1826;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_7_reg_1756;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_reg_1686;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        acc_weight_returnSquareB_address0 = tmp_57_reg_2106;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it38)) begin
        acc_weight_returnSquareB_address0 = ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it37;
    end else begin
        acc_weight_returnSquareB_address0 = 'bx;
    end
end

/// acc_weight_returnSquareB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or acc_weight_returnSquareB_addr_6_reg_1721 or acc_weight_returnSquareB_addr_3_reg_1791 or acc_weight_returnSquareB_addr_5_reg_1861 or ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it42 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43)) begin
        acc_weight_returnSquareB_address1 = ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_2048_pp2_it42;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_5_reg_1861;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_3_reg_1791;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_6_reg_1721;
    end else begin
        acc_weight_returnSquareB_address1 = 'bx;
    end
end

/// acc_weight_returnSquareB_ce0 assign process. ///
always @ (ap_reg_ppiten_pp2_it38 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it38) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53)) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it43) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46 or grp_fu_1054_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43)) begin
        acc_weight_returnSquareB_d1 = grp_fu_1054_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareB_d1 = 'bx;
    end
end

/// acc_weight_returnSquareB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46))) begin
        acc_weight_returnSquareB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it43 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it42 or ap_sig_cseq_ST_st52_fsm_47 or ap_sig_cseq_ST_st50_fsm_45 or ap_sig_cseq_ST_st51_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_46) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it43) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it42)))) begin
        acc_weight_returnSquareB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or tmp_4_fu_1366_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & (ap_const_lv1_0 == tmp_4_fu_1366_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or tmp_4_fu_1366_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & (ap_const_lv1_0 == tmp_4_fu_1366_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_27 assign process. ///
always @ (ap_sig_bdd_353)
begin
    if (ap_sig_bdd_353) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_44 assign process. ///
always @ (ap_sig_bdd_378)
begin
    if (ap_sig_bdd_378) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg0_fsm_48 assign process. ///
always @ (ap_sig_bdd_401)
begin
    if (ap_sig_bdd_401) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg0_fsm_51 assign process. ///
always @ (ap_sig_bdd_1336)
begin
    if (ap_sig_bdd_1336) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg1_fsm_52 assign process. ///
always @ (ap_sig_bdd_659)
begin
    if (ap_sig_bdd_659) begin
        ap_sig_cseq_ST_pp3_stg1_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg1_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg2_fsm_53 assign process. ///
always @ (ap_sig_bdd_776)
begin
    if (ap_sig_bdd_776) begin
        ap_sig_cseq_ST_pp3_stg2_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg2_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg3_fsm_54 assign process. ///
always @ (ap_sig_bdd_791)
begin
    if (ap_sig_bdd_791) begin
        ap_sig_cseq_ST_pp3_stg3_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg3_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg4_fsm_55 assign process. ///
always @ (ap_sig_bdd_1375)
begin
    if (ap_sig_bdd_1375) begin
        ap_sig_cseq_ST_pp3_stg4_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg4_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st109_fsm_56 assign process. ///
always @ (ap_sig_bdd_1386)
begin
    if (ap_sig_bdd_1386) begin
        ap_sig_cseq_ST_st109_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st109_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st110_fsm_57 assign process. ///
always @ (ap_sig_bdd_2119)
begin
    if (ap_sig_bdd_2119) begin
        ap_sig_cseq_ST_st110_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st110_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st111_fsm_58 assign process. ///
always @ (ap_sig_bdd_2127)
begin
    if (ap_sig_bdd_2127) begin
        ap_sig_cseq_ST_st111_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st111_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st112_fsm_59 assign process. ///
always @ (ap_sig_bdd_2135)
begin
    if (ap_sig_bdd_2135) begin
        ap_sig_cseq_ST_st112_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st112_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st113_fsm_60 assign process. ///
always @ (ap_sig_bdd_2143)
begin
    if (ap_sig_bdd_2143) begin
        ap_sig_cseq_ST_st113_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st113_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st114_fsm_61 assign process. ///
always @ (ap_sig_bdd_2151)
begin
    if (ap_sig_bdd_2151) begin
        ap_sig_cseq_ST_st114_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st114_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st115_fsm_62 assign process. ///
always @ (ap_sig_bdd_2159)
begin
    if (ap_sig_bdd_2159) begin
        ap_sig_cseq_ST_st115_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st115_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st116_fsm_63 assign process. ///
always @ (ap_sig_bdd_2167)
begin
    if (ap_sig_bdd_2167) begin
        ap_sig_cseq_ST_st116_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st116_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st117_fsm_64 assign process. ///
always @ (ap_sig_bdd_2175)
begin
    if (ap_sig_bdd_2175) begin
        ap_sig_cseq_ST_st117_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st117_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st118_fsm_65 assign process. ///
always @ (ap_sig_bdd_2183)
begin
    if (ap_sig_bdd_2183) begin
        ap_sig_cseq_ST_st118_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st118_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st119_fsm_66 assign process. ///
always @ (ap_sig_bdd_2191)
begin
    if (ap_sig_bdd_2191) begin
        ap_sig_cseq_ST_st119_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st119_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st120_fsm_67 assign process. ///
always @ (ap_sig_bdd_2199)
begin
    if (ap_sig_bdd_2199) begin
        ap_sig_cseq_ST_st120_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st120_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st121_fsm_68 assign process. ///
always @ (ap_sig_bdd_2207)
begin
    if (ap_sig_bdd_2207) begin
        ap_sig_cseq_ST_st121_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st121_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st122_fsm_69 assign process. ///
always @ (ap_sig_bdd_2215)
begin
    if (ap_sig_bdd_2215) begin
        ap_sig_cseq_ST_st122_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st122_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st123_fsm_70 assign process. ///
always @ (ap_sig_bdd_2223)
begin
    if (ap_sig_bdd_2223) begin
        ap_sig_cseq_ST_st123_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st123_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st124_fsm_71 assign process. ///
always @ (ap_sig_bdd_699)
begin
    if (ap_sig_bdd_699) begin
        ap_sig_cseq_ST_st124_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st124_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st125_fsm_72 assign process. ///
always @ (ap_sig_bdd_1832)
begin
    if (ap_sig_bdd_1832) begin
        ap_sig_cseq_ST_st125_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st125_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st128_fsm_75 assign process. ///
always @ (ap_sig_bdd_562)
begin
    if (ap_sig_bdd_562) begin
        ap_sig_cseq_ST_st128_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st128_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st129_fsm_76 assign process. ///
always @ (ap_sig_bdd_1793)
begin
    if (ap_sig_bdd_1793) begin
        ap_sig_cseq_ST_st129_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st129_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st132_fsm_79 assign process. ///
always @ (ap_sig_bdd_570)
begin
    if (ap_sig_bdd_570) begin
        ap_sig_cseq_ST_st132_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st132_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st133_fsm_80 assign process. ///
always @ (ap_sig_bdd_825)
begin
    if (ap_sig_bdd_825) begin
        ap_sig_cseq_ST_st133_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st133_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st134_fsm_81 assign process. ///
always @ (ap_sig_bdd_1800)
begin
    if (ap_sig_bdd_1800) begin
        ap_sig_cseq_ST_st134_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st134_fsm_81 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st137_fsm_84 assign process. ///
always @ (ap_sig_bdd_849)
begin
    if (ap_sig_bdd_849) begin
        ap_sig_cseq_ST_st137_fsm_84 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st137_fsm_84 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st138_fsm_85 assign process. ///
always @ (ap_sig_bdd_832)
begin
    if (ap_sig_bdd_832) begin
        ap_sig_cseq_ST_st138_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st138_fsm_85 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st139_fsm_86 assign process. ///
always @ (ap_sig_bdd_1870)
begin
    if (ap_sig_bdd_1870) begin
        ap_sig_cseq_ST_st139_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st139_fsm_86 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_652)
begin
    if (ap_sig_bdd_652) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st140_fsm_87 assign process. ///
always @ (ap_sig_bdd_2234)
begin
    if (ap_sig_bdd_2234) begin
        ap_sig_cseq_ST_st140_fsm_87 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st140_fsm_87 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st141_fsm_88 assign process. ///
always @ (ap_sig_bdd_2242)
begin
    if (ap_sig_bdd_2242) begin
        ap_sig_cseq_ST_st141_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st141_fsm_88 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st142_fsm_89 assign process. ///
always @ (ap_sig_bdd_2250)
begin
    if (ap_sig_bdd_2250) begin
        ap_sig_cseq_ST_st142_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st142_fsm_89 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st143_fsm_90 assign process. ///
always @ (ap_sig_bdd_2258)
begin
    if (ap_sig_bdd_2258) begin
        ap_sig_cseq_ST_st143_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st143_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st144_fsm_91 assign process. ///
always @ (ap_sig_bdd_2266)
begin
    if (ap_sig_bdd_2266) begin
        ap_sig_cseq_ST_st144_fsm_91 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st144_fsm_91 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st145_fsm_92 assign process. ///
always @ (ap_sig_bdd_2274)
begin
    if (ap_sig_bdd_2274) begin
        ap_sig_cseq_ST_st145_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st145_fsm_92 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st146_fsm_93 assign process. ///
always @ (ap_sig_bdd_2282)
begin
    if (ap_sig_bdd_2282) begin
        ap_sig_cseq_ST_st146_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st146_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st147_fsm_94 assign process. ///
always @ (ap_sig_bdd_2290)
begin
    if (ap_sig_bdd_2290) begin
        ap_sig_cseq_ST_st147_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st147_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st148_fsm_95 assign process. ///
always @ (ap_sig_bdd_2298)
begin
    if (ap_sig_bdd_2298) begin
        ap_sig_cseq_ST_st148_fsm_95 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st148_fsm_95 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st149_fsm_96 assign process. ///
always @ (ap_sig_bdd_2306)
begin
    if (ap_sig_bdd_2306) begin
        ap_sig_cseq_ST_st149_fsm_96 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st149_fsm_96 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_1547)
begin
    if (ap_sig_bdd_1547) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st150_fsm_97 assign process. ///
always @ (ap_sig_bdd_1839)
begin
    if (ap_sig_bdd_1839) begin
        ap_sig_cseq_ST_st150_fsm_97 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st150_fsm_97 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st151_fsm_98 assign process. ///
always @ (ap_sig_bdd_2315)
begin
    if (ap_sig_bdd_2315) begin
        ap_sig_cseq_ST_st151_fsm_98 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st151_fsm_98 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st152_fsm_99 assign process. ///
always @ (ap_sig_bdd_2323)
begin
    if (ap_sig_bdd_2323) begin
        ap_sig_cseq_ST_st152_fsm_99 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st152_fsm_99 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st153_fsm_100 assign process. ///
always @ (ap_sig_bdd_578)
begin
    if (ap_sig_bdd_578) begin
        ap_sig_cseq_ST_st153_fsm_100 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st153_fsm_100 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st154_fsm_101 assign process. ///
always @ (ap_sig_bdd_1397)
begin
    if (ap_sig_bdd_1397) begin
        ap_sig_cseq_ST_st154_fsm_101 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st154_fsm_101 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st155_fsm_102 assign process. ///
always @ (ap_sig_bdd_1807)
begin
    if (ap_sig_bdd_1807) begin
        ap_sig_cseq_ST_st155_fsm_102 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st155_fsm_102 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st158_fsm_105 assign process. ///
always @ (ap_sig_bdd_840)
begin
    if (ap_sig_bdd_840) begin
        ap_sig_cseq_ST_st158_fsm_105 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st158_fsm_105 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st159_fsm_106 assign process. ///
always @ (ap_sig_bdd_856)
begin
    if (ap_sig_bdd_856) begin
        ap_sig_cseq_ST_st159_fsm_106 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st159_fsm_106 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_1889)
begin
    if (ap_sig_bdd_1889) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st174_fsm_121 assign process. ///
always @ (ap_sig_bdd_1406)
begin
    if (ap_sig_bdd_1406) begin
        ap_sig_cseq_ST_st174_fsm_121 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st174_fsm_121 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st175_fsm_122 assign process. ///
always @ (ap_sig_bdd_1847)
begin
    if (ap_sig_bdd_1847) begin
        ap_sig_cseq_ST_st175_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st175_fsm_122 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st178_fsm_125 assign process. ///
always @ (ap_sig_bdd_586)
begin
    if (ap_sig_bdd_586) begin
        ap_sig_cseq_ST_st178_fsm_125 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st178_fsm_125 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st179_fsm_126 assign process. ///
always @ (ap_sig_bdd_1877)
begin
    if (ap_sig_bdd_1877) begin
        ap_sig_cseq_ST_st179_fsm_126 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st179_fsm_126 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st180_fsm_127 assign process. ///
always @ (ap_sig_bdd_2334)
begin
    if (ap_sig_bdd_2334) begin
        ap_sig_cseq_ST_st180_fsm_127 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st180_fsm_127 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st181_fsm_128 assign process. ///
always @ (ap_sig_bdd_2342)
begin
    if (ap_sig_bdd_2342) begin
        ap_sig_cseq_ST_st181_fsm_128 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st181_fsm_128 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st182_fsm_129 assign process. ///
always @ (ap_sig_bdd_2350)
begin
    if (ap_sig_bdd_2350) begin
        ap_sig_cseq_ST_st182_fsm_129 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st182_fsm_129 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st183_fsm_130 assign process. ///
always @ (ap_sig_bdd_2358)
begin
    if (ap_sig_bdd_2358) begin
        ap_sig_cseq_ST_st183_fsm_130 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st183_fsm_130 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st184_fsm_131 assign process. ///
always @ (ap_sig_bdd_2366)
begin
    if (ap_sig_bdd_2366) begin
        ap_sig_cseq_ST_st184_fsm_131 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st184_fsm_131 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st185_fsm_132 assign process. ///
always @ (ap_sig_bdd_2374)
begin
    if (ap_sig_bdd_2374) begin
        ap_sig_cseq_ST_st185_fsm_132 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st185_fsm_132 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st186_fsm_133 assign process. ///
always @ (ap_sig_bdd_2382)
begin
    if (ap_sig_bdd_2382) begin
        ap_sig_cseq_ST_st186_fsm_133 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st186_fsm_133 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st187_fsm_134 assign process. ///
always @ (ap_sig_bdd_2390)
begin
    if (ap_sig_bdd_2390) begin
        ap_sig_cseq_ST_st187_fsm_134 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st187_fsm_134 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st188_fsm_135 assign process. ///
always @ (ap_sig_bdd_2398)
begin
    if (ap_sig_bdd_2398) begin
        ap_sig_cseq_ST_st188_fsm_135 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st188_fsm_135 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st189_fsm_136 assign process. ///
always @ (ap_sig_bdd_2406)
begin
    if (ap_sig_bdd_2406) begin
        ap_sig_cseq_ST_st189_fsm_136 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st189_fsm_136 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st190_fsm_137 assign process. ///
always @ (ap_sig_bdd_2414)
begin
    if (ap_sig_bdd_2414) begin
        ap_sig_cseq_ST_st190_fsm_137 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st190_fsm_137 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st191_fsm_138 assign process. ///
always @ (ap_sig_bdd_2422)
begin
    if (ap_sig_bdd_2422) begin
        ap_sig_cseq_ST_st191_fsm_138 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st191_fsm_138 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st192_fsm_139 assign process. ///
always @ (ap_sig_bdd_2430)
begin
    if (ap_sig_bdd_2430) begin
        ap_sig_cseq_ST_st192_fsm_139 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st192_fsm_139 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st193_fsm_140 assign process. ///
always @ (ap_sig_bdd_2438)
begin
    if (ap_sig_bdd_2438) begin
        ap_sig_cseq_ST_st193_fsm_140 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st193_fsm_140 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st194_fsm_141 assign process. ///
always @ (ap_sig_bdd_708)
begin
    if (ap_sig_bdd_708) begin
        ap_sig_cseq_ST_st194_fsm_141 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st194_fsm_141 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st195_fsm_142 assign process. ///
always @ (ap_sig_bdd_1688)
begin
    if (ap_sig_bdd_1688) begin
        ap_sig_cseq_ST_st195_fsm_142 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st195_fsm_142 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st198_fsm_145 assign process. ///
always @ (ap_sig_bdd_1586)
begin
    if (ap_sig_bdd_1586) begin
        ap_sig_cseq_ST_st198_fsm_145 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st198_fsm_145 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_164)
begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_908)
begin
    if (ap_sig_bdd_908) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_1007)
begin
    if (ap_sig_bdd_1007) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_1650)
begin
    if (ap_sig_bdd_1650) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_1415)
begin
    if (ap_sig_bdd_1415) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_1555)
begin
    if (ap_sig_bdd_1555) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_28 assign process. ///
always @ (ap_sig_bdd_1033)
begin
    if (ap_sig_bdd_1033) begin
        ap_sig_cseq_ST_st31_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_29 assign process. ///
always @ (ap_sig_bdd_1042)
begin
    if (ap_sig_bdd_1042) begin
        ap_sig_cseq_ST_st32_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_30 assign process. ///
always @ (ap_sig_bdd_1051)
begin
    if (ap_sig_bdd_1051) begin
        ap_sig_cseq_ST_st33_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_31 assign process. ///
always @ (ap_sig_bdd_1971)
begin
    if (ap_sig_bdd_1971) begin
        ap_sig_cseq_ST_st34_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_36 assign process. ///
always @ (ap_sig_bdd_1067)
begin
    if (ap_sig_bdd_1067) begin
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_37 assign process. ///
always @ (ap_sig_bdd_1076)
begin
    if (ap_sig_bdd_1076) begin
        ap_sig_cseq_ST_st40_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_38 assign process. ///
always @ (ap_sig_bdd_1666)
begin
    if (ap_sig_bdd_1666) begin
        ap_sig_cseq_ST_st41_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_43 assign process. ///
always @ (ap_sig_bdd_1427)
begin
    if (ap_sig_bdd_1427) begin
        ap_sig_cseq_ST_st46_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_45 assign process. ///
always @ (ap_sig_bdd_1733)
begin
    if (ap_sig_bdd_1733) begin
        ap_sig_cseq_ST_st50_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_46 assign process. ///
always @ (ap_sig_bdd_1740)
begin
    if (ap_sig_bdd_1740) begin
        ap_sig_cseq_ST_st51_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st52_fsm_47 assign process. ///
always @ (ap_sig_bdd_1439)
begin
    if (ap_sig_bdd_1439) begin
        ap_sig_cseq_ST_st52_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_546)
begin
    if (ap_sig_bdd_546) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_880)
begin
    if (ap_sig_bdd_880) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_889)
begin
    if (ap_sig_bdd_889) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_595)
begin
    if (ap_sig_bdd_595) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st97_fsm_49 assign process. ///
always @ (ap_sig_bdd_1713)
begin
    if (ap_sig_bdd_1713) begin
        ap_sig_cseq_ST_st97_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st97_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st98_fsm_50 assign process. ///
always @ (ap_sig_bdd_642)
begin
    if (ap_sig_bdd_642) begin
        ap_sig_cseq_ST_st98_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_1784)
begin
    if (ap_sig_bdd_1784) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_gmem32_ARREADY assign process. ///
always @ (gmem32_ARREADY or ap_reg_ioackin_gmem32_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) begin
        ap_sig_ioackin_gmem32_ARREADY = gmem32_ARREADY;
    end else begin
        ap_sig_ioackin_gmem32_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_gmem32_AWREADY assign process. ///
always @ (gmem32_AWREADY or ap_reg_ioackin_gmem32_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_AWREADY)) begin
        ap_sig_ioackin_gmem32_AWREADY = gmem32_AWREADY;
    end else begin
        ap_sig_ioackin_gmem32_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_gmem32_WREADY assign process. ///
always @ (gmem32_WREADY or ap_reg_ioackin_gmem32_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_WREADY)) begin
        ap_sig_ioackin_gmem32_WREADY = gmem32_WREADY;
    end else begin
        ap_sig_ioackin_gmem32_WREADY = ap_const_logic_1;
    end
end

/// bramA_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0 or tmp_s_fu_1407_p1 or tmp_15_fu_1511_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        bramA_address0 = tmp_s_fu_1407_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramA_address0 = tmp_15_fu_1511_p1;
    end else begin
        bramA_address0 = 'bx;
    end
end

/// bramA_ce0 assign process. ///
always @ (ap_sig_bdd_362 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        bramA_ce0 = ap_const_logic_1;
    end else begin
        bramA_ce0 = ap_const_logic_0;
    end
end

/// bramA_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramA_ce1 = ap_const_logic_1;
    end else begin
        bramA_ce1 = ap_const_logic_0;
    end
end

/// bramA_we0 assign process. ///
always @ (ap_sig_bdd_362 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond4_reg_1900_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1900_pp0_it1))) begin
        bramA_we0 = ap_const_logic_1;
    end else begin
        bramA_we0 = ap_const_logic_0;
    end
end

/// bramB_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0 or tmp_12_fu_1491_p1 or tmp_15_fu_1511_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        bramB_address0 = tmp_12_fu_1491_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramB_address0 = tmp_15_fu_1511_p1;
    end else begin
        bramB_address0 = 'bx;
    end
end

/// bramB_ce0 assign process. ///
always @ (ap_sig_bdd_385 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        bramB_ce0 = ap_const_logic_1;
    end else begin
        bramB_ce0 = ap_const_logic_0;
    end
end

/// bramB_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramB_ce1 = ap_const_logic_1;
    end else begin
        bramB_ce1 = ap_const_logic_0;
    end
end

/// bramB_we0 assign process. ///
always @ (ap_sig_bdd_385 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond2_reg_1949_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_1949_pp1_it1))) begin
        bramB_we0 = ap_const_logic_1;
    end else begin
        bramB_we0 = ap_const_logic_0;
    end
end

/// gmem32_ARADDR assign process. ///
always @ (gmem32_addr_reg_1894 or gmem32_addr_1_reg_1943 or ap_reg_ioackin_gmem32_ARREADY or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st41_fsm_38)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_38)) begin
            gmem32_ARADDR = gmem32_addr_1_reg_1943;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
            gmem32_ARADDR = gmem32_addr_reg_1894;
        end else begin
            gmem32_ARADDR = 'bx;
        end
    end else begin
        gmem32_ARADDR = 'bx;
    end
end

/// gmem32_ARVALID assign process. ///
always @ (ap_reg_ioackin_gmem32_ARREADY or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st41_fsm_38)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) | ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_38)))) begin
        gmem32_ARVALID = ap_const_logic_1;
    end else begin
        gmem32_ARVALID = ap_const_logic_0;
    end
end

/// gmem32_AWVALID assign process. ///
always @ (ap_sig_cseq_ST_st194_fsm_141 or ap_reg_ioackin_gmem32_AWREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st194_fsm_141) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_AWREADY))) begin
        gmem32_AWVALID = ap_const_logic_1;
    end else begin
        gmem32_AWVALID = ap_const_logic_0;
    end
end

/// gmem32_BREADY assign process. ///
always @ (gmem32_BVALID or ap_sig_cseq_ST_st198_fsm_145)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_145) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        gmem32_BREADY = ap_const_logic_1;
    end else begin
        gmem32_BREADY = ap_const_logic_0;
    end
end

/// gmem32_RREADY assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_27 or exitcond4_reg_1900 or ap_sig_bdd_362 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp1_stg0_fsm_44 or exitcond2_reg_1949 or ap_sig_bdd_385 or ap_reg_ppiten_pp1_it1)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & (exitcond4_reg_1900 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & (ap_const_lv1_0 == exitcond2_reg_1949) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        gmem32_RREADY = ap_const_logic_1;
    end else begin
        gmem32_RREADY = ap_const_logic_0;
    end
end

/// gmem32_WVALID assign process. ///
always @ (ap_reg_ioackin_gmem32_WREADY or ap_sig_cseq_ST_st195_fsm_142)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st195_fsm_142) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_WREADY))) begin
        gmem32_WVALID = ap_const_logic_1;
    end else begin
        gmem32_WVALID = ap_const_logic_0;
    end
end

/// grp_fu_1024_opcode assign process. ///
always @ (ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it1 or ap_reg_ppiten_pp3_it0 or exitcond_reg_2097 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it34 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or ap_sig_cseq_ST_st133_fsm_80 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or ap_sig_cseq_ST_pp3_stg4_fsm_55 or ap_sig_cseq_ST_st154_fsm_101 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st134_fsm_81 or ap_sig_cseq_ST_st155_fsm_102)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st134_fsm_81))) begin
        grp_fu_1024_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_102) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55)))) begin
        grp_fu_1024_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_1024_opcode = 'bx;
    end
end

/// grp_fu_1024_p0 assign process. ///
always @ (ap_reg_ppiten_pp2_it35 or sum_weight_returnSquareA_reg_952 or sum_weight_returnA_returnB_reg_1000 or ap_reg_ppiten_pp3_it1 or ap_reg_ppiten_pp3_it0 or reg_1182 or acc_returnA_q0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or reg_1257 or ap_sig_cseq_ST_st133_fsm_80 or weight_rom_load_1_reg_1639 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or ap_sig_cseq_ST_pp3_stg4_fsm_55 or tmp_52_reg_2195 or ap_sig_cseq_ST_st154_fsm_101 or sum_returnA_phi_fu_932_p4 or sum_weight_returnSquareA_phi_fu_956_p4 or sum_weight_returnSquareB_phi_fu_980_p4 or sum_weight_returnA_returnB_phi_fu_1004_p4 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st134_fsm_81 or ap_sig_cseq_ST_st155_fsm_102)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_102)) begin
        grp_fu_1024_p0 = tmp_52_reg_2195;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101)) begin
        grp_fu_1024_p0 = reg_1182;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st134_fsm_81)) begin
        grp_fu_1024_p0 = reg_1257;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_80)) begin
        grp_fu_1024_p0 = sum_weight_returnSquareA_reg_952;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76)) begin
        grp_fu_1024_p0 = sum_weight_returnA_returnB_reg_1000;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51))) begin
        grp_fu_1024_p0 = sum_weight_returnA_returnB_phi_fu_1004_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        grp_fu_1024_p0 = sum_weight_returnSquareB_phi_fu_980_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        grp_fu_1024_p0 = sum_weight_returnSquareA_phi_fu_956_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        grp_fu_1024_p0 = sum_returnA_phi_fu_932_p4;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it35)) begin
        grp_fu_1024_p0 = acc_returnA_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_1024_p0 = weight_rom_load_1_reg_1639;
    end else begin
        grp_fu_1024_p0 = 'bx;
    end
end

/// grp_fu_1024_p1 assign process. ///
always @ (ap_reg_ppiten_pp2_it35 or reg_1147 or reg_1157 or ap_reg_ppiten_pp3_it1 or ap_reg_ppiten_pp3_it0 or reg_1209 or reg_1215 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or reg_1239 or reg_1245 or reg_1251 or ap_sig_cseq_ST_st133_fsm_80 or ap_reg_ppstg_lnReturnA_reg_2012_pp2_it34 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or ap_sig_cseq_ST_pp3_stg4_fsm_55 or tmp_50_reg_2190 or ap_sig_cseq_ST_st154_fsm_101 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st134_fsm_81 or ap_sig_cseq_ST_st155_fsm_102)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st134_fsm_81)) begin
        grp_fu_1024_p1 = tmp_50_reg_2190;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101))) begin
        grp_fu_1024_p1 = reg_1147;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_102))) begin
        grp_fu_1024_p1 = reg_1209;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51))) begin
        grp_fu_1024_p1 = reg_1251;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        grp_fu_1024_p1 = reg_1245;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        grp_fu_1024_p1 = reg_1239;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        grp_fu_1024_p1 = reg_1215;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it35)) begin
        grp_fu_1024_p1 = ap_reg_ppstg_lnReturnA_reg_2012_pp2_it34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_1024_p1 = reg_1157;
    end else begin
        grp_fu_1024_p1 = 'bx;
    end
end

/// grp_fu_1030_opcode assign process. ///
always @ (ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or exitcond_reg_2097 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it34 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or ap_sig_cseq_ST_st133_fsm_80 or ap_sig_cseq_ST_pp3_stg4_fsm_55 or ap_sig_cseq_ST_st154_fsm_101)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_80)) begin
        grp_fu_1030_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55)))) begin
        grp_fu_1030_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_1030_opcode = 'bx;
    end
end

/// grp_fu_1030_p0 assign process. ///
always @ (ap_reg_ppiten_pp2_it35 or sum_weight_returnSquareB_reg_976 or ap_reg_ppiten_pp3_it0 or reg_1192 or acc_returnB_q0 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or ap_sig_cseq_ST_st133_fsm_80 or ap_sig_cseq_ST_pp3_stg4_fsm_55 or ap_sig_cseq_ST_st154_fsm_101 or sum_returnB_phi_fu_944_p4 or sum_weight_returnA_phi_fu_968_p4 or sum_weight_returnB_phi_fu_992_p4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101)) begin
        grp_fu_1030_p0 = reg_1192;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_80)) begin
        grp_fu_1030_p0 = sum_weight_returnSquareB_reg_976;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        grp_fu_1030_p0 = sum_weight_returnB_phi_fu_992_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        grp_fu_1030_p0 = sum_weight_returnA_phi_fu_968_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        grp_fu_1030_p0 = sum_returnB_phi_fu_944_p4;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it35)) begin
        grp_fu_1030_p0 = acc_returnB_q0;
    end else begin
        grp_fu_1030_p0 = 'bx;
    end
end

/// grp_fu_1030_p1 assign process. ///
always @ (ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or reg_1202 or reg_1221 or reg_1227 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or reg_1233 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or ap_sig_cseq_ST_st133_fsm_80 or ap_reg_ppstg_lnReturnB_reg_2021_pp2_it34 or ap_sig_cseq_ST_pp3_stg4_fsm_55 or ap_sig_cseq_ST_st154_fsm_101)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101))) begin
        grp_fu_1030_p1 = reg_1202;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        grp_fu_1030_p1 = reg_1233;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        grp_fu_1030_p1 = reg_1227;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        grp_fu_1030_p1 = reg_1221;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it35)) begin
        grp_fu_1030_p1 = ap_reg_ppstg_lnReturnB_reg_2021_pp2_it34;
    end else begin
        grp_fu_1030_p1 = 'bx;
    end
end

/// grp_fu_1074_p0 assign process. ///
always @ (ap_reg_ppiten_pp2_it31 or reg_1147 or reg_1182 or lnReturnA_reg_2012 or volatilityA_reg_2200 or tmp_i_reg_779 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st125_fsm_72 or ap_sig_cseq_ST_st150_fsm_97 or ap_sig_cseq_ST_st175_fsm_122)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st175_fsm_122)) begin
        grp_fu_1074_p0 = volatilityA_reg_2200;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76)) begin
        grp_fu_1074_p0 = reg_1147;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_97))) begin
        grp_fu_1074_p0 = reg_1182;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it31)) begin
        grp_fu_1074_p0 = lnReturnA_reg_2012;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_1074_p0 = tmp_i_reg_779;
    end else begin
        grp_fu_1074_p0 = 'bx;
    end
end

/// grp_fu_1074_p1 assign process. ///
always @ (ap_reg_ppiten_pp2_it31 or sum_weight_returnA_reg_964 or reg_1182 or lnReturnA_reg_2012 or volatilityB_reg_2205 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st125_fsm_72 or ap_sig_cseq_ST_st150_fsm_97 or ap_sig_cseq_ST_st175_fsm_122)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st175_fsm_122)) begin
        grp_fu_1074_p1 = volatilityB_reg_2205;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_97)) begin
        grp_fu_1074_p1 = reg_1182;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76)) begin
        grp_fu_1074_p1 = sum_weight_returnA_reg_964;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_72)) begin
        grp_fu_1074_p1 = ap_const_lv32_40000000;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it31)) begin
        grp_fu_1074_p1 = lnReturnA_reg_2012;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_1074_p1 = ap_const_lv32_3F70A3D7;
    end else begin
        grp_fu_1074_p1 = 'bx;
    end
end

/// grp_fu_1080_p0 assign process. ///
always @ (ap_reg_ppiten_pp2_it31 or reg_1192 or reg_1202 or lnReturnB_reg_2021 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st125_fsm_72 or ap_sig_cseq_ST_st150_fsm_97)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76)) begin
        grp_fu_1080_p0 = reg_1202;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_97))) begin
        grp_fu_1080_p0 = reg_1192;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it31)) begin
        grp_fu_1080_p0 = lnReturnB_reg_2021;
    end else begin
        grp_fu_1080_p0 = 'bx;
    end
end

/// grp_fu_1080_p1 assign process. ///
always @ (ap_reg_ppiten_pp2_it31 or sum_weight_returnB_reg_988 or reg_1192 or lnReturnB_reg_2021 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st125_fsm_72 or ap_sig_cseq_ST_st150_fsm_97)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_97)) begin
        grp_fu_1080_p1 = reg_1192;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76)) begin
        grp_fu_1080_p1 = sum_weight_returnB_reg_988;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_72)) begin
        grp_fu_1080_p1 = ap_const_lv32_40000000;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it31)) begin
        grp_fu_1080_p1 = lnReturnB_reg_2021;
    end else begin
        grp_fu_1080_p1 = 'bx;
    end
end

/// grp_fu_1084_p0 assign process. ///
always @ (ap_reg_ppiten_pp2_it31 or reg_1182 or reg_1192 or lnReturnA_reg_2012 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st125_fsm_72 or ap_sig_cseq_ST_st150_fsm_97)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76)) begin
        grp_fu_1084_p0 = reg_1192;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_97))) begin
        grp_fu_1084_p0 = reg_1182;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it31)) begin
        grp_fu_1084_p0 = lnReturnA_reg_2012;
    end else begin
        grp_fu_1084_p0 = 'bx;
    end
end

/// grp_fu_1084_p1 assign process. ///
always @ (ap_reg_ppiten_pp2_it31 or sum_weight_returnA_reg_964 or sum_weight_returnB_reg_988 or ap_reg_ppstg_reg_1157_pp2_it30 or reg_1192 or ap_sig_cseq_ST_st129_fsm_76 or ap_sig_cseq_ST_st125_fsm_72 or ap_sig_cseq_ST_st150_fsm_97)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_97)) begin
        grp_fu_1084_p1 = reg_1192;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_76)) begin
        grp_fu_1084_p1 = sum_weight_returnA_reg_964;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_72)) begin
        grp_fu_1084_p1 = sum_weight_returnB_reg_988;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it31)) begin
        grp_fu_1084_p1 = ap_reg_ppstg_reg_1157_pp2_it30;
    end else begin
        grp_fu_1084_p1 = 'bx;
    end
end

/// grp_fu_1114_ce assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_sig_cseq_ST_st153_fsm_100 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it16 or ap_sig_cseq_ST_st124_fsm_71 or ap_sig_cseq_ST_st194_fsm_141 or ap_sig_ioackin_gmem32_AWREADY or ap_sig_cseq_ST_st138_fsm_85 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it1 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it2 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it3 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it4 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it5 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it6 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it7 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it8 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it9 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it10 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it11 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it12 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it13 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it14 or ap_reg_ppstg_tmp_14_reg_1958_pp2_it15 or ap_sig_cseq_ST_st109_fsm_56 or ap_sig_cseq_ST_st154_fsm_101 or ap_sig_cseq_ST_st150_fsm_97 or ap_sig_cseq_ST_st139_fsm_86 or ap_sig_cseq_ST_st179_fsm_126 or ap_sig_cseq_ST_st110_fsm_57 or ap_sig_cseq_ST_st111_fsm_58 or ap_sig_cseq_ST_st112_fsm_59 or ap_sig_cseq_ST_st113_fsm_60 or ap_sig_cseq_ST_st114_fsm_61 or ap_sig_cseq_ST_st115_fsm_62 or ap_sig_cseq_ST_st116_fsm_63 or ap_sig_cseq_ST_st117_fsm_64 or ap_sig_cseq_ST_st118_fsm_65 or ap_sig_cseq_ST_st119_fsm_66 or ap_sig_cseq_ST_st120_fsm_67 or ap_sig_cseq_ST_st121_fsm_68 or ap_sig_cseq_ST_st122_fsm_69 or ap_sig_cseq_ST_st123_fsm_70 or ap_sig_cseq_ST_st140_fsm_87 or ap_sig_cseq_ST_st141_fsm_88 or ap_sig_cseq_ST_st142_fsm_89 or ap_sig_cseq_ST_st143_fsm_90 or ap_sig_cseq_ST_st144_fsm_91 or ap_sig_cseq_ST_st145_fsm_92 or ap_sig_cseq_ST_st146_fsm_93 or ap_sig_cseq_ST_st147_fsm_94 or ap_sig_cseq_ST_st148_fsm_95 or ap_sig_cseq_ST_st149_fsm_96 or ap_sig_cseq_ST_st151_fsm_98 or ap_sig_cseq_ST_st152_fsm_99 or ap_sig_cseq_ST_st180_fsm_127 or ap_sig_cseq_ST_st181_fsm_128 or ap_sig_cseq_ST_st182_fsm_129 or ap_sig_cseq_ST_st183_fsm_130 or ap_sig_cseq_ST_st184_fsm_131 or ap_sig_cseq_ST_st185_fsm_132 or ap_sig_cseq_ST_st186_fsm_133 or ap_sig_cseq_ST_st187_fsm_134 or ap_sig_cseq_ST_st188_fsm_135 or ap_sig_cseq_ST_st189_fsm_136 or ap_sig_cseq_ST_st190_fsm_137 or ap_sig_cseq_ST_st191_fsm_138 or ap_sig_cseq_ST_st192_fsm_139 or ap_sig_cseq_ST_st193_fsm_140)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_100) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_71) | ((ap_const_logic_1 == ap_sig_cseq_ST_st194_fsm_141) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) | (ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_56) | (ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_101) | (ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_97) | (ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_86) | (ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_126) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it16) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it1) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it2) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it3) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it4) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it5) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it6) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it7) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it8) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it9) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it10) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it11) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it12) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it13) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it14) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1958_pp2_it15))) | (ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st111_fsm_58) | (ap_const_logic_1 == ap_sig_cseq_ST_st112_fsm_59) | (ap_const_logic_1 == ap_sig_cseq_ST_st113_fsm_60) | (ap_const_logic_1 == ap_sig_cseq_ST_st114_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_62) | (ap_const_logic_1 == ap_sig_cseq_ST_st116_fsm_63) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_64) | (ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_65) | (ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_66) | (ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_67) | (ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_68) | (ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st140_fsm_87) | (ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_88) | (ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_89) | (ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_90) | (ap_const_logic_1 == ap_sig_cseq_ST_st144_fsm_91) | (ap_const_logic_1 == ap_sig_cseq_ST_st145_fsm_92) | (ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_93) | (ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_94) | (ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_95) | (ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_96) | (ap_const_logic_1 == ap_sig_cseq_ST_st151_fsm_98) | (ap_const_logic_1 == ap_sig_cseq_ST_st152_fsm_99) | (ap_const_logic_1 == ap_sig_cseq_ST_st180_fsm_127) | (ap_const_logic_1 == ap_sig_cseq_ST_st181_fsm_128) | (ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_129) | (ap_const_logic_1 == ap_sig_cseq_ST_st183_fsm_130) | (ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_131) | (ap_const_logic_1 == ap_sig_cseq_ST_st185_fsm_132) | (ap_const_logic_1 == ap_sig_cseq_ST_st186_fsm_133) | (ap_const_logic_1 == ap_sig_cseq_ST_st187_fsm_134) | (ap_const_logic_1 == ap_sig_cseq_ST_st188_fsm_135) | (ap_const_logic_1 == ap_sig_cseq_ST_st189_fsm_136) | (ap_const_logic_1 == ap_sig_cseq_ST_st190_fsm_137) | (ap_const_logic_1 == ap_sig_cseq_ST_st191_fsm_138) | (ap_const_logic_1 == ap_sig_cseq_ST_st192_fsm_139) | (ap_const_logic_1 == ap_sig_cseq_ST_st193_fsm_140))) begin
        grp_fu_1114_ce = ap_const_logic_1;
    end else begin
        grp_fu_1114_ce = ap_const_logic_0;
    end
end

/// grp_fu_1114_p0 assign process. ///
always @ (ap_reg_ppiten_pp2_it2 or sum_returnA_reg_928 or reg_1257 or ap_sig_cseq_ST_st138_fsm_85 or reg_1264 or bramA_load_reg_1992 or ap_sig_cseq_ST_st109_fsm_56 or ap_sig_cseq_ST_st139_fsm_86 or ap_sig_cseq_ST_st179_fsm_126)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_86)) begin
        grp_fu_1114_p0 = reg_1257;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_126))) begin
        grp_fu_1114_p0 = reg_1264;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_56)) begin
        grp_fu_1114_p0 = sum_returnA_reg_928;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) begin
        grp_fu_1114_p0 = bramA_load_reg_1992;
    end else begin
        grp_fu_1114_p0 = 'bx;
    end
end

/// grp_fu_1114_p1 assign process. ///
always @ (ap_reg_ppiten_pp2_it2 or reg_1147 or reg_1157 or ap_sig_cseq_ST_st138_fsm_85 or tmp_2_reg_1649 or bramA_load_1_reg_1997 or ap_sig_cseq_ST_st109_fsm_56 or ap_sig_cseq_ST_st139_fsm_86 or ap_sig_cseq_ST_st179_fsm_126)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_126)) begin
        grp_fu_1114_p1 = reg_1147;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_86))) begin
        grp_fu_1114_p1 = reg_1157;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_56)) begin
        grp_fu_1114_p1 = tmp_2_reg_1649;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) begin
        grp_fu_1114_p1 = bramA_load_1_reg_1997;
    end else begin
        grp_fu_1114_p1 = 'bx;
    end
end

/// grp_fu_1118_p0 assign process. ///
always @ (ap_reg_ppiten_pp2_it2 or sum_returnB_reg_940 or ap_sig_cseq_ST_st138_fsm_85 or reg_1269 or bramB_load_reg_2002 or ap_sig_cseq_ST_st109_fsm_56)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_85)) begin
        grp_fu_1118_p0 = reg_1269;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_56)) begin
        grp_fu_1118_p0 = sum_returnB_reg_940;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) begin
        grp_fu_1118_p0 = bramB_load_reg_2002;
    end else begin
        grp_fu_1118_p0 = 'bx;
    end
end

/// grp_fu_1118_p1 assign process. ///
always @ (ap_reg_ppiten_pp2_it2 or reg_1157 or ap_sig_cseq_ST_st138_fsm_85 or tmp_2_reg_1649 or bramB_load_1_reg_2007 or ap_sig_cseq_ST_st109_fsm_56)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_85)) begin
        grp_fu_1118_p1 = reg_1157;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_56)) begin
        grp_fu_1118_p1 = tmp_2_reg_1649;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) begin
        grp_fu_1118_p1 = bramB_load_1_reg_2007;
    end else begin
        grp_fu_1118_p1 = 'bx;
    end
end

/// i1_phi_fu_920_p4 assign process. ///
always @ (i1_reg_916 or ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it1 or tmp_14_reg_1958 or i_reg_1962)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_const_lv1_0 == tmp_14_reg_1958))) begin
        i1_phi_fu_920_p4 = i_reg_1962;
    end else begin
        i1_phi_fu_920_p4 = i1_reg_916;
    end
end

/// i2_phi_fu_1016_p4 assign process. ///
always @ (i2_reg_1012 or ap_reg_ppiten_pp3_it1 or exitcond_reg_2097 or ap_sig_cseq_ST_pp3_stg0_fsm_51 or i_1_reg_2101)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_reg_2097) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_51))) begin
        i2_phi_fu_1016_p4 = i_1_reg_2101;
    end else begin
        i2_phi_fu_1016_p4 = i2_reg_1012;
    end
end

/// indvar1_phi_fu_908_p4 assign process. ///
always @ (indvar1_reg_904 or ap_sig_cseq_ST_pp1_stg0_fsm_44 or exitcond2_reg_1949 or ap_reg_ppiten_pp1_it1 or indvar_next1_reg_1953)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_44) & (ap_const_lv1_0 == exitcond2_reg_1949) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        indvar1_phi_fu_908_p4 = indvar_next1_reg_1953;
    end else begin
        indvar1_phi_fu_908_p4 = indvar1_reg_904;
    end
end

/// indvar_phi_fu_876_p4 assign process. ///
always @ (indvar_reg_872 or ap_sig_cseq_ST_pp0_stg0_fsm_27 or exitcond4_reg_1900 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_1904)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_27) & (exitcond4_reg_1900 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_876_p4 = indvar_next_reg_1904;
    end else begin
        indvar_phi_fu_876_p4 = indvar_reg_872;
    end
end

/// sum_returnA_phi_fu_932_p4 assign process. ///
always @ (sum_returnA_reg_928 or reg_1170 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_2097_pp3_it1 or ap_sig_cseq_ST_pp3_stg2_fsm_53)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        sum_returnA_phi_fu_932_p4 = reg_1170;
    end else begin
        sum_returnA_phi_fu_932_p4 = sum_returnA_reg_928;
    end
end

/// sum_returnB_phi_fu_944_p4 assign process. ///
always @ (sum_returnB_reg_940 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_2097_pp3_it1 or ap_sig_cseq_ST_pp3_stg2_fsm_53 or sum_returnB_1_reg_2150)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_53))) begin
        sum_returnB_phi_fu_944_p4 = sum_returnB_1_reg_2150;
    end else begin
        sum_returnB_phi_fu_944_p4 = sum_returnB_reg_940;
    end
end

/// sum_weight_returnA_phi_fu_968_p4 assign process. ///
always @ (sum_weight_returnA_reg_964 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_2097_pp3_it1 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or sum_weight_returnA_1_reg_2160)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        sum_weight_returnA_phi_fu_968_p4 = sum_weight_returnA_1_reg_2160;
    end else begin
        sum_weight_returnA_phi_fu_968_p4 = sum_weight_returnA_reg_964;
    end
end

/// sum_weight_returnB_phi_fu_992_p4 assign process. ///
always @ (sum_weight_returnB_reg_988 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_2097_pp3_it1 or sum_weight_returnB_1_reg_2170 or ap_sig_cseq_ST_pp3_stg4_fsm_55)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        sum_weight_returnB_phi_fu_992_p4 = sum_weight_returnB_1_reg_2170;
    end else begin
        sum_weight_returnB_phi_fu_992_p4 = sum_weight_returnB_reg_988;
    end
end

/// sum_weight_returnSquareA_phi_fu_956_p4 assign process. ///
always @ (sum_weight_returnSquareA_reg_952 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_2097_pp3_it1 or ap_sig_cseq_ST_pp3_stg3_fsm_54 or sum_weight_returnSquareA_1_reg_2155)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_54))) begin
        sum_weight_returnSquareA_phi_fu_956_p4 = sum_weight_returnSquareA_1_reg_2155;
    end else begin
        sum_weight_returnSquareA_phi_fu_956_p4 = sum_weight_returnSquareA_reg_952;
    end
end

/// sum_weight_returnSquareB_phi_fu_980_p4 assign process. ///
always @ (sum_weight_returnSquareB_reg_976 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_2097_pp3_it1 or sum_weight_returnSquareB_1_reg_2165 or ap_sig_cseq_ST_pp3_stg4_fsm_55)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2097_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55))) begin
        sum_weight_returnSquareB_phi_fu_980_p4 = sum_weight_returnSquareB_1_reg_2165;
    end else begin
        sum_weight_returnSquareB_phi_fu_980_p4 = sum_weight_returnSquareB_reg_976;
    end
end

/// weight_rom_address0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or tmp_58_i_fu_1309_p1 or tmp_16_fu_1517_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        weight_rom_address0 = tmp_58_i_fu_1309_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        weight_rom_address0 = tmp_16_fu_1517_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        weight_rom_address0 = ap_const_lv8_0;
    end else begin
        weight_rom_address0 = 'bx;
    end
end

/// weight_rom_address1 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st14_fsm_13 or tmp_60_i_fu_1329_p1 or ap_sig_cseq_ST_st97_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_address1 = ap_const_lv8_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_49))) begin
        weight_rom_address1 = ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        weight_rom_address1 = tmp_60_i_fu_1329_p1;
    end else begin
        weight_rom_address1 = 'bx;
    end
end

/// weight_rom_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_pp2_stg0_fsm_48 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)))) begin
        weight_rom_ce0 = ap_const_logic_1;
    end else begin
        weight_rom_ce0 = ap_const_logic_0;
    end
end

/// weight_rom_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st97_fsm_49)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_49))) begin
        weight_rom_ce1 = ap_const_logic_1;
    end else begin
        weight_rom_ce1 = ap_const_logic_0;
    end
end

/// weight_rom_d0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or reg_1147 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        weight_rom_d0 = reg_1147;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_d0 = ap_const_lv32_3F800000;
    end else begin
        weight_rom_d0 = 'bx;
    end
end

/// weight_rom_d1 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or reg_1170 or ap_sig_cseq_ST_st14_fsm_13)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        weight_rom_d1 = reg_1170;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_d1 = ap_const_lv32_3F800000;
    end else begin
        weight_rom_d1 = 'bx;
    end
end

/// weight_rom_we0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        weight_rom_we0 = ap_const_logic_1;
    end else begin
        weight_rom_we0 = ap_const_logic_0;
    end
end

/// weight_rom_we1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st14_fsm_13)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        weight_rom_we1 = ap_const_logic_1;
    end else begin
        weight_rom_we1 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or gmem32_BVALID or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_362 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_385 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it42 or ap_reg_ppiten_pp2_it43 or ap_reg_ppiten_pp3_it1 or ap_reg_ppiten_pp3_it0 or ap_sig_ioackin_gmem32_AWREADY or tmp_59_i_fu_1324_p2 or tmp_4_fu_1366_p2 or exitcond4_fu_1396_p2 or tmp_8_fu_1441_p2 or exitcond2_fu_1480_p2 or tmp_14_fu_1500_p2 or exitcond_fu_1541_p2 or ap_sig_cseq_ST_pp3_stg4_fsm_55 or exitcond_i_fu_1303_p2 or ap_sig_ioackin_gmem32_ARREADY or ap_sig_ioackin_gmem32_WREADY)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_fu_1303_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_59_i_fu_1324_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            if ((ap_const_lv1_0 == tmp_4_fu_1366_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st22_fsm_21 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_27;
        end
        ap_ST_pp0_stg0_fsm_27 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1396_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_27;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_362 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1396_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st31_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_27;
            end
        end
        ap_ST_st31_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_29;
        end
        ap_ST_st32_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_30;
        end
        ap_ST_st33_fsm_30 : 
        begin
            if ((ap_const_lv1_0 == tmp_8_fu_1441_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st34_fsm_31;
            end
        end
        ap_ST_st34_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_32;
        end
        ap_ST_st35_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_33;
        end
        ap_ST_st36_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_34;
        end
        ap_ST_st37_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_35;
        end
        ap_ST_st38_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_36;
        end
        ap_ST_st39_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_37;
        end
        ap_ST_st40_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_38;
        end
        ap_ST_st41_fsm_38 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) begin
                ap_NS_fsm = ap_ST_st42_fsm_39;
            end else begin
                ap_NS_fsm = ap_ST_st41_fsm_38;
            end
        end
        ap_ST_st42_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_40;
        end
        ap_ST_st43_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_41;
        end
        ap_ST_st44_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_42;
        end
        ap_ST_st45_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_43;
        end
        ap_ST_st46_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_44;
        end
        ap_ST_pp1_stg0_fsm_44 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1480_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_44;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_385 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1480_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st50_fsm_45;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_44;
            end
        end
        ap_ST_st50_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_46;
        end
        ap_ST_st51_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_47;
        end
        ap_ST_st52_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_48;
        end
        ap_ST_pp2_stg0_fsm_48 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp2_it43) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it42)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == tmp_14_fu_1500_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_48;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == tmp_14_fu_1500_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
                ap_NS_fsm = ap_ST_st97_fsm_49;
            end else begin
                ap_NS_fsm = ap_ST_st97_fsm_49;
            end
        end
        ap_ST_st97_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_50;
        end
        ap_ST_st98_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_51;
        end
        ap_ST_pp3_stg0_fsm_51 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~(ap_const_lv1_0 == exitcond_fu_1541_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1))) begin
                ap_NS_fsm = ap_ST_pp3_stg1_fsm_52;
            end else begin
                ap_NS_fsm = ap_ST_st109_fsm_56;
            end
        end
        ap_ST_pp3_stg1_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg2_fsm_53;
        end
        ap_ST_pp3_stg2_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg3_fsm_54;
        end
        ap_ST_pp3_stg3_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg4_fsm_55;
        end
        ap_ST_pp3_stg4_fsm_55 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_55) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_51;
            end else begin
                ap_NS_fsm = ap_ST_st109_fsm_56;
            end
        end
        ap_ST_st109_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_57;
        end
        ap_ST_st110_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_58;
        end
        ap_ST_st111_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_59;
        end
        ap_ST_st112_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_60;
        end
        ap_ST_st113_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_61;
        end
        ap_ST_st114_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_62;
        end
        ap_ST_st115_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_63;
        end
        ap_ST_st116_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_64;
        end
        ap_ST_st117_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_65;
        end
        ap_ST_st118_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st119_fsm_66;
        end
        ap_ST_st119_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_67;
        end
        ap_ST_st120_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st121_fsm_68;
        end
        ap_ST_st121_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st122_fsm_69;
        end
        ap_ST_st122_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st123_fsm_70;
        end
        ap_ST_st123_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_71;
        end
        ap_ST_st124_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st125_fsm_72;
        end
        ap_ST_st125_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st126_fsm_73;
        end
        ap_ST_st126_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_74;
        end
        ap_ST_st127_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st128_fsm_75;
        end
        ap_ST_st128_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_76;
        end
        ap_ST_st129_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st130_fsm_77;
        end
        ap_ST_st130_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_78;
        end
        ap_ST_st131_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_79;
        end
        ap_ST_st132_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_80;
        end
        ap_ST_st133_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st134_fsm_81;
        end
        ap_ST_st134_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st135_fsm_82;
        end
        ap_ST_st135_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st136_fsm_83;
        end
        ap_ST_st136_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st137_fsm_84;
        end
        ap_ST_st137_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st138_fsm_85;
        end
        ap_ST_st138_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st139_fsm_86;
        end
        ap_ST_st139_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st140_fsm_87;
        end
        ap_ST_st140_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st141_fsm_88;
        end
        ap_ST_st141_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st142_fsm_89;
        end
        ap_ST_st142_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st143_fsm_90;
        end
        ap_ST_st143_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st144_fsm_91;
        end
        ap_ST_st144_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st145_fsm_92;
        end
        ap_ST_st145_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st146_fsm_93;
        end
        ap_ST_st146_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st147_fsm_94;
        end
        ap_ST_st147_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st148_fsm_95;
        end
        ap_ST_st148_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st149_fsm_96;
        end
        ap_ST_st149_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st150_fsm_97;
        end
        ap_ST_st150_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st151_fsm_98;
        end
        ap_ST_st151_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st152_fsm_99;
        end
        ap_ST_st152_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st153_fsm_100;
        end
        ap_ST_st153_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st154_fsm_101;
        end
        ap_ST_st154_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st155_fsm_102;
        end
        ap_ST_st155_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st156_fsm_103;
        end
        ap_ST_st156_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st157_fsm_104;
        end
        ap_ST_st157_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st158_fsm_105;
        end
        ap_ST_st158_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st159_fsm_106;
        end
        ap_ST_st159_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st160_fsm_107;
        end
        ap_ST_st160_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st161_fsm_108;
        end
        ap_ST_st161_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st162_fsm_109;
        end
        ap_ST_st162_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st163_fsm_110;
        end
        ap_ST_st163_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st164_fsm_111;
        end
        ap_ST_st164_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st165_fsm_112;
        end
        ap_ST_st165_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st166_fsm_113;
        end
        ap_ST_st166_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st167_fsm_114;
        end
        ap_ST_st167_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st168_fsm_115;
        end
        ap_ST_st168_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st169_fsm_116;
        end
        ap_ST_st169_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st170_fsm_117;
        end
        ap_ST_st170_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st171_fsm_118;
        end
        ap_ST_st171_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st172_fsm_119;
        end
        ap_ST_st172_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st173_fsm_120;
        end
        ap_ST_st173_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st174_fsm_121;
        end
        ap_ST_st174_fsm_121 : 
        begin
            ap_NS_fsm = ap_ST_st175_fsm_122;
        end
        ap_ST_st175_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st176_fsm_123;
        end
        ap_ST_st176_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st177_fsm_124;
        end
        ap_ST_st177_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st178_fsm_125;
        end
        ap_ST_st178_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st179_fsm_126;
        end
        ap_ST_st179_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st180_fsm_127;
        end
        ap_ST_st180_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st181_fsm_128;
        end
        ap_ST_st181_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st182_fsm_129;
        end
        ap_ST_st182_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st183_fsm_130;
        end
        ap_ST_st183_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st184_fsm_131;
        end
        ap_ST_st184_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st185_fsm_132;
        end
        ap_ST_st185_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st186_fsm_133;
        end
        ap_ST_st186_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st187_fsm_134;
        end
        ap_ST_st187_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st188_fsm_135;
        end
        ap_ST_st188_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st189_fsm_136;
        end
        ap_ST_st189_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st190_fsm_137;
        end
        ap_ST_st190_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st191_fsm_138;
        end
        ap_ST_st191_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st192_fsm_139;
        end
        ap_ST_st192_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st193_fsm_140;
        end
        ap_ST_st193_fsm_140 : 
        begin
            ap_NS_fsm = ap_ST_st194_fsm_141;
        end
        ap_ST_st194_fsm_141 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) begin
                ap_NS_fsm = ap_ST_st195_fsm_142;
            end else begin
                ap_NS_fsm = ap_ST_st194_fsm_141;
            end
        end
        ap_ST_st195_fsm_142 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_WREADY)) begin
                ap_NS_fsm = ap_ST_st196_fsm_143;
            end else begin
                ap_NS_fsm = ap_ST_st195_fsm_142;
            end
        end
        ap_ST_st196_fsm_143 : 
        begin
            ap_NS_fsm = ap_ST_st197_fsm_144;
        end
        ap_ST_st197_fsm_144 : 
        begin
            ap_NS_fsm = ap_ST_st198_fsm_145;
        end
        ap_ST_st198_fsm_145 : 
        begin
            if (~(gmem32_BVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st33_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st198_fsm_145;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_returnA_addr_3_gep_fu_404_p3 = ap_const_lv64_3;
assign acc_returnA_addr_4_gep_fu_453_p3 = ap_const_lv64_4;
assign acc_returnA_addr_5_gep_fu_502_p3 = ap_const_lv64_5;
assign acc_returnA_addr_6_gep_fu_306_p3 = ap_const_lv64_1;
assign acc_returnA_addr_7_gep_fu_355_p3 = ap_const_lv64_2;
assign acc_returnA_addr_gep_fu_257_p3 = ap_const_lv64_0;
assign acc_returnA_d0 = ap_const_lv32_0;
assign acc_returnB_addr_3_gep_fu_411_p3 = ap_const_lv64_3;
assign acc_returnB_addr_4_gep_fu_460_p3 = ap_const_lv64_4;
assign acc_returnB_addr_5_gep_fu_509_p3 = ap_const_lv64_5;
assign acc_returnB_addr_6_gep_fu_313_p3 = ap_const_lv64_1;
assign acc_returnB_addr_7_gep_fu_362_p3 = ap_const_lv64_2;
assign acc_returnB_addr_gep_fu_264_p3 = ap_const_lv64_0;
assign acc_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnA_addr_3_gep_fu_425_p3 = ap_const_lv64_3;
assign acc_weight_returnA_addr_4_gep_fu_474_p3 = ap_const_lv64_4;
assign acc_weight_returnA_addr_5_gep_fu_523_p3 = ap_const_lv64_5;
assign acc_weight_returnA_addr_6_gep_fu_327_p3 = ap_const_lv64_1;
assign acc_weight_returnA_addr_7_gep_fu_376_p3 = ap_const_lv64_2;
assign acc_weight_returnA_addr_gep_fu_278_p3 = ap_const_lv64_0;
assign acc_weight_returnA_d0 = ap_const_lv32_0;
assign acc_weight_returnA_returnB_add_1_gep_fu_348_p3 = ap_const_lv64_1;
assign acc_weight_returnA_returnB_add_2_gep_fu_397_p3 = ap_const_lv64_2;
assign acc_weight_returnA_returnB_add_3_gep_fu_446_p3 = ap_const_lv64_3;
assign acc_weight_returnA_returnB_add_4_gep_fu_495_p3 = ap_const_lv64_4;
assign acc_weight_returnA_returnB_add_5_gep_fu_544_p3 = ap_const_lv64_5;
assign acc_weight_returnA_returnB_add_gep_fu_299_p3 = ap_const_lv64_0;
assign acc_weight_returnA_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnB_addr_3_gep_fu_439_p3 = ap_const_lv64_3;
assign acc_weight_returnB_addr_4_gep_fu_488_p3 = ap_const_lv64_4;
assign acc_weight_returnB_addr_5_gep_fu_537_p3 = ap_const_lv64_5;
assign acc_weight_returnB_addr_6_gep_fu_341_p3 = ap_const_lv64_1;
assign acc_weight_returnB_addr_7_gep_fu_390_p3 = ap_const_lv64_2;
assign acc_weight_returnB_addr_gep_fu_292_p3 = ap_const_lv64_0;
assign acc_weight_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareA_addr_3_gep_fu_418_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareA_addr_4_gep_fu_467_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareA_addr_5_gep_fu_516_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareA_addr_6_gep_fu_320_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareA_addr_7_gep_fu_369_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareA_addr_gep_fu_271_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareA_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareB_addr_3_gep_fu_432_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareB_addr_4_gep_fu_481_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareB_addr_5_gep_fu_530_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareB_addr_6_gep_fu_334_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareB_addr_7_gep_fu_383_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareB_addr_gep_fu_285_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareB_d0 = ap_const_lv32_0;
assign ap_return = ap_const_lv32_0;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_1007 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1007 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_1033 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1033 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_1042 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1042 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_1051 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1051 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_1067 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1067 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_1076 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1076 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_1336 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1336 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_1375 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1375 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_1386 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1386 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_1397 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1397 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_65]);
end

/// ap_sig_bdd_1406 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1406 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_79]);
end

/// ap_sig_bdd_1415 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1415 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_1427 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1427 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_1439 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1439 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_1547 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1547 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_1555 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1555 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_1586 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1586 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_91]);
end

/// ap_sig_bdd_164 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_164 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_1650 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1650 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_1666 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1666 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_1688 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1688 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8E]);
end

/// ap_sig_bdd_1713 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1713 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_1733 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1733 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_1740 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1740 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_1784 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1784 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_1793 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1793 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_1800 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1800 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end

/// ap_sig_bdd_1807 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1807 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_66]);
end

/// ap_sig_bdd_1832 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1832 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_1839 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1839 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_61]);
end

/// ap_sig_bdd_1847 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1847 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end

/// ap_sig_bdd_1870 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1870 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end

/// ap_sig_bdd_1877 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1877 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7E]);
end

/// ap_sig_bdd_1889 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1889 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_1971 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1971 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_2119 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2119 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_2127 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_2135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_2143 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2143 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_2151 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2151 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_2159 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2159 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_2167 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2167 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_2175 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2175 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_2183 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_2191 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2191 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_2199 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2199 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end

/// ap_sig_bdd_2207 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2207 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_2215 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2215 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_2223 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2223 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_2234 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2234 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_57]);
end

/// ap_sig_bdd_2242 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2242 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end

/// ap_sig_bdd_2250 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2250 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end

/// ap_sig_bdd_2258 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end

/// ap_sig_bdd_2266 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2266 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5B]);
end

/// ap_sig_bdd_2274 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2274 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end

/// ap_sig_bdd_2282 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2282 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_2290 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2290 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_2298 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2298 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5F]);
end

/// ap_sig_bdd_2306 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2306 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_60]);
end

/// ap_sig_bdd_2315 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2315 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_62]);
end

/// ap_sig_bdd_2323 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_63]);
end

/// ap_sig_bdd_2334 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2334 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7F]);
end

/// ap_sig_bdd_2342 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2342 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_80]);
end

/// ap_sig_bdd_2350 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2350 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_81]);
end

/// ap_sig_bdd_2358 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2358 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_82]);
end

/// ap_sig_bdd_2366 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2366 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_83]);
end

/// ap_sig_bdd_2374 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2374 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_84]);
end

/// ap_sig_bdd_2382 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2382 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_85]);
end

/// ap_sig_bdd_2390 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2390 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_86]);
end

/// ap_sig_bdd_2398 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2398 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_87]);
end

/// ap_sig_bdd_2406 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2406 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_88]);
end

/// ap_sig_bdd_2414 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2414 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_89]);
end

/// ap_sig_bdd_2422 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2422 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8A]);
end

/// ap_sig_bdd_2430 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2430 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8B]);
end

/// ap_sig_bdd_2438 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2438 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8C]);
end

/// ap_sig_bdd_353 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_353 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_362 assign process. ///
always @ (gmem32_RVALID or exitcond4_reg_1900)
begin
    ap_sig_bdd_362 = ((gmem32_RVALID == ap_const_logic_0) & (exitcond4_reg_1900 == ap_const_lv1_0));
end

/// ap_sig_bdd_378 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_378 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_385 assign process. ///
always @ (gmem32_RVALID or exitcond2_reg_1949)
begin
    ap_sig_bdd_385 = ((gmem32_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond2_reg_1949));
end

/// ap_sig_bdd_401 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_401 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_546 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_546 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_562 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_562 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_570 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_570 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_578 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_578 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_64]);
end

/// ap_sig_bdd_586 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_586 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7D]);
end

/// ap_sig_bdd_595 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_595 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_642 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_642 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_652 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_652 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_659 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_659 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_699 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_699 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_708 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_708 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8D]);
end

/// ap_sig_bdd_776 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_776 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_791 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_791 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_825 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_825 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_832 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_832 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end

/// ap_sig_bdd_840 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_840 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_69]);
end

/// ap_sig_bdd_849 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_849 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_54]);
end

/// ap_sig_bdd_856 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_856 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6A]);
end

/// ap_sig_bdd_880 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_880 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_889 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_889 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_908 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_908 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end
assign bramA_address1 = tmp_16_fu_1517_p1;
assign bramA_d0 = reg_1176;
assign bramB_address1 = tmp_16_fu_1517_p1;
assign bramB_d0 = reg_1176;
assign column_index_fu_1435_p2 = (column_index_0_in_reg_884 + ap_const_lv32_1);
assign correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign counter_2_fu_1429_p2 = (counter_reg_849 + tmp_13_fu_1423_p2);
assign exitcond2_fu_1480_p2 = (indvar1_phi_fu_908_p4 == tmp_6_reg_1655? 1'b1: 1'b0);
assign exitcond4_fu_1396_p2 = (indvar_phi_fu_876_p4 == tmp_6_reg_1655? 1'b1: 1'b0);
assign exitcond_fu_1541_p2 = (i2_phi_fu_1016_p4 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_i_fu_1303_p2 = (i_i_reg_791 == ap_const_lv8_FC? 1'b1: 1'b0);
assign gmem32_ARBURST = ap_const_lv2_0;
assign gmem32_ARCACHE = ap_const_lv4_0;
assign gmem32_ARID = ap_const_lv1_0;
assign gmem32_ARLEN = p_add_i32_shr_reg_1661;
assign gmem32_ARLOCK = ap_const_lv2_0;
assign gmem32_ARPROT = ap_const_lv3_0;
assign gmem32_ARQOS = ap_const_lv4_0;
assign gmem32_ARREGION = ap_const_lv4_0;
assign gmem32_ARSIZE = ap_const_lv3_0;
assign gmem32_ARUSER = ap_const_lv1_0;
assign gmem32_AWADDR = gmem32_addr_2_reg_2180;
assign gmem32_AWBURST = ap_const_lv2_0;
assign gmem32_AWCACHE = ap_const_lv4_0;
assign gmem32_AWID = ap_const_lv1_0;
assign gmem32_AWLEN = ap_const_lv32_1;
assign gmem32_AWLOCK = ap_const_lv2_0;
assign gmem32_AWPROT = ap_const_lv3_0;
assign gmem32_AWQOS = ap_const_lv4_0;
assign gmem32_AWREGION = ap_const_lv4_0;
assign gmem32_AWSIZE = ap_const_lv3_0;
assign gmem32_AWUSER = ap_const_lv1_0;
assign gmem32_WDATA = reg_1182;
assign gmem32_WID = ap_const_lv1_0;
assign gmem32_WLAST = ap_const_logic_0;
assign gmem32_WSTRB = ap_const_lv4_F;
assign gmem32_WUSER = ap_const_lv1_0;
assign grp_fu_1024_ce = ap_const_logic_1;
assign grp_fu_1030_ce = ap_const_logic_1;
assign grp_fu_1036_ce = ap_const_logic_1;
assign grp_fu_1036_p0 = acc_weight_returnA_q0;
assign grp_fu_1036_p1 = reg_1209;
assign grp_fu_1042_ce = ap_const_logic_1;
assign grp_fu_1042_p0 = acc_weight_returnB_q0;
assign grp_fu_1042_p1 = tmp_31_reg_2060;
assign grp_fu_1048_ce = ap_const_logic_1;
assign grp_fu_1048_p0 = acc_weight_returnSquareA_q0;
assign grp_fu_1048_p1 = tmp_24_reg_2082;
assign grp_fu_1054_ce = ap_const_logic_1;
assign grp_fu_1054_p0 = acc_weight_returnSquareB_q0;
assign grp_fu_1054_p1 = tmp_27_reg_2087;
assign grp_fu_1060_ce = ap_const_logic_1;
assign grp_fu_1060_p0 = acc_weight_returnA_returnB_q0;
assign grp_fu_1060_p1 = tmp_34_reg_2092;
assign grp_fu_1074_ce = ap_const_logic_1;
assign grp_fu_1080_ce = ap_const_logic_1;
assign grp_fu_1084_ce = ap_const_logic_1;
assign grp_fu_1088_ce = ap_const_logic_1;
assign grp_fu_1088_p0 = lnReturnB_reg_2021;
assign grp_fu_1088_p1 = ap_reg_ppstg_reg_1157_pp2_it30;
assign grp_fu_1092_ce = ap_const_logic_1;
assign grp_fu_1092_p0 = lnReturnA_reg_2012;
assign grp_fu_1092_p1 = lnReturnB_reg_2021;
assign grp_fu_1096_ce = ap_const_logic_1;
assign grp_fu_1096_p0 = reg_1147;
assign grp_fu_1096_p1 = ap_reg_ppstg_reg_1157_pp2_it34;
assign grp_fu_1100_ce = ap_const_logic_1;
assign grp_fu_1100_p0 = reg_1202;
assign grp_fu_1100_p1 = ap_reg_ppstg_reg_1157_pp2_it34;
assign grp_fu_1104_ce = ap_const_logic_1;
assign grp_fu_1104_p0 = tmp_33_reg_2071;
assign grp_fu_1104_p1 = ap_reg_ppstg_reg_1157_pp2_it34;
assign grp_fu_1118_ce = ap_const_logic_1;
assign grp_fu_1124_ce = ap_const_logic_1;
assign grp_fu_1124_p0 = tmp_1_reg_1633;
assign grp_fu_1127_ce = ap_const_logic_1;
assign grp_fu_1127_p0 = ap_const_lv32_0;
assign grp_fu_1127_p1 = reg_1257;
assign grp_fu_1132_ce = ap_const_logic_1;
assign grp_fu_1132_p0 = ap_const_lv32_0;
assign grp_fu_1132_p1 = reg_1269;
assign grp_fu_1137_ce = ap_const_logic_1;
assign grp_fu_1137_p0 = ap_const_lv32_0;
assign grp_fu_1137_p1 = reg_1182;
assign grp_fu_1142_ce = ap_const_logic_1;
assign grp_fu_1142_p0 = ap_const_lv32_0;
assign grp_fu_1142_p1 = reg_1192;
assign grp_fu_1458_ce = ap_const_logic_1;
assign grp_fu_1458_p0 = column_index_reg_1919;
assign grp_fu_1458_p1 = number_of_days;
assign grp_fu_1524_ce = ap_const_logic_1;
assign grp_fu_1524_p0 = i1_phi_fu_920_p4;
assign grp_fu_1524_p1 = ap_const_lv31_6;
assign i1_cast_fu_1496_p1 = i1_phi_fu_920_p4;
assign i1_i_cast_fu_1320_p1 = i1_i_reg_803;
assign i_1_fu_1547_p2 = (i2_phi_fu_1016_p4 + ap_const_lv3_1);
assign i_2_fu_1314_p2 = (i_i_reg_791 + ap_const_lv8_1);
assign i_3_fu_1334_p2 = (i1_i_reg_803 + ap_const_lv31_1);
assign i_fu_1505_p2 = (i1_phi_fu_920_p4 + ap_const_lv31_1);
assign indvar_next1_fu_1485_p2 = (indvar1_phi_fu_908_p4 + ap_const_lv30_1);
assign indvar_next_fu_1401_p2 = (indvar_phi_fu_876_p4 + ap_const_lv30_1);
assign indvars_iv_next3_fu_1452_p2 = ($signed(indvars_iv2_reg_814) + $signed(ap_const_lv32_FFFFFFFF));
assign indvars_iv_next_fu_1446_p2 = (indvars_iv_reg_826 + ap_const_lv32_1);
assign next_mul_fu_1357_p1 = number_of_days;
assign next_mul_fu_1357_p2 = ($signed(phi_mul_reg_861) + $signed(next_mul_fu_1357_p1));
assign out_correlation4_sum_cast_fu_1568_p1 = out_correlation4_sum_fu_1563_p2;
assign out_correlation4_sum_fu_1563_p2 = ($signed(tmp_61_cast_reg_1601) + $signed(tmp_55_cast_fu_1559_p1));
assign p_add_i32_shr_fu_1353_p1 = tmp_6_fu_1350_p1;
assign row_index_1_fu_1371_p2 = (row_index_reg_838 + ap_const_lv31_1);
assign row_index_cast_fu_1362_p1 = row_index_reg_838;
assign smax_fu_1417_p3 = ((tmp_61_reg_1909)? number_of_indices: indvars_iv_reg_826);
assign sum_weight_returnA_returnB_phi_fu_1004_p4 = sum_weight_returnA_returnB_reg_1000;
assign tmp_11_fu_1381_p2 = ($signed(tmp_62_cast_reg_1606) + $signed(tmp_9_fu_1377_p1));
assign tmp_12_fu_1491_p1 = ap_reg_ppstg_indvar1_reg_904_pp1_it1;
assign tmp_13_fu_1423_p2 = (smax_fu_1417_p3 + indvars_iv2_reg_814);
assign tmp_14_fu_1500_p2 = ($signed(i1_cast_fu_1496_p1) < $signed(tmp_1_reg_1633)? 1'b1: 1'b0);
assign tmp_15_fu_1511_p1 = i1_phi_fu_920_p4;
assign tmp_16_fu_1517_p1 = i_fu_1505_p2;
assign tmp_1_fu_1340_p0 = number_of_days;
assign tmp_1_fu_1340_p2 = ($signed(tmp_1_fu_1340_p0) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_20_fu_1530_p1 = grp_fu_1524_p2;
assign tmp_3_fu_1275_p4 = {{out_correlation[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_4_fu_1366_p2 = ($signed(row_index_cast_fu_1362_p1) < $signed(tmp_reg_1644)? 1'b1: 1'b0);
assign tmp_55_cast_fu_1559_p1 = $signed(counter_1_reg_893);
assign tmp_55_fu_1386_p1 = tmp_11_fu_1381_p2;
assign tmp_56_fu_1578_p2 = (counter_1_reg_893 + ap_const_lv32_1);
assign tmp_57_fu_1553_p1 = i2_phi_fu_1016_p4;
assign tmp_58_i_fu_1309_p1 = i_i_reg_791;
assign tmp_59_i_fu_1324_p1 = number_of_days;
assign tmp_59_i_fu_1324_p2 = ($signed(i1_i_cast_fu_1320_p1) < $signed(tmp_59_i_fu_1324_p1)? 1'b1: 1'b0);
assign tmp_5_fu_1289_p4 = {{in_indices[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_60_i_fu_1329_p1 = i1_i_reg_803;
assign tmp_61_cast_fu_1285_p1 = tmp_3_fu_1275_p4;
assign tmp_61_fu_1412_p2 = ($signed(indvars_iv_reg_826) < $signed(number_of_indices)? 1'b1: 1'b0);
assign tmp_62_cast_fu_1299_p1 = tmp_5_fu_1289_p4;
assign tmp_62_fu_1462_p1 = tmp_10_reg_1938;
assign tmp_63_fu_1465_p2 = ($signed(tmp_62_cast_reg_1606) + $signed(tmp_62_fu_1462_p1));
assign tmp_64_fu_1470_p1 = tmp_63_fu_1465_p2;
assign tmp_6_fu_1350_p0 = number_of_days;
assign tmp_6_fu_1350_p1 = tmp_6_fu_1350_p0[29:0];
assign tmp_8_fu_1441_p2 = ($signed(column_index_fu_1435_p2) < $signed(number_of_indices)? 1'b1: 1'b0);
assign tmp_9_fu_1377_p1 = $signed(phi_mul_reg_861);
assign tmp_fu_1345_p2 = ($signed(number_of_indices) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_s_fu_1407_p1 = ap_reg_ppstg_indvar_reg_872_pp0_it1;
always @ (posedge ap_clk)
begin
    tmp_61_cast_reg_1601[32:30] <= 3'b000;
    tmp_62_cast_reg_1606[32:30] <= 3'b000;
    p_add_i32_shr_reg_1661[31:30] <= 2'b00;
    acc_returnA_addr_reg_1666[2:0] <= 3'b000;
    acc_returnB_addr_reg_1671[2:0] <= 3'b000;
    acc_weight_returnSquareA_addr_reg_1676[2:0] <= 3'b000;
    acc_weight_returnA_addr_reg_1681[2:0] <= 3'b000;
    acc_weight_returnSquareB_addr_reg_1686[2:0] <= 3'b000;
    acc_weight_returnB_addr_reg_1691[2:0] <= 3'b000;
    acc_weight_returnA_returnB_add_reg_1696[2:0] <= 3'b000;
    acc_returnA_addr_6_reg_1701[2:0] <= 3'b001;
    acc_returnB_addr_6_reg_1706[2:0] <= 3'b001;
    acc_weight_returnSquareA_addr_6_reg_1711[2:0] <= 3'b001;
    acc_weight_returnA_addr_6_reg_1716[2:0] <= 3'b001;
    acc_weight_returnSquareB_addr_6_reg_1721[2:0] <= 3'b001;
    acc_weight_returnB_addr_6_reg_1726[2:0] <= 3'b001;
    acc_weight_returnA_returnB_add_1_reg_1731[2:0] <= 3'b001;
    acc_returnA_addr_7_reg_1736[2:0] <= 3'b010;
    acc_returnB_addr_7_reg_1741[2:0] <= 3'b010;
    acc_weight_returnSquareA_addr_7_reg_1746[2:0] <= 3'b010;
    acc_weight_returnA_addr_7_reg_1751[2:0] <= 3'b010;
    acc_weight_returnSquareB_addr_7_reg_1756[2:0] <= 3'b010;
    acc_weight_returnB_addr_7_reg_1761[2:0] <= 3'b010;
    acc_weight_returnA_returnB_add_2_reg_1766[2:0] <= 3'b010;
    acc_returnA_addr_3_reg_1771[2:0] <= 3'b011;
    acc_returnB_addr_3_reg_1776[2:0] <= 3'b011;
    acc_weight_returnSquareA_addr_3_reg_1781[2:0] <= 3'b011;
    acc_weight_returnA_addr_3_reg_1786[2:0] <= 3'b011;
    acc_weight_returnSquareB_addr_3_reg_1791[2:0] <= 3'b011;
    acc_weight_returnB_addr_3_reg_1796[2:0] <= 3'b011;
    acc_weight_returnA_returnB_add_3_reg_1801[2:0] <= 3'b011;
    acc_returnA_addr_4_reg_1806[2:0] <= 3'b100;
    acc_returnB_addr_4_reg_1811[2:0] <= 3'b100;
    acc_weight_returnSquareA_addr_4_reg_1816[2:0] <= 3'b100;
    acc_weight_returnA_addr_4_reg_1821[2:0] <= 3'b100;
    acc_weight_returnSquareB_addr_4_reg_1826[2:0] <= 3'b100;
    acc_weight_returnB_addr_4_reg_1831[2:0] <= 3'b100;
    acc_weight_returnA_returnB_add_4_reg_1836[2:0] <= 3'b100;
    acc_returnA_addr_5_reg_1841[2:0] <= 3'b101;
    acc_returnB_addr_5_reg_1846[2:0] <= 3'b101;
    acc_weight_returnSquareA_addr_5_reg_1851[2:0] <= 3'b101;
    acc_weight_returnA_addr_5_reg_1856[2:0] <= 3'b101;
    acc_weight_returnSquareB_addr_5_reg_1861[2:0] <= 3'b101;
    acc_weight_returnB_addr_5_reg_1866[2:0] <= 3'b101;
    acc_weight_returnA_returnB_add_5_reg_1871[2:0] <= 3'b101;
    row_index_cast_reg_1881[31] <= 1'b0;
    tmp_57_reg_2106[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end



endmodule //correlation_accel_v1

