// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module correlation_accel_v3_backEnd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        NUMBER_OF_DAYS_dout,
        NUMBER_OF_DAYS_empty_n,
        NUMBER_OF_DAYS_read,
        NUMBER_OF_INDICES_dout,
        NUMBER_OF_INDICES_empty_n,
        NUMBER_OF_INDICES_read,
        sum_weight_in_V_dout,
        sum_weight_in_V_empty_n,
        sum_weight_in_V_read,
        sum_return_in_V_dout,
        sum_return_in_V_empty_n,
        sum_return_in_V_read,
        sum_weight_returnSquare_in_V_dout,
        sum_weight_returnSquare_in_V_empty_n,
        sum_weight_returnSquare_in_V_read,
        sum_weight_return_in_V_dout,
        sum_weight_return_in_V_empty_n,
        sum_weight_return_in_V_read,
        sum_weight_returnA_returnB_in_s_dout,
        sum_weight_returnA_returnB_in_s_empty_n,
        sum_weight_returnA_returnB_in_s_read,
        sum_returnA_in_V_dout,
        sum_returnA_in_V_empty_n,
        sum_returnA_in_V_read,
        sum_weight_returnSquareA_in_V_dout,
        sum_weight_returnSquareA_in_V_empty_n,
        sum_weight_returnSquareA_in_V_read,
        sum_weight_returnA_in_V_dout,
        sum_weight_returnA_in_V_empty_n,
        sum_weight_returnA_in_V_read,
        out_correlation_TDATA,
        out_correlation_TVALID,
        out_correlation_TREADY,
        out_correlation_TKEEP,
        out_correlation_TSTRB,
        out_correlation_TUSER,
        out_correlation_TLAST,
        out_correlation_TID,
        out_correlation_TDEST
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 94'b1;
parameter    ap_ST_st2_fsm_1 = 94'b10;
parameter    ap_ST_st3_fsm_2 = 94'b100;
parameter    ap_ST_st4_fsm_3 = 94'b1000;
parameter    ap_ST_st5_fsm_4 = 94'b10000;
parameter    ap_ST_st6_fsm_5 = 94'b100000;
parameter    ap_ST_st7_fsm_6 = 94'b1000000;
parameter    ap_ST_st8_fsm_7 = 94'b10000000;
parameter    ap_ST_st9_fsm_8 = 94'b100000000;
parameter    ap_ST_st10_fsm_9 = 94'b1000000000;
parameter    ap_ST_st11_fsm_10 = 94'b10000000000;
parameter    ap_ST_st12_fsm_11 = 94'b100000000000;
parameter    ap_ST_st13_fsm_12 = 94'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 94'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 94'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 94'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 94'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 94'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 94'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 94'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 94'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 94'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 94'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 94'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 94'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 94'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 94'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 94'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 94'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 94'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 94'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 94'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 94'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 94'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 94'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 94'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 94'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 94'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 94'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 94'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 94'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 94'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 94'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 94'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 94'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 94'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 94'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 94'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 94'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 94'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 94'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 94'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 94'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 94'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 94'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 94'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 94'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 94'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 94'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 94'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 94'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 94'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 94'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 94'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 94'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 94'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 94'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 94'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 94'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] NUMBER_OF_DAYS_dout;
input   NUMBER_OF_DAYS_empty_n;
output   NUMBER_OF_DAYS_read;
input  [31:0] NUMBER_OF_INDICES_dout;
input   NUMBER_OF_INDICES_empty_n;
output   NUMBER_OF_INDICES_read;
input  [31:0] sum_weight_in_V_dout;
input   sum_weight_in_V_empty_n;
output   sum_weight_in_V_read;
input  [31:0] sum_return_in_V_dout;
input   sum_return_in_V_empty_n;
output   sum_return_in_V_read;
input  [31:0] sum_weight_returnSquare_in_V_dout;
input   sum_weight_returnSquare_in_V_empty_n;
output   sum_weight_returnSquare_in_V_read;
input  [31:0] sum_weight_return_in_V_dout;
input   sum_weight_return_in_V_empty_n;
output   sum_weight_return_in_V_read;
input  [31:0] sum_weight_returnA_returnB_in_s_dout;
input   sum_weight_returnA_returnB_in_s_empty_n;
output   sum_weight_returnA_returnB_in_s_read;
input  [31:0] sum_returnA_in_V_dout;
input   sum_returnA_in_V_empty_n;
output   sum_returnA_in_V_read;
input  [31:0] sum_weight_returnSquareA_in_V_dout;
input   sum_weight_returnSquareA_in_V_empty_n;
output   sum_weight_returnSquareA_in_V_read;
input  [31:0] sum_weight_returnA_in_V_dout;
input   sum_weight_returnA_in_V_empty_n;
output   sum_weight_returnA_in_V_read;
output  [31:0] out_correlation_TDATA;
output   out_correlation_TVALID;
input   out_correlation_TREADY;
output  [3:0] out_correlation_TKEEP;
output  [3:0] out_correlation_TSTRB;
output  [0:0] out_correlation_TUSER;
output  [0:0] out_correlation_TLAST;
output  [0:0] out_correlation_TID;
output  [0:0] out_correlation_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg NUMBER_OF_DAYS_read;
reg NUMBER_OF_INDICES_read;
reg sum_weight_in_V_read;
reg sum_return_in_V_read;
reg sum_weight_returnSquare_in_V_read;
reg sum_weight_return_in_V_read;
reg sum_weight_returnA_returnB_in_s_read;
reg sum_returnA_in_V_read;
reg sum_weight_returnSquareA_in_V_read;
reg sum_weight_returnA_in_V_read;
reg out_correlation_TVALID;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [93:0] ap_CS_fsm = 94'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_113;
wire   [31:0] grp_fu_256_p2;
reg   [31:0] reg_277;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_176;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_bdd_183;
wire   [31:0] grp_fu_260_p2;
reg   [31:0] reg_285;
wire   [31:0] grp_fu_242_p2;
reg   [31:0] reg_294;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_195;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_202;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_211;
wire   [31:0] grp_fu_247_p2;
reg   [31:0] reg_301;
wire   [31:0] grp_fu_252_p2;
reg   [31:0] reg_307;
wire   [31:0] grp_fu_234_p2;
reg   [31:0] reg_312;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_226;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_233;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_bdd_241;
reg   [31:0] reg_319;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_250;
reg    ap_sig_cseq_ST_st59_fsm_58;
reg    ap_sig_bdd_257;
wire   [31:0] grp_fu_238_p2;
reg   [31:0] reg_324;
reg   [31:0] NUMBER_OF_INDICES_read_reg_366;
reg    ap_sig_bdd_272;
wire   [31:0] tmp_i_fu_330_p2;
reg   [31:0] tmp_i_reg_372;
wire   [31:0] grp_fu_264_p1;
reg   [31:0] tmp_i_24_reg_377;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_284;
wire   [31:0] tmp_1_i_fu_336_p2;
reg   [31:0] tmp_1_i_reg_383;
reg   [31:0] tmp_reg_391;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_295;
wire   [0:0] tmp_2_i_fu_345_p2;
reg    ap_sig_bdd_324;
reg   [31:0] tmp_10_reg_397;
reg   [31:0] tmp_11_reg_402;
reg   [31:0] tmp_12_reg_407;
reg   [31:0] tmp_13_reg_413;
reg   [31:0] tmp_14_reg_418;
reg   [31:0] tmp_15_reg_423;
reg   [31:0] tmp_16_reg_428;
wire   [0:0] tmp_32_i_fu_350_p2;
reg   [0:0] tmp_32_i_reg_433;
wire   [30:0] column_index_fu_355_p2;
reg   [30:0] column_index_reg_438;
reg   [31:0] tmp_25_i_reg_443;
reg   [31:0] tmp_27_i_reg_448;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_353;
wire   [31:0] grp_fu_267_p2;
reg   [31:0] volatilityA_reg_453;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_bdd_362;
wire   [31:0] grp_fu_272_p2;
reg   [31:0] volatilityB_reg_458;
reg   [30:0] column_index_i_reg_222;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_374;
reg    ap_sig_ioackin_out_correlation_TREADY;
reg    ap_reg_ioackin_out_correlation_TREADY = 1'b0;
reg   [31:0] grp_fu_234_p0;
reg   [31:0] grp_fu_234_p1;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_411;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_418;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_425;
reg   [31:0] grp_fu_238_p0;
wire   [31:0] grp_fu_238_p1;
reg   [31:0] grp_fu_242_p0;
reg   [31:0] grp_fu_242_p1;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_439;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_446;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_453;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_461;
reg   [31:0] grp_fu_247_p0;
reg   [31:0] grp_fu_247_p1;
wire   [31:0] grp_fu_252_p0;
reg   [31:0] grp_fu_252_p1;
reg   [31:0] grp_fu_256_p0;
reg   [31:0] grp_fu_256_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_475;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_482;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_489;
reg   [31:0] grp_fu_260_p0;
reg   [31:0] grp_fu_260_p1;
wire   [31:0] grp_fu_264_p0;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_501;
wire   [31:0] grp_fu_267_p1;
wire   [31:0] grp_fu_272_p1;
wire   [31:0] column_index_cast_i_fu_341_p1;
reg   [1:0] grp_fu_234_opcode;
wire    grp_fu_234_ce;
reg   [1:0] grp_fu_238_opcode;
wire    grp_fu_238_ce;
wire    grp_fu_242_ce;
wire    grp_fu_247_ce;
wire    grp_fu_252_ce;
reg    grp_fu_256_ce;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_829;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_837;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_845;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_853;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_864;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_872;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_883;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_894;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_902;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_bdd_912;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_bdd_920;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_bdd_930;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_938;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_bdd_946;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_bdd_954;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_962;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_bdd_970;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_bdd_978;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_bdd_986;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_bdd_994;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_1002;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_1010;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_bdd_1018;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_bdd_1026;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_bdd_1034;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_1044;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_1052;
wire    grp_fu_260_ce;
wire    grp_fu_264_ce;
wire   [31:0] grp_fu_267_p0;
wire    grp_fu_267_ce;
wire   [31:0] grp_fu_272_p0;
wire    grp_fu_272_ce;
reg   [93:0] ap_NS_fsm;


correlation_accel_v3_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_faddfsub_32ns_32ns_32_5_full_dsp_U37(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_234_p0 ),
    .din1( grp_fu_234_p1 ),
    .opcode( grp_fu_234_opcode ),
    .ce( grp_fu_234_ce ),
    .dout( grp_fu_234_p2 )
);

correlation_accel_v3_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_faddfsub_32ns_32ns_32_5_full_dsp_U38(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_238_p0 ),
    .din1( grp_fu_238_p1 ),
    .opcode( grp_fu_238_opcode ),
    .ce( grp_fu_238_ce ),
    .dout( grp_fu_238_p2 )
);

correlation_accel_v3_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_fmul_32ns_32ns_32_4_max_dsp_U39(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_242_p0 ),
    .din1( grp_fu_242_p1 ),
    .ce( grp_fu_242_ce ),
    .dout( grp_fu_242_p2 )
);

correlation_accel_v3_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_fmul_32ns_32ns_32_4_max_dsp_U40(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_247_p0 ),
    .din1( grp_fu_247_p1 ),
    .ce( grp_fu_247_ce ),
    .dout( grp_fu_247_p2 )
);

correlation_accel_v3_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_fmul_32ns_32ns_32_4_max_dsp_U41(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_252_p0 ),
    .din1( grp_fu_252_p1 ),
    .ce( grp_fu_252_ce ),
    .dout( grp_fu_252_p2 )
);

correlation_accel_v3_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_fdiv_32ns_32ns_32_16_U42(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_256_p0 ),
    .din1( grp_fu_256_p1 ),
    .ce( grp_fu_256_ce ),
    .dout( grp_fu_256_p2 )
);

correlation_accel_v3_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_fdiv_32ns_32ns_32_16_U43(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_260_p0 ),
    .din1( grp_fu_260_p1 ),
    .ce( grp_fu_260_ce ),
    .dout( grp_fu_260_p2 )
);

correlation_accel_v3_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_sitofp_32ns_32_6_U44(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_264_p0 ),
    .ce( grp_fu_264_ce ),
    .dout( grp_fu_264_p1 )
);

correlation_accel_v3_fsqrt_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_fsqrt_32ns_32ns_32_16_U45(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_267_p0 ),
    .din1( grp_fu_267_p1 ),
    .ce( grp_fu_267_ce ),
    .dout( grp_fu_267_p2 )
);

correlation_accel_v3_fsqrt_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v3_fsqrt_32ns_32ns_32_16_U46(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_272_p0 ),
    .din1( grp_fu_272_p1 ),
    .ce( grp_fu_272_ce ),
    .dout( grp_fu_272_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_out_correlation_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_out_correlation_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_out_correlation_TREADY <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & ~(ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY))) begin
            ap_reg_ioackin_out_correlation_TREADY <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & (ap_const_logic_1 == out_correlation_TREADY))) begin
            ap_reg_ioackin_out_correlation_TREADY <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & ~(ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY))) begin
        column_index_i_reg_222 <= column_index_reg_438;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        column_index_i_reg_222 <= ap_const_lv31_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_272)) begin
        NUMBER_OF_INDICES_read_reg_366 <= NUMBER_OF_INDICES_dout;
        tmp_i_reg_372 <= tmp_i_fu_330_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        column_index_reg_438 <= column_index_fu_355_p2;
        tmp_10_reg_397 <= sum_return_in_V_dout;
        tmp_11_reg_402 <= sum_weight_returnSquare_in_V_dout;
        tmp_12_reg_407 <= sum_weight_return_in_V_dout;
        tmp_13_reg_413 <= sum_weight_returnA_returnB_in_s_dout;
        tmp_14_reg_418 <= sum_returnA_in_V_dout;
        tmp_15_reg_423 <= sum_weight_returnSquareA_in_V_dout;
        tmp_16_reg_428 <= sum_weight_returnA_in_V_dout;
        tmp_32_i_reg_433 <= tmp_32_i_fu_350_p2;
        tmp_reg_391 <= sum_weight_in_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52))) begin
        reg_277 <= grp_fu_256_p2;
        reg_285 <= grp_fu_260_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77))) begin
        reg_294 <= grp_fu_242_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        reg_301 <= grp_fu_247_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        reg_307 <= grp_fu_252_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57))) begin
        reg_312 <= grp_fu_234_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58))) begin
        reg_319 <= grp_fu_234_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        reg_324 <= grp_fu_238_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_1_i_reg_383 <= tmp_1_i_fu_336_p2;
        tmp_i_24_reg_377 <= grp_fu_264_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        tmp_25_i_reg_443 <= grp_fu_242_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        tmp_27_i_reg_448 <= grp_fu_256_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73)) begin
        volatilityA_reg_453 <= grp_fu_267_p2;
        volatilityB_reg_458 <= grp_fu_272_p2;
    end
end

/// NUMBER_OF_DAYS_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_272)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_272)) begin
        NUMBER_OF_DAYS_read = ap_const_logic_1;
    end else begin
        NUMBER_OF_DAYS_read = ap_const_logic_0;
    end
end

/// NUMBER_OF_INDICES_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_272)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_272)) begin
        NUMBER_OF_INDICES_read = ap_const_logic_1;
    end else begin
        NUMBER_OF_INDICES_read = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_113)
begin
    if (ap_sig_bdd_113) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_176)
begin
    if (ap_sig_bdd_176) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_439)
begin
    if (ap_sig_bdd_439) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_864)
begin
    if (ap_sig_bdd_864) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_872)
begin
    if (ap_sig_bdd_872) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_195)
begin
    if (ap_sig_bdd_195) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_411)
begin
    if (ap_sig_bdd_411) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_501)
begin
    if (ap_sig_bdd_501) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_446)
begin
    if (ap_sig_bdd_446) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_883)
begin
    if (ap_sig_bdd_883) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_202)
begin
    if (ap_sig_bdd_202) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_226)
begin
    if (ap_sig_bdd_226) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_418)
begin
    if (ap_sig_bdd_418) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_894)
begin
    if (ap_sig_bdd_894) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_902)
begin
    if (ap_sig_bdd_902) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_250)
begin
    if (ap_sig_bdd_250) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_233)
begin
    if (ap_sig_bdd_233) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_482)
begin
    if (ap_sig_bdd_482) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_829)
begin
    if (ap_sig_bdd_829) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_837)
begin
    if (ap_sig_bdd_837) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_453)
begin
    if (ap_sig_bdd_453) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st53_fsm_52 assign process. ///
always @ (ap_sig_bdd_183)
begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_53 assign process. ///
always @ (ap_sig_bdd_353)
begin
    if (ap_sig_bdd_353) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_54 assign process. ///
always @ (ap_sig_bdd_425)
begin
    if (ap_sig_bdd_425) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_55 assign process. ///
always @ (ap_sig_bdd_912)
begin
    if (ap_sig_bdd_912) begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_56 assign process. ///
always @ (ap_sig_bdd_920)
begin
    if (ap_sig_bdd_920) begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_57 assign process. ///
always @ (ap_sig_bdd_241)
begin
    if (ap_sig_bdd_241) begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st59_fsm_58 assign process. ///
always @ (ap_sig_bdd_257)
begin
    if (ap_sig_bdd_257) begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_845)
begin
    if (ap_sig_bdd_845) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_59 assign process. ///
always @ (ap_sig_bdd_930)
begin
    if (ap_sig_bdd_930) begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_60 assign process. ///
always @ (ap_sig_bdd_938)
begin
    if (ap_sig_bdd_938) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st62_fsm_61 assign process. ///
always @ (ap_sig_bdd_946)
begin
    if (ap_sig_bdd_946) begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_62 assign process. ///
always @ (ap_sig_bdd_954)
begin
    if (ap_sig_bdd_954) begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_63 assign process. ///
always @ (ap_sig_bdd_962)
begin
    if (ap_sig_bdd_962) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_64 assign process. ///
always @ (ap_sig_bdd_970)
begin
    if (ap_sig_bdd_970) begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st66_fsm_65 assign process. ///
always @ (ap_sig_bdd_978)
begin
    if (ap_sig_bdd_978) begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st67_fsm_66 assign process. ///
always @ (ap_sig_bdd_986)
begin
    if (ap_sig_bdd_986) begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st68_fsm_67 assign process. ///
always @ (ap_sig_bdd_994)
begin
    if (ap_sig_bdd_994) begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_68 assign process. ///
always @ (ap_sig_bdd_1002)
begin
    if (ap_sig_bdd_1002) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_853)
begin
    if (ap_sig_bdd_853) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_1010)
begin
    if (ap_sig_bdd_1010) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_70 assign process. ///
always @ (ap_sig_bdd_1018)
begin
    if (ap_sig_bdd_1018) begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st72_fsm_71 assign process. ///
always @ (ap_sig_bdd_1026)
begin
    if (ap_sig_bdd_1026) begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st73_fsm_72 assign process. ///
always @ (ap_sig_bdd_1034)
begin
    if (ap_sig_bdd_1034) begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_73 assign process. ///
always @ (ap_sig_bdd_362)
begin
    if (ap_sig_bdd_362) begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st75_fsm_74 assign process. ///
always @ (ap_sig_bdd_461)
begin
    if (ap_sig_bdd_461) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st76_fsm_75 assign process. ///
always @ (ap_sig_bdd_1044)
begin
    if (ap_sig_bdd_1044) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_1052)
begin
    if (ap_sig_bdd_1052) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_77 assign process. ///
always @ (ap_sig_bdd_211)
begin
    if (ap_sig_bdd_211) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st79_fsm_78 assign process. ///
always @ (ap_sig_bdd_489)
begin
    if (ap_sig_bdd_489) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_284)
begin
    if (ap_sig_bdd_284) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_295)
begin
    if (ap_sig_bdd_295) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st94_fsm_93 assign process. ///
always @ (ap_sig_bdd_374)
begin
    if (ap_sig_bdd_374) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_475)
begin
    if (ap_sig_bdd_475) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_out_correlation_TREADY assign process. ///
always @ (out_correlation_TREADY or ap_reg_ioackin_out_correlation_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_out_correlation_TREADY)) begin
        ap_sig_ioackin_out_correlation_TREADY = out_correlation_TREADY;
    end else begin
        ap_sig_ioackin_out_correlation_TREADY = ap_const_logic_1;
    end
end

/// grp_fu_234_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_234_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        grp_fu_234_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_234_opcode = 'bx;
    end
end

/// grp_fu_234_p0 assign process. ///
always @ (reg_277 or reg_312 or ap_sig_cseq_ST_st33_fsm_32 or tmp_13_reg_413 or tmp_15_reg_423 or tmp_27_i_reg_448 or ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        grp_fu_234_p0 = tmp_27_i_reg_448;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_234_p0 = reg_277;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_234_p0 = reg_312;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_234_p0 = tmp_15_reg_423;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_234_p0 = tmp_13_reg_413;
    end else begin
        grp_fu_234_p0 = 'bx;
    end
end

/// grp_fu_234_p1 assign process. ///
always @ (reg_294 or reg_307 or ap_sig_cseq_ST_st33_fsm_32 or tmp_25_i_reg_443 or ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_234_p1 = tmp_25_i_reg_443;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53))) begin
        grp_fu_234_p1 = reg_294;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        grp_fu_234_p1 = reg_307;
    end else begin
        grp_fu_234_p1 = 'bx;
    end
end

/// grp_fu_238_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st54_fsm_53)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_238_opcode = ap_const_lv2_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_238_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_238_opcode = 'bx;
    end
end

/// grp_fu_238_p0 assign process. ///
always @ (reg_285 or ap_sig_cseq_ST_st33_fsm_32 or tmp_11_reg_402 or ap_sig_cseq_ST_st54_fsm_53)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_238_p0 = reg_285;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_238_p0 = tmp_11_reg_402;
    end else begin
        grp_fu_238_p0 = 'bx;
    end
end

/// grp_fu_242_p0 assign process. ///
always @ (reg_277 or reg_285 or reg_294 or volatilityA_reg_453 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        grp_fu_242_p0 = volatilityA_reg_453;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        grp_fu_242_p0 = reg_285;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_242_p0 = reg_294;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49))) begin
        grp_fu_242_p0 = reg_277;
    end else begin
        grp_fu_242_p0 = 'bx;
    end
end

/// grp_fu_242_p1 assign process. ///
always @ (reg_277 or tmp_16_reg_428 or volatilityB_reg_458 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        grp_fu_242_p1 = volatilityB_reg_458;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_242_p1 = reg_277;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29))) begin
        grp_fu_242_p1 = tmp_16_reg_428;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_242_p1 = ap_const_lv32_40000000;
    end else begin
        grp_fu_242_p1 = 'bx;
    end
end

/// grp_fu_247_p0 assign process. ///
always @ (reg_285 or reg_301 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_247_p0 = reg_301;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49))) begin
        grp_fu_247_p0 = reg_285;
    end else begin
        grp_fu_247_p0 = 'bx;
    end
end

/// grp_fu_247_p1 assign process. ///
always @ (reg_285 or tmp_12_reg_407 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_247_p1 = reg_285;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_247_p1 = tmp_12_reg_407;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_247_p1 = ap_const_lv32_40000000;
    end else begin
        grp_fu_247_p1 = 'bx;
    end
end

/// grp_fu_252_p1 assign process. ///
always @ (reg_285 or tmp_12_reg_407 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_252_p1 = reg_285;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_252_p1 = tmp_12_reg_407;
    end else begin
        grp_fu_252_p1 = 'bx;
    end
end

/// grp_fu_256_ce assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st78_fsm_77 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st58_fsm_57 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st59_fsm_58 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st74_fsm_73 or ap_sig_cseq_ST_st94_fsm_93 or ap_sig_ioackin_out_correlation_TREADY or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st75_fsm_74 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st36_fsm_35 or ap_sig_cseq_ST_st56_fsm_55 or ap_sig_cseq_ST_st57_fsm_56 or ap_sig_cseq_ST_st60_fsm_59 or ap_sig_cseq_ST_st61_fsm_60 or ap_sig_cseq_ST_st62_fsm_61 or ap_sig_cseq_ST_st63_fsm_62 or ap_sig_cseq_ST_st64_fsm_63 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st66_fsm_65 or ap_sig_cseq_ST_st67_fsm_66 or ap_sig_cseq_ST_st68_fsm_67 or ap_sig_cseq_ST_st69_fsm_68 or ap_sig_cseq_ST_st70_fsm_69 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st76_fsm_75 or ap_sig_cseq_ST_st77_fsm_76)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | ((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & (ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) | (ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63) | (ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64) | (ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65) | (ap_const_logic_1 == ap_sig_cseq_ST_st67_fsm_66) | (ap_const_logic_1 == ap_sig_cseq_ST_st68_fsm_67) | (ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68) | (ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76))) begin
        grp_fu_256_ce = ap_const_logic_0;
    end else begin
        grp_fu_256_ce = ap_const_logic_1;
    end
end

/// grp_fu_256_p0 assign process. ///
always @ (reg_312 or ap_sig_cseq_ST_st38_fsm_37 or reg_319 or tmp_14_reg_418 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st39_fsm_38 or ap_sig_cseq_ST_st79_fsm_78)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        grp_fu_256_p0 = reg_312;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78))) begin
        grp_fu_256_p0 = reg_319;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_256_p0 = tmp_14_reg_418;
    end else begin
        grp_fu_256_p0 = 'bx;
    end
end

/// grp_fu_256_p1 assign process. ///
always @ (reg_294 or ap_sig_cseq_ST_st38_fsm_37 or tmp_i_24_reg_377 or tmp_reg_391 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st39_fsm_38 or ap_sig_cseq_ST_st79_fsm_78)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        grp_fu_256_p1 = reg_294;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        grp_fu_256_p1 = tmp_reg_391;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_256_p1 = tmp_i_24_reg_377;
    end else begin
        grp_fu_256_p1 = 'bx;
    end
end

/// grp_fu_260_p0 assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or reg_324 or tmp_10_reg_397 or ap_sig_cseq_ST_st9_fsm_8)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_260_p0 = reg_324;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_260_p0 = tmp_10_reg_397;
    end else begin
        grp_fu_260_p0 = 'bx;
    end
end

/// grp_fu_260_p1 assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or tmp_i_24_reg_377 or tmp_reg_391 or ap_sig_cseq_ST_st9_fsm_8)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_260_p1 = tmp_reg_391;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_260_p1 = tmp_i_24_reg_377;
    end else begin
        grp_fu_260_p1 = 'bx;
    end
end

/// out_correlation_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st94_fsm_93 or ap_reg_ioackin_out_correlation_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & (ap_const_logic_0 == ap_reg_ioackin_out_correlation_TREADY))) begin
        out_correlation_TVALID = ap_const_logic_1;
    end else begin
        out_correlation_TVALID = ap_const_logic_0;
    end
end

/// sum_returnA_in_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_returnA_in_V_read = ap_const_logic_1;
    end else begin
        sum_returnA_in_V_read = ap_const_logic_0;
    end
end

/// sum_return_in_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_return_in_V_read = ap_const_logic_1;
    end else begin
        sum_return_in_V_read = ap_const_logic_0;
    end
end

/// sum_weight_in_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_weight_in_V_read = ap_const_logic_1;
    end else begin
        sum_weight_in_V_read = ap_const_logic_0;
    end
end

/// sum_weight_returnA_in_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_weight_returnA_in_V_read = ap_const_logic_1;
    end else begin
        sum_weight_returnA_in_V_read = ap_const_logic_0;
    end
end

/// sum_weight_returnA_returnB_in_s_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_weight_returnA_returnB_in_s_read = ap_const_logic_1;
    end else begin
        sum_weight_returnA_returnB_in_s_read = ap_const_logic_0;
    end
end

/// sum_weight_returnSquareA_in_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_weight_returnSquareA_in_V_read = ap_const_logic_1;
    end else begin
        sum_weight_returnSquareA_in_V_read = ap_const_logic_0;
    end
end

/// sum_weight_returnSquare_in_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_weight_returnSquare_in_V_read = ap_const_logic_1;
    end else begin
        sum_weight_returnSquare_in_V_read = ap_const_logic_0;
    end
end

/// sum_weight_return_in_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
        sum_weight_return_in_V_read = ap_const_logic_1;
    end else begin
        sum_weight_return_in_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_272 or tmp_2_i_fu_345_p2 or ap_sig_bdd_324 or ap_sig_ioackin_out_correlation_TREADY)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_272) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (((tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if ((~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & ~ap_sig_bdd_324)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st94_fsm_93;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_1002 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1002 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_1010 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1010 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_1018 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1018 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_1026 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1026 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_1034 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1034 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_1044 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1044 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_1052 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1052 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_113 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_113 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_176 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_176 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_183 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_195 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_195 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_202 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_202 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_211 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_211 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_226 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_226 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_233 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_233 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_241 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_241 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_250 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_250 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_257 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_257 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_272 assign process. ///
always @ (ap_start or ap_done_reg or NUMBER_OF_DAYS_empty_n or NUMBER_OF_INDICES_empty_n)
begin
    ap_sig_bdd_272 = ((NUMBER_OF_INDICES_empty_n == ap_const_logic_0) | (NUMBER_OF_DAYS_empty_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_284 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_284 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_295 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_295 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_324 assign process. ///
always @ (sum_weight_in_V_empty_n or sum_return_in_V_empty_n or sum_weight_returnSquare_in_V_empty_n or sum_weight_return_in_V_empty_n or sum_weight_returnA_returnB_in_s_empty_n or sum_returnA_in_V_empty_n or sum_weight_returnSquareA_in_V_empty_n or sum_weight_returnA_in_V_empty_n or tmp_2_i_fu_345_p2)
begin
    ap_sig_bdd_324 = (((sum_weight_in_V_empty_n == ap_const_logic_0) & ~(tmp_2_i_fu_345_p2 == ap_const_lv1_0)) | (~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & (sum_return_in_V_empty_n == ap_const_logic_0)) | (~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & (sum_weight_returnSquare_in_V_empty_n == ap_const_logic_0)) | (~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & (sum_weight_return_in_V_empty_n == ap_const_logic_0)) | (~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & (sum_weight_returnA_returnB_in_s_empty_n == ap_const_logic_0)) | (~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & (sum_returnA_in_V_empty_n == ap_const_logic_0)) | (~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & (sum_weight_returnSquareA_in_V_empty_n == ap_const_logic_0)) | (~(tmp_2_i_fu_345_p2 == ap_const_lv1_0) & (sum_weight_returnA_in_V_empty_n == ap_const_logic_0)));
end

/// ap_sig_bdd_353 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_353 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_362 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_362 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_374 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_374 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_411 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_411 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_418 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_418 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_425 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_425 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_439 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_439 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_446 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_446 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_453 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_453 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_461 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_461 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_475 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_475 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_482 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_482 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_489 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_489 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_501 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_501 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_829 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_829 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_837 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_837 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_845 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_845 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_853 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_853 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_864 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_864 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_872 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_872 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_883 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_883 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_894 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_894 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_902 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_902 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_912 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_912 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_920 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_920 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_930 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_930 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_938 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_938 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_946 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_946 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_954 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_954 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_962 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_962 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_970 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_970 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_978 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_978 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_986 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_986 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_994 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_994 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end
assign column_index_cast_i_fu_341_p1 = column_index_i_reg_222;
assign column_index_fu_355_p2 = (column_index_i_reg_222 + ap_const_lv31_1);
assign grp_fu_234_ce = ap_const_logic_1;
assign grp_fu_238_ce = ap_const_logic_1;
assign grp_fu_238_p1 = reg_301;
assign grp_fu_242_ce = ap_const_logic_1;
assign grp_fu_247_ce = ap_const_logic_1;
assign grp_fu_252_ce = ap_const_logic_1;
assign grp_fu_252_p0 = reg_277;
assign grp_fu_260_ce = ap_const_logic_1;
assign grp_fu_264_ce = ap_const_logic_1;
assign grp_fu_264_p0 = tmp_i_reg_372;
assign grp_fu_267_ce = ap_const_logic_1;
assign grp_fu_267_p0 = ap_const_lv32_0;
assign grp_fu_267_p1 = reg_312;
assign grp_fu_272_ce = ap_const_logic_1;
assign grp_fu_272_p0 = ap_const_lv32_0;
assign grp_fu_272_p1 = reg_324;
assign out_correlation_TDATA = grp_fu_256_p2;
assign out_correlation_TDEST = ap_const_lv1_0;
assign out_correlation_TID = ap_const_lv1_0;
assign out_correlation_TKEEP = ap_const_lv4_F;
assign out_correlation_TLAST = tmp_32_i_reg_433;
assign out_correlation_TSTRB = ap_const_lv4_1;
assign out_correlation_TUSER = ap_const_lv1_0;
assign tmp_1_i_fu_336_p2 = ($signed(NUMBER_OF_INDICES_read_reg_366) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_2_i_fu_345_p2 = ($signed(column_index_cast_i_fu_341_p1) < $signed(NUMBER_OF_INDICES_read_reg_366)? 1'b1: 1'b0);
assign tmp_32_i_fu_350_p2 = (column_index_cast_i_fu_341_p1 == tmp_1_i_reg_383? 1'b1: 1'b0);
assign tmp_i_fu_330_p2 = ($signed(NUMBER_OF_DAYS_dout) + $signed(ap_const_lv32_FFFFFFFF));


endmodule //correlation_accel_v3_backEnd

