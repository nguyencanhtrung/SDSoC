// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="correlation_accel_v1,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.950000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.338000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=37,HLS_SYN_FF=12711,HLS_SYN_LUT=13142}" *)

module correlation_accel_v1 (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem32_AWVALID,
        m_axi_gmem32_AWREADY,
        m_axi_gmem32_AWADDR,
        m_axi_gmem32_AWID,
        m_axi_gmem32_AWLEN,
        m_axi_gmem32_AWSIZE,
        m_axi_gmem32_AWBURST,
        m_axi_gmem32_AWLOCK,
        m_axi_gmem32_AWCACHE,
        m_axi_gmem32_AWPROT,
        m_axi_gmem32_AWQOS,
        m_axi_gmem32_AWREGION,
        m_axi_gmem32_AWUSER,
        m_axi_gmem32_WVALID,
        m_axi_gmem32_WREADY,
        m_axi_gmem32_WDATA,
        m_axi_gmem32_WSTRB,
        m_axi_gmem32_WLAST,
        m_axi_gmem32_WID,
        m_axi_gmem32_WUSER,
        m_axi_gmem32_ARVALID,
        m_axi_gmem32_ARREADY,
        m_axi_gmem32_ARADDR,
        m_axi_gmem32_ARID,
        m_axi_gmem32_ARLEN,
        m_axi_gmem32_ARSIZE,
        m_axi_gmem32_ARBURST,
        m_axi_gmem32_ARLOCK,
        m_axi_gmem32_ARCACHE,
        m_axi_gmem32_ARPROT,
        m_axi_gmem32_ARQOS,
        m_axi_gmem32_ARREGION,
        m_axi_gmem32_ARUSER,
        m_axi_gmem32_RVALID,
        m_axi_gmem32_RREADY,
        m_axi_gmem32_RDATA,
        m_axi_gmem32_RLAST,
        m_axi_gmem32_RID,
        m_axi_gmem32_RUSER,
        m_axi_gmem32_RRESP,
        m_axi_gmem32_BVALID,
        m_axi_gmem32_BREADY,
        m_axi_gmem32_BRESP,
        m_axi_gmem32_BID,
        m_axi_gmem32_BUSER,
        number_of_days,
        number_of_indices,
        in_indices,
        out_correlation,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 222'b1;
parameter    ap_ST_st2_fsm_1 = 222'b10;
parameter    ap_ST_st3_fsm_2 = 222'b100;
parameter    ap_ST_st4_fsm_3 = 222'b1000;
parameter    ap_ST_st5_fsm_4 = 222'b10000;
parameter    ap_ST_st6_fsm_5 = 222'b100000;
parameter    ap_ST_st7_fsm_6 = 222'b1000000;
parameter    ap_ST_st8_fsm_7 = 222'b10000000;
parameter    ap_ST_st9_fsm_8 = 222'b100000000;
parameter    ap_ST_st10_fsm_9 = 222'b1000000000;
parameter    ap_ST_st11_fsm_10 = 222'b10000000000;
parameter    ap_ST_st12_fsm_11 = 222'b100000000000;
parameter    ap_ST_st13_fsm_12 = 222'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 222'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 222'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 222'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 222'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 222'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 222'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 222'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 222'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 222'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 222'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 222'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 222'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 222'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 222'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 222'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 222'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 222'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 222'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 222'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 222'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 222'b1000000000000000000000000000000000;
parameter    ap_ST_pp0_stg0_fsm_34 = 222'b10000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_35 = 222'b100000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_36 = 222'b1000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_37 = 222'b10000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_38 = 222'b100000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_39 = 222'b1000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_40 = 222'b10000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_41 = 222'b100000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_42 = 222'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_43 = 222'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_44 = 222'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_45 = 222'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_46 = 222'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_47 = 222'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_48 = 222'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_49 = 222'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp1_stg0_fsm_50 = 222'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_51 = 222'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_52 = 222'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_53 = 222'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp2_stg0_fsm_54 = 222'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp2_stg1_fsm_55 = 222'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_56 = 222'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_57 = 222'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg0_fsm_58 = 222'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg1_fsm_59 = 222'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg2_fsm_60 = 222'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg3_fsm_61 = 222'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg4_fsm_62 = 222'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg5_fsm_63 = 222'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg6_fsm_64 = 222'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg7_fsm_65 = 222'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg8_fsm_66 = 222'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_67 = 222'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st150_fsm_68 = 222'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st151_fsm_69 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st152_fsm_70 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st153_fsm_71 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st154_fsm_72 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st155_fsm_73 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st156_fsm_74 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st157_fsm_75 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st158_fsm_76 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st159_fsm_77 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st160_fsm_78 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st161_fsm_79 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st162_fsm_80 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st163_fsm_81 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st164_fsm_82 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st165_fsm_83 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st166_fsm_84 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st167_fsm_85 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st168_fsm_86 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st169_fsm_87 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st170_fsm_88 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st171_fsm_89 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st172_fsm_90 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st173_fsm_91 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st174_fsm_92 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st175_fsm_93 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st176_fsm_94 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st177_fsm_95 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st178_fsm_96 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st179_fsm_97 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st180_fsm_98 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st181_fsm_99 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st182_fsm_100 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st183_fsm_101 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st184_fsm_102 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st185_fsm_103 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st186_fsm_104 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st187_fsm_105 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st188_fsm_106 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st189_fsm_107 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st190_fsm_108 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st191_fsm_109 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st192_fsm_110 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st193_fsm_111 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st194_fsm_112 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st195_fsm_113 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st196_fsm_114 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st197_fsm_115 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st198_fsm_116 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st199_fsm_117 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st200_fsm_118 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st201_fsm_119 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st202_fsm_120 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st203_fsm_121 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st204_fsm_122 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st205_fsm_123 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st206_fsm_124 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st207_fsm_125 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st208_fsm_126 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st209_fsm_127 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st210_fsm_128 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st211_fsm_129 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st212_fsm_130 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st213_fsm_131 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st214_fsm_132 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st215_fsm_133 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st216_fsm_134 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st217_fsm_135 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st218_fsm_136 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st219_fsm_137 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st220_fsm_138 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st221_fsm_139 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st222_fsm_140 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st223_fsm_141 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st224_fsm_142 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st225_fsm_143 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st226_fsm_144 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st227_fsm_145 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st228_fsm_146 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st229_fsm_147 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st230_fsm_148 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st231_fsm_149 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st232_fsm_150 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st233_fsm_151 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st234_fsm_152 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st235_fsm_153 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st236_fsm_154 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st237_fsm_155 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st238_fsm_156 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st239_fsm_157 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st240_fsm_158 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st241_fsm_159 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st242_fsm_160 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st243_fsm_161 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st244_fsm_162 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st245_fsm_163 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st246_fsm_164 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st247_fsm_165 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st248_fsm_166 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st249_fsm_167 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st250_fsm_168 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st251_fsm_169 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st252_fsm_170 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st253_fsm_171 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st254_fsm_172 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st255_fsm_173 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st256_fsm_174 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st257_fsm_175 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st258_fsm_176 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st259_fsm_177 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st260_fsm_178 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st261_fsm_179 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st262_fsm_180 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st263_fsm_181 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st264_fsm_182 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st265_fsm_183 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st266_fsm_184 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st267_fsm_185 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st268_fsm_186 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st269_fsm_187 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st270_fsm_188 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st271_fsm_189 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st272_fsm_190 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st273_fsm_191 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st274_fsm_192 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st275_fsm_193 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st276_fsm_194 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st277_fsm_195 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st278_fsm_196 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st279_fsm_197 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st280_fsm_198 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st281_fsm_199 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st282_fsm_200 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st283_fsm_201 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st284_fsm_202 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st285_fsm_203 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st286_fsm_204 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st287_fsm_205 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st288_fsm_206 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st289_fsm_207 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st290_fsm_208 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st291_fsm_209 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st292_fsm_210 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st293_fsm_211 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st294_fsm_212 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st295_fsm_213 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st296_fsm_214 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st297_fsm_215 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st298_fsm_216 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st299_fsm_217 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st300_fsm_218 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st301_fsm_219 = 222'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st302_fsm_220 = 222'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st303_fsm_221 = 222'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_M_AXI_GMEM32_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM32_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM32_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_M_AXI_GMEM32_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_BUSER_WIDTH = 1;
parameter    C_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM32_USER_VALUE = 0;
parameter    C_M_AXI_GMEM32_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM32_CACHE_VALUE = 3;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv32_BB = 32'b10111011;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_6E = 32'b1101110;
parameter    ap_const_lv32_77 = 32'b1110111;
parameter    ap_const_lv32_9A = 32'b10011010;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_D9 = 32'b11011001;
parameter    ap_const_lv32_95 = 32'b10010101;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_73 = 32'b1110011;
parameter    ap_const_lv32_9E = 32'b10011110;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_B6 = 32'b10110110;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv31_2 = 31'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv32_DD = 32'b11011101;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_DA = 32'b11011010;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_66 = 32'b1100110;
parameter    ap_const_lv32_6B = 32'b1101011;
parameter    ap_const_lv32_6F = 32'b1101111;
parameter    ap_const_lv32_92 = 32'b10010010;
parameter    ap_const_lv32_96 = 32'b10010110;
parameter    ap_const_lv32_3F70A3D7 = 32'b111111011100001010001111010111;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv32_8D = 32'b10001101;
parameter    ap_const_lv32_B7 = 32'b10110111;
parameter    ap_const_lv32_74 = 32'b1110100;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_BC = 32'b10111100;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_9B = 32'b10011011;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv8_FC = 8'b11111100;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv31_6 = 31'b110;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_75 = 32'b1110101;
parameter    ap_const_lv32_76 = 32'b1110110;
parameter    ap_const_lv32_79 = 32'b1111001;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_7B = 32'b1111011;
parameter    ap_const_lv32_7C = 32'b1111100;
parameter    ap_const_lv32_7D = 32'b1111101;
parameter    ap_const_lv32_7E = 32'b1111110;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_81 = 32'b10000001;
parameter    ap_const_lv32_82 = 32'b10000010;
parameter    ap_const_lv32_83 = 32'b10000011;
parameter    ap_const_lv32_84 = 32'b10000100;
parameter    ap_const_lv32_85 = 32'b10000101;
parameter    ap_const_lv32_86 = 32'b10000110;
parameter    ap_const_lv32_87 = 32'b10000111;
parameter    ap_const_lv32_88 = 32'b10001000;
parameter    ap_const_lv32_89 = 32'b10001001;
parameter    ap_const_lv32_8A = 32'b10001010;
parameter    ap_const_lv32_8B = 32'b10001011;
parameter    ap_const_lv32_8C = 32'b10001100;
parameter    ap_const_lv32_8E = 32'b10001110;
parameter    ap_const_lv32_8F = 32'b10001111;
parameter    ap_const_lv32_90 = 32'b10010000;
parameter    ap_const_lv32_93 = 32'b10010011;
parameter    ap_const_lv32_94 = 32'b10010100;
parameter    ap_const_lv32_BD = 32'b10111101;
parameter    ap_const_lv32_BE = 32'b10111110;
parameter    ap_const_lv32_BF = 32'b10111111;
parameter    ap_const_lv32_C0 = 32'b11000000;
parameter    ap_const_lv32_C1 = 32'b11000001;
parameter    ap_const_lv32_C2 = 32'b11000010;
parameter    ap_const_lv32_C3 = 32'b11000011;
parameter    ap_const_lv32_C4 = 32'b11000100;
parameter    ap_const_lv32_C5 = 32'b11000101;
parameter    ap_const_lv32_C6 = 32'b11000110;
parameter    ap_const_lv32_C7 = 32'b11000111;
parameter    ap_const_lv32_C8 = 32'b11001000;
parameter    ap_const_lv32_C9 = 32'b11001001;
parameter    ap_const_lv32_CA = 32'b11001010;
parameter    ap_const_lv32_CB = 32'b11001011;
parameter    ap_const_lv32_CC = 32'b11001100;
parameter    ap_const_lv32_CD = 32'b11001101;
parameter    ap_const_lv32_CE = 32'b11001110;
parameter    ap_const_lv32_CF = 32'b11001111;
parameter    ap_const_lv32_D0 = 32'b11010000;
parameter    ap_const_lv32_D1 = 32'b11010001;
parameter    ap_const_lv32_D2 = 32'b11010010;
parameter    ap_const_lv32_D3 = 32'b11010011;
parameter    ap_const_lv32_D4 = 32'b11010100;
parameter    ap_const_lv32_D5 = 32'b11010101;
parameter    ap_const_lv32_D6 = 32'b11010110;
parameter    ap_const_lv32_D7 = 32'b11010111;
parameter    ap_const_lv32_D8 = 32'b11011000;
parameter    ap_true = 1'b1;
parameter    C_M_AXI_GMEM32_WSTRB_WIDTH = (C_M_AXI_GMEM32_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem32_AWVALID;
input   m_axi_gmem32_AWREADY;
output  [C_M_AXI_GMEM32_ADDR_WIDTH - 1 : 0] m_axi_gmem32_AWADDR;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_AWID;
output  [7:0] m_axi_gmem32_AWLEN;
output  [2:0] m_axi_gmem32_AWSIZE;
output  [1:0] m_axi_gmem32_AWBURST;
output  [1:0] m_axi_gmem32_AWLOCK;
output  [3:0] m_axi_gmem32_AWCACHE;
output  [2:0] m_axi_gmem32_AWPROT;
output  [3:0] m_axi_gmem32_AWQOS;
output  [3:0] m_axi_gmem32_AWREGION;
output  [C_M_AXI_GMEM32_AWUSER_WIDTH - 1 : 0] m_axi_gmem32_AWUSER;
output   m_axi_gmem32_WVALID;
input   m_axi_gmem32_WREADY;
output  [C_M_AXI_GMEM32_DATA_WIDTH - 1 : 0] m_axi_gmem32_WDATA;
output  [C_M_AXI_GMEM32_WSTRB_WIDTH - 1 : 0] m_axi_gmem32_WSTRB;
output   m_axi_gmem32_WLAST;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_WID;
output  [C_M_AXI_GMEM32_WUSER_WIDTH - 1 : 0] m_axi_gmem32_WUSER;
output   m_axi_gmem32_ARVALID;
input   m_axi_gmem32_ARREADY;
output  [C_M_AXI_GMEM32_ADDR_WIDTH - 1 : 0] m_axi_gmem32_ARADDR;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_ARID;
output  [7:0] m_axi_gmem32_ARLEN;
output  [2:0] m_axi_gmem32_ARSIZE;
output  [1:0] m_axi_gmem32_ARBURST;
output  [1:0] m_axi_gmem32_ARLOCK;
output  [3:0] m_axi_gmem32_ARCACHE;
output  [2:0] m_axi_gmem32_ARPROT;
output  [3:0] m_axi_gmem32_ARQOS;
output  [3:0] m_axi_gmem32_ARREGION;
output  [C_M_AXI_GMEM32_ARUSER_WIDTH - 1 : 0] m_axi_gmem32_ARUSER;
input   m_axi_gmem32_RVALID;
output   m_axi_gmem32_RREADY;
input  [C_M_AXI_GMEM32_DATA_WIDTH - 1 : 0] m_axi_gmem32_RDATA;
input   m_axi_gmem32_RLAST;
input  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_RID;
input  [C_M_AXI_GMEM32_RUSER_WIDTH - 1 : 0] m_axi_gmem32_RUSER;
input  [1:0] m_axi_gmem32_RRESP;
input   m_axi_gmem32_BVALID;
output   m_axi_gmem32_BREADY;
input  [1:0] m_axi_gmem32_BRESP;
input  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_BID;
input  [C_M_AXI_GMEM32_BUSER_WIDTH - 1 : 0] m_axi_gmem32_BUSER;
input  [31:0] number_of_days;
input  [31:0] number_of_indices;
input  [31:0] in_indices;
input  [31:0] out_correlation;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [221:0] ap_CS_fsm = 222'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_240;
reg   [7:0] weight_rom_address0;
reg    weight_rom_ce0;
reg    weight_rom_we0;
reg   [31:0] weight_rom_d0;
wire   [31:0] weight_rom_q0;
reg   [7:0] weight_rom_address1;
reg    weight_rom_ce1;
reg    weight_rom_we1;
reg   [31:0] weight_rom_d1;
wire   [31:0] weight_rom_q1;
reg   [7:0] bramA_address0;
reg    bramA_ce0;
reg    bramA_we0;
wire   [31:0] bramA_d0;
wire   [31:0] bramA_q0;
wire   [7:0] bramA_address1;
reg    bramA_ce1;
wire   [31:0] bramA_q1;
reg   [7:0] bramB_address0;
reg    bramB_ce0;
reg    bramB_we0;
wire   [31:0] bramB_d0;
wire   [31:0] bramB_q0;
reg    gmem32_AWVALID;
wire    gmem32_AWREADY;
wire   [31:0] gmem32_AWADDR;
wire   [0:0] gmem32_AWID;
wire   [31:0] gmem32_AWLEN;
wire   [2:0] gmem32_AWSIZE;
wire   [1:0] gmem32_AWBURST;
wire   [1:0] gmem32_AWLOCK;
wire   [3:0] gmem32_AWCACHE;
wire   [2:0] gmem32_AWPROT;
wire   [3:0] gmem32_AWQOS;
wire   [3:0] gmem32_AWREGION;
wire   [0:0] gmem32_AWUSER;
reg    gmem32_WVALID;
wire    gmem32_WREADY;
wire   [31:0] gmem32_WDATA;
wire   [3:0] gmem32_WSTRB;
wire    gmem32_WLAST;
wire   [0:0] gmem32_WID;
wire   [0:0] gmem32_WUSER;
reg    gmem32_ARVALID;
wire    gmem32_ARREADY;
reg   [31:0] gmem32_ARADDR;
wire   [0:0] gmem32_ARID;
wire   [31:0] gmem32_ARLEN;
wire   [2:0] gmem32_ARSIZE;
wire   [1:0] gmem32_ARBURST;
wire   [1:0] gmem32_ARLOCK;
wire   [3:0] gmem32_ARCACHE;
wire   [2:0] gmem32_ARPROT;
wire   [3:0] gmem32_ARQOS;
wire   [3:0] gmem32_ARREGION;
wire   [0:0] gmem32_ARUSER;
wire    gmem32_RVALID;
reg    gmem32_RREADY;
wire   [31:0] gmem32_RDATA;
wire    gmem32_RLAST;
wire   [0:0] gmem32_RID;
wire   [0:0] gmem32_RUSER;
wire   [1:0] gmem32_RRESP;
wire    gmem32_BVALID;
reg    gmem32_BREADY;
wire   [1:0] gmem32_BRESP;
wire   [0:0] gmem32_BID;
wire   [0:0] gmem32_BUSER;
wire    correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce;
reg   [29:0] indvar_reg_865;
reg   [29:0] ap_reg_ppstg_indvar_reg_865_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_34;
reg    ap_sig_bdd_427;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond4_reg_1862;
reg    ap_sig_bdd_436;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [29:0] indvar1_reg_897;
reg   [29:0] ap_reg_ppstg_indvar1_reg_897_pp1_it1;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_50;
reg    ap_sig_bdd_452;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg   [0:0] exitcond2_reg_1906;
reg    ap_sig_bdd_459;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg   [30:0] i1_reg_909;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_54;
reg    ap_sig_bdd_475;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
reg    ap_reg_ppiten_pp2_it3 = 1'b0;
reg    ap_reg_ppiten_pp2_it4 = 1'b0;
reg    ap_reg_ppiten_pp2_it5 = 1'b0;
reg    ap_reg_ppiten_pp2_it6 = 1'b0;
reg    ap_reg_ppiten_pp2_it7 = 1'b0;
reg    ap_reg_ppiten_pp2_it8 = 1'b0;
reg    ap_reg_ppiten_pp2_it9 = 1'b0;
reg    ap_reg_ppiten_pp2_it10 = 1'b0;
reg    ap_reg_ppiten_pp2_it11 = 1'b0;
reg    ap_reg_ppiten_pp2_it12 = 1'b0;
reg    ap_reg_ppiten_pp2_it13 = 1'b0;
reg    ap_reg_ppiten_pp2_it14 = 1'b0;
reg    ap_reg_ppiten_pp2_it15 = 1'b0;
reg    ap_reg_ppiten_pp2_it16 = 1'b0;
reg    ap_reg_ppiten_pp2_it17 = 1'b0;
reg    ap_reg_ppiten_pp2_it18 = 1'b0;
reg    ap_reg_ppiten_pp2_it19 = 1'b0;
reg    ap_reg_ppiten_pp2_it20 = 1'b0;
reg    ap_reg_ppiten_pp2_it21 = 1'b0;
reg    ap_reg_ppiten_pp2_it22 = 1'b0;
reg    ap_reg_ppiten_pp2_it23 = 1'b0;
reg    ap_reg_ppiten_pp2_it24 = 1'b0;
reg    ap_reg_ppiten_pp2_it25 = 1'b0;
reg    ap_reg_ppiten_pp2_it26 = 1'b0;
reg    ap_reg_ppiten_pp2_it27 = 1'b0;
reg    ap_reg_ppiten_pp2_it28 = 1'b0;
reg    ap_reg_ppiten_pp2_it29 = 1'b0;
reg    ap_reg_ppiten_pp2_it30 = 1'b0;
reg    ap_reg_ppiten_pp2_it31 = 1'b0;
reg    ap_reg_ppiten_pp2_it32 = 1'b0;
reg    ap_reg_ppiten_pp2_it33 = 1'b0;
reg    ap_reg_ppiten_pp2_it34 = 1'b0;
reg    ap_reg_ppiten_pp2_it35 = 1'b0;
reg   [31:0] sum_returnA_reg_921;
reg   [31:0] sum_returnB_reg_933;
reg   [31:0] sum_weight_returnSquareA_reg_945;
reg   [31:0] sum_weight_returnA_reg_957;
reg   [31:0] sum_weight_returnSquareB_reg_969;
reg   [31:0] sum_weight_returnB_reg_981;
reg   [31:0] sum_weight_returnA_returnB_reg_993;
reg   [2:0] i2_reg_1005;
wire   [31:0] grp_fu_1041_p2;
reg   [31:0] reg_1093;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_587;
reg   [0:0] tmp_14_reg_1915;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it26;
reg    ap_sig_cseq_ST_st183_fsm_101;
reg    ap_sig_bdd_603;
reg    ap_sig_cseq_ST_st188_fsm_106;
reg    ap_sig_bdd_611;
reg    ap_sig_cseq_ST_st227_fsm_145;
reg    ap_sig_bdd_619;
reg    ap_sig_cseq_ST_st269_fsm_187;
reg    ap_sig_bdd_627;
reg   [31:0] reg_1103;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_636;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it2;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it3;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it4;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it5;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it6;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it7;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it8;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it9;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it10;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it11;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it12;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it13;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it14;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it15;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it16;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it17;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it18;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it19;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it20;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it21;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it22;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it23;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it24;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it25;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it26;
reg   [31:0] ap_reg_ppstg_reg_1103_pp2_it27;
reg    ap_sig_cseq_ST_st131_fsm_57;
reg    ap_sig_bdd_675;
wire   [31:0] grp_fu_1017_p2;
reg   [31:0] reg_1114;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_685;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it28;
reg    ap_sig_cseq_ST_pp2_stg1_fsm_55;
reg    ap_sig_bdd_697;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it29;
reg    ap_sig_cseq_ST_st192_fsm_110;
reg    ap_sig_bdd_709;
reg    ap_sig_cseq_ST_st201_fsm_119;
reg    ap_sig_bdd_717;
reg    ap_sig_cseq_ST_st236_fsm_154;
reg    ap_sig_bdd_725;
reg   [31:0] reg_1124;
wire   [31:0] grp_fu_1065_p2;
reg   [31:0] reg_1130;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it15;
reg    ap_sig_cseq_ST_st178_fsm_96;
reg    ap_sig_bdd_753;
reg    ap_sig_cseq_ST_st299_fsm_217;
reg    ap_sig_bdd_762;
reg    ap_sig_ioackin_gmem32_AWREADY;
reg   [31:0] reg_1140;
reg    ap_sig_cseq_ST_st231_fsm_149;
reg    ap_sig_bdd_785;
wire   [31:0] acc_returnA_q0;
reg   [31:0] reg_1146;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it24;
reg    ap_sig_cseq_ST_pp3_stg1_fsm_59;
reg    ap_sig_bdd_804;
reg    ap_reg_ppiten_pp3_it0 = 1'b0;
reg    ap_reg_ppiten_pp3_it1 = 1'b0;
reg   [0:0] exitcond_reg_2060;
wire   [31:0] acc_returnB_q1;
reg   [31:0] reg_1152;
wire   [31:0] acc_returnB_q0;
reg    ap_sig_cseq_ST_pp3_stg2_fsm_60;
reg    ap_sig_bdd_828;
wire   [31:0] grp_fu_1047_p2;
reg   [31:0] reg_1159;
wire   [31:0] acc_weight_returnA_q1;
reg   [31:0] reg_1165;
wire   [31:0] acc_weight_returnA_q0;
reg    ap_sig_cseq_ST_pp3_stg4_fsm_62;
reg    ap_sig_bdd_854;
wire   [31:0] acc_weight_returnB_q0;
reg   [31:0] reg_1172;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it27;
reg    ap_sig_cseq_ST_pp3_stg6_fsm_64;
reg    ap_sig_bdd_873;
wire   [31:0] grp_fu_1051_p2;
reg   [31:0] reg_1178;
wire   [31:0] acc_weight_returnSquareA_q0;
reg   [31:0] reg_1184;
reg    ap_sig_cseq_ST_pp3_stg3_fsm_61;
reg    ap_sig_bdd_896;
reg   [31:0] reg_1190;
wire   [31:0] acc_weight_returnSquareB_q1;
reg   [31:0] reg_1196;
wire   [31:0] acc_weight_returnSquareB_q0;
reg    ap_sig_cseq_ST_pp3_stg5_fsm_63;
reg    ap_sig_bdd_921;
wire   [31:0] acc_weight_returnA_returnB_q1;
reg   [31:0] reg_1203;
wire   [31:0] acc_weight_returnA_returnB_q0;
wire   [31:0] grp_fu_1021_p2;
reg   [31:0] reg_1210;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it31;
reg    ap_sig_cseq_ST_st197_fsm_115;
reg    ap_sig_bdd_946;
wire   [31:0] grp_fu_1025_p2;
reg   [31:0] reg_1218;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it33;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it34;
wire   [31:0] grp_fu_1070_p2;
reg   [31:0] reg_1224;
reg   [31:0] reg_1233;
reg    ap_sig_cseq_ST_st240_fsm_158;
reg    ap_sig_bdd_970;
wire   [32:0] tmp_61_cast_fu_1248_p1;
reg   [32:0] tmp_61_cast_reg_1563;
wire   [32:0] tmp_62_cast_fu_1262_p1;
reg   [32:0] tmp_62_cast_reg_1568;
wire   [7:0] i_2_fu_1277_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_991;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_1000;
wire   [0:0] tmp_59_i_fu_1287_p2;
wire   [30:0] i_3_fu_1297_p2;
reg   [30:0] i_3_reg_1590;
wire  signed [31:0] tmp_1_fu_1303_p2;
reg  signed [31:0] tmp_1_reg_1595;
reg   [31:0] weight_rom_load_1_reg_1601;
wire   [31:0] tmp_fu_1308_p2;
reg   [31:0] tmp_reg_1606;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_1019;
wire   [31:0] grp_fu_1075_p1;
reg   [31:0] tmp_2_reg_1611;
wire   [29:0] tmp_6_fu_1313_p1;
reg   [29:0] tmp_6_reg_1617;
wire   [31:0] p_add_i32_shr_fu_1316_p1;
reg   [31:0] p_add_i32_shr_reg_1623;
wire   [2:0] acc_returnA_addr_gep_fu_257_p3;
reg   [2:0] acc_returnA_addr_reg_1628;
wire   [2:0] acc_returnB_addr_gep_fu_264_p3;
reg   [2:0] acc_returnB_addr_reg_1633;
wire   [2:0] acc_weight_returnSquareA_addr_gep_fu_271_p3;
reg   [2:0] acc_weight_returnSquareA_addr_reg_1638;
wire   [2:0] acc_weight_returnA_addr_gep_fu_278_p3;
reg   [2:0] acc_weight_returnA_addr_reg_1643;
wire   [2:0] acc_weight_returnSquareB_addr_gep_fu_285_p3;
reg   [2:0] acc_weight_returnSquareB_addr_reg_1648;
wire   [2:0] acc_weight_returnB_addr_gep_fu_292_p3;
reg   [2:0] acc_weight_returnB_addr_reg_1653;
wire   [2:0] acc_weight_returnA_returnB_add_gep_fu_299_p3;
reg   [2:0] acc_weight_returnA_returnB_add_reg_1658;
wire   [2:0] acc_returnA_addr_6_gep_fu_306_p3;
reg   [2:0] acc_returnA_addr_6_reg_1663;
wire   [2:0] acc_returnB_addr_6_gep_fu_313_p3;
reg   [2:0] acc_returnB_addr_6_reg_1668;
wire   [2:0] acc_weight_returnSquareA_addr_6_gep_fu_320_p3;
reg   [2:0] acc_weight_returnSquareA_addr_6_reg_1673;
wire   [2:0] acc_weight_returnA_addr_6_gep_fu_327_p3;
reg   [2:0] acc_weight_returnA_addr_6_reg_1678;
wire   [2:0] acc_weight_returnSquareB_addr_6_gep_fu_334_p3;
reg   [2:0] acc_weight_returnSquareB_addr_6_reg_1683;
wire   [2:0] acc_weight_returnB_addr_6_gep_fu_341_p3;
reg   [2:0] acc_weight_returnB_addr_6_reg_1688;
wire   [2:0] acc_weight_returnA_returnB_add_1_gep_fu_348_p3;
reg   [2:0] acc_weight_returnA_returnB_add_1_reg_1693;
wire   [2:0] acc_returnA_addr_7_gep_fu_355_p3;
reg   [2:0] acc_returnA_addr_7_reg_1698;
wire   [2:0] acc_returnB_addr_7_gep_fu_362_p3;
reg   [2:0] acc_returnB_addr_7_reg_1703;
wire   [2:0] acc_weight_returnSquareA_addr_7_gep_fu_369_p3;
reg   [2:0] acc_weight_returnSquareA_addr_7_reg_1708;
wire   [2:0] acc_weight_returnA_addr_7_gep_fu_376_p3;
reg   [2:0] acc_weight_returnA_addr_7_reg_1713;
wire   [2:0] acc_weight_returnSquareB_addr_7_gep_fu_383_p3;
reg   [2:0] acc_weight_returnSquareB_addr_7_reg_1718;
wire   [2:0] acc_weight_returnB_addr_7_gep_fu_390_p3;
reg   [2:0] acc_weight_returnB_addr_7_reg_1723;
wire   [2:0] acc_weight_returnA_returnB_add_2_gep_fu_397_p3;
reg   [2:0] acc_weight_returnA_returnB_add_2_reg_1728;
wire   [2:0] acc_returnA_addr_3_gep_fu_404_p3;
reg   [2:0] acc_returnA_addr_3_reg_1733;
wire   [2:0] acc_returnB_addr_3_gep_fu_411_p3;
reg   [2:0] acc_returnB_addr_3_reg_1738;
wire   [2:0] acc_weight_returnSquareA_addr_3_gep_fu_418_p3;
reg   [2:0] acc_weight_returnSquareA_addr_3_reg_1743;
wire   [2:0] acc_weight_returnA_addr_3_gep_fu_425_p3;
reg   [2:0] acc_weight_returnA_addr_3_reg_1748;
wire   [2:0] acc_weight_returnSquareB_addr_3_gep_fu_432_p3;
reg   [2:0] acc_weight_returnSquareB_addr_3_reg_1753;
wire   [2:0] acc_weight_returnB_addr_3_gep_fu_439_p3;
reg   [2:0] acc_weight_returnB_addr_3_reg_1758;
wire   [2:0] acc_weight_returnA_returnB_add_3_gep_fu_446_p3;
reg   [2:0] acc_weight_returnA_returnB_add_3_reg_1763;
wire   [2:0] acc_returnA_addr_4_gep_fu_453_p3;
reg   [2:0] acc_returnA_addr_4_reg_1768;
wire   [2:0] acc_returnB_addr_4_gep_fu_460_p3;
reg   [2:0] acc_returnB_addr_4_reg_1773;
wire   [2:0] acc_weight_returnSquareA_addr_4_gep_fu_467_p3;
reg   [2:0] acc_weight_returnSquareA_addr_4_reg_1778;
wire   [2:0] acc_weight_returnA_addr_4_gep_fu_474_p3;
reg   [2:0] acc_weight_returnA_addr_4_reg_1783;
wire   [2:0] acc_weight_returnSquareB_addr_4_gep_fu_481_p3;
reg   [2:0] acc_weight_returnSquareB_addr_4_reg_1788;
wire   [2:0] acc_weight_returnB_addr_4_gep_fu_488_p3;
reg   [2:0] acc_weight_returnB_addr_4_reg_1793;
wire   [2:0] acc_weight_returnA_returnB_add_4_gep_fu_495_p3;
reg   [2:0] acc_weight_returnA_returnB_add_4_reg_1798;
wire   [2:0] acc_returnA_addr_5_gep_fu_502_p3;
reg   [2:0] acc_returnA_addr_5_reg_1803;
wire   [2:0] acc_returnB_addr_5_gep_fu_509_p3;
reg   [2:0] acc_returnB_addr_5_reg_1808;
wire   [2:0] acc_weight_returnSquareA_addr_5_gep_fu_516_p3;
reg   [2:0] acc_weight_returnSquareA_addr_5_reg_1813;
wire   [2:0] acc_weight_returnA_addr_5_gep_fu_523_p3;
reg   [2:0] acc_weight_returnA_addr_5_reg_1818;
wire   [2:0] acc_weight_returnSquareB_addr_5_gep_fu_530_p3;
reg   [2:0] acc_weight_returnSquareB_addr_5_reg_1823;
wire   [2:0] acc_weight_returnB_addr_5_gep_fu_537_p3;
reg   [2:0] acc_weight_returnB_addr_5_reg_1828;
wire   [2:0] acc_weight_returnA_returnB_add_5_gep_fu_544_p3;
reg   [2:0] acc_weight_returnA_returnB_add_5_reg_1833;
wire  signed [31:0] next_mul_fu_1320_p2;
reg  signed [31:0] next_mul_reg_1838;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_1118;
wire   [31:0] row_index_cast_fu_1325_p1;
reg   [31:0] row_index_cast_reg_1843;
wire   [30:0] row_index_1_fu_1334_p2;
reg   [30:0] row_index_1_reg_1851;
reg   [31:0] gmem32_addr_reg_1856;
wire   [0:0] tmp_4_fu_1329_p2;
wire   [0:0] exitcond4_fu_1359_p2;
reg   [0:0] ap_reg_ppstg_exitcond4_reg_1862_pp0_it1;
wire   [29:0] indvar_next_fu_1364_p2;
reg   [29:0] indvar_next_reg_1866;
wire   [31:0] smax_fu_1380_p3;
reg   [31:0] smax_reg_1871;
reg    ap_sig_cseq_ST_st38_fsm_35;
reg    ap_sig_bdd_1144;
wire   [31:0] counter_2_fu_1392_p2;
reg   [31:0] counter_2_reg_1876;
reg    ap_sig_cseq_ST_st39_fsm_36;
reg    ap_sig_bdd_1153;
wire  signed [31:0] column_index_fu_1398_p2;
reg  signed [31:0] column_index_reg_1881;
reg    ap_sig_cseq_ST_st40_fsm_37;
reg    ap_sig_bdd_1162;
wire   [31:0] indvars_iv_next_fu_1414_p2;
wire   [0:0] tmp_8_fu_1404_p2;
wire   [31:0] indvars_iv_next3_fu_1420_p2;
reg   [31:0] gmem32_addr_1_reg_1900;
reg    ap_sig_cseq_ST_st46_fsm_43;
reg    ap_sig_bdd_1178;
wire   [0:0] exitcond2_fu_1445_p2;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_1906_pp1_it1;
wire   [29:0] indvar_next1_fu_1450_p2;
reg   [29:0] indvar_next1_reg_1910;
wire   [0:0] tmp_14_fu_1465_p2;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it1;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it2;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it3;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it4;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it5;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it6;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it7;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it8;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it9;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it10;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it11;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it12;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it13;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it14;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it16;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it17;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it18;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it19;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it20;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it21;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it22;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it23;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it25;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it30;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_1915_pp2_it32;
wire   [30:0] i_fu_1470_p2;
reg   [30:0] i_reg_1919;
wire   [63:0] tmp_16_fu_1482_p1;
reg   [63:0] tmp_16_reg_1929;
reg   [31:0] bramA_load_reg_1945;
reg   [31:0] bramA_load_1_reg_1950;
reg   [31:0] bramB_load_reg_1955;
reg   [31:0] bramB_load_1_reg_1970;
reg   [2:0] acc_returnA_addr_1_reg_1975;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it29;
reg   [2:0] acc_returnB_addr_1_reg_1981;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it29;
reg   [2:0] acc_weight_returnSquareA_addr_1_reg_1987;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it32;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it33;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it34;
reg   [2:0] acc_weight_returnSquareB_addr_1_reg_1993;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it32;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it33;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it34;
reg   [2:0] acc_weight_returnA_addr_1_reg_1999;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it31;
reg   [2:0] acc_weight_returnB_addr_1_reg_2005;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it32;
reg   [2:0] acc_weight_returnA_returnB_add_6_reg_2011;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it32;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it33;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it34;
wire   [31:0] grp_fu_1088_p2;
reg   [31:0] lnReturnA_reg_2017;
reg   [31:0] lnReturnB_reg_2026;
reg   [31:0] tmp_26_reg_2035;
reg   [31:0] tmp_31_reg_2040;
wire   [31:0] grp_fu_1055_p2;
reg   [31:0] tmp_24_reg_2045;
reg   [31:0] tmp_34_reg_2050;
wire   [31:0] grp_fu_1029_p2;
reg   [31:0] tmp_35_reg_2055;
wire   [0:0] exitcond_fu_1504_p2;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_58;
reg    ap_sig_bdd_1470;
reg   [0:0] ap_reg_ppstg_exitcond_reg_2060_pp3_it1;
wire   [2:0] i_1_fu_1510_p2;
reg   [2:0] i_1_reg_2064;
wire   [63:0] tmp_57_fu_1516_p1;
reg   [63:0] tmp_57_reg_2069;
reg   [31:0] sum_returnA_1_reg_2114;
reg   [31:0] sum_returnB_1_reg_2119;
reg   [31:0] sum_weight_returnSquareA_1_reg_2124;
reg   [31:0] sum_weight_returnA_1_reg_2129;
reg   [31:0] sum_weight_returnSquareB_1_reg_2134;
reg   [31:0] sum_weight_returnB_1_reg_2139;
reg    ap_sig_cseq_ST_pp3_stg7_fsm_65;
reg    ap_sig_bdd_1520;
reg   [31:0] gmem32_addr_2_reg_2149;
reg    ap_sig_cseq_ST_st149_fsm_67;
reg    ap_sig_bdd_1531;
wire   [31:0] tmp_56_fu_1540_p2;
reg   [31:0] tmp_56_reg_2154;
wire   [31:0] grp_fu_1078_p2;
reg   [31:0] volatilityA_reg_2159;
reg    ap_sig_cseq_ST_st264_fsm_182;
reg    ap_sig_bdd_1542;
wire   [31:0] grp_fu_1083_p2;
reg   [31:0] volatilityB_reg_2164;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_1551;
reg    ap_sig_cseq_ST_st52_fsm_49;
reg    ap_sig_bdd_1563;
reg    ap_sig_cseq_ST_st58_fsm_53;
reg    ap_sig_bdd_1575;
reg    ap_sig_cseq_ST_pp3_stg8_fsm_66;
reg    ap_sig_bdd_1587;
reg   [2:0] acc_returnA_address0;
reg    acc_returnA_ce0;
reg    acc_returnA_we0;
wire   [31:0] acc_returnA_d0;
reg   [2:0] acc_returnA_address1;
reg    acc_returnA_ce1;
reg    acc_returnA_we1;
reg   [31:0] acc_returnA_d1;
reg   [2:0] acc_returnB_address0;
reg    acc_returnB_ce0;
reg    acc_returnB_we0;
reg   [31:0] acc_returnB_d0;
reg   [2:0] acc_returnB_address1;
reg    acc_returnB_ce1;
reg    acc_returnB_we1;
wire   [31:0] acc_returnB_d1;
reg   [2:0] acc_weight_returnSquareA_address0;
reg    acc_weight_returnSquareA_ce0;
reg    acc_weight_returnSquareA_we0;
wire   [31:0] acc_weight_returnSquareA_d0;
reg   [2:0] acc_weight_returnSquareA_address1;
reg    acc_weight_returnSquareA_ce1;
reg    acc_weight_returnSquareA_we1;
reg   [31:0] acc_weight_returnSquareA_d1;
reg   [2:0] acc_weight_returnA_address0;
reg    acc_weight_returnA_ce0;
reg    acc_weight_returnA_we0;
reg   [31:0] acc_weight_returnA_d0;
reg   [2:0] acc_weight_returnA_address1;
reg    acc_weight_returnA_ce1;
reg    acc_weight_returnA_we1;
wire   [31:0] acc_weight_returnA_d1;
reg   [2:0] acc_weight_returnSquareB_address0;
reg    acc_weight_returnSquareB_ce0;
reg    acc_weight_returnSquareB_we0;
reg   [31:0] acc_weight_returnSquareB_d0;
reg   [2:0] acc_weight_returnSquareB_address1;
reg    acc_weight_returnSquareB_ce1;
reg    acc_weight_returnSquareB_we1;
wire   [31:0] acc_weight_returnSquareB_d1;
reg   [2:0] acc_weight_returnB_address0;
reg    acc_weight_returnB_ce0;
reg    acc_weight_returnB_we0;
wire   [31:0] acc_weight_returnB_d0;
reg   [2:0] acc_weight_returnB_address1;
reg    acc_weight_returnB_ce1;
reg    acc_weight_returnB_we1;
reg   [31:0] acc_weight_returnB_d1;
reg   [2:0] acc_weight_returnA_returnB_address0;
reg    acc_weight_returnA_returnB_ce0;
reg    acc_weight_returnA_returnB_we0;
reg   [31:0] acc_weight_returnA_returnB_d0;
reg   [2:0] acc_weight_returnA_returnB_address1;
reg    acc_weight_returnA_returnB_ce1;
reg    acc_weight_returnA_returnB_we1;
wire   [31:0] acc_weight_returnA_returnB_d1;
reg   [31:0] tmp_i_reg_772;
reg   [7:0] i_i_reg_784;
reg   [30:0] i1_i_reg_796;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_1692;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_1700;
wire   [0:0] exitcond_i_fu_1266_p2;
reg   [31:0] indvars_iv2_reg_807;
reg   [31:0] indvars_iv_reg_819;
reg   [30:0] row_index_reg_831;
reg   [31:0] counter_reg_842;
reg   [31:0] phi_mul_reg_854;
reg   [29:0] indvar_phi_fu_869_p4;
reg   [31:0] column_index_0_in_reg_877;
reg    ap_sig_cseq_ST_st303_fsm_221;
reg    ap_sig_bdd_1731;
reg   [31:0] counter_1_reg_886;
reg   [29:0] indvar1_phi_fu_901_p4;
reg   [30:0] i1_phi_fu_913_p4;
reg   [31:0] sum_returnA_phi_fu_925_p4;
reg   [31:0] sum_returnB_phi_fu_937_p4;
reg   [31:0] sum_weight_returnSquareA_phi_fu_949_p4;
reg   [31:0] sum_weight_returnA_phi_fu_961_p4;
reg   [31:0] sum_weight_returnSquareB_phi_fu_973_p4;
reg   [31:0] sum_weight_returnB_phi_fu_985_p4;
wire   [31:0] sum_weight_returnA_returnB_phi_fu_997_p4;
reg   [2:0] i2_phi_fu_1009_p4;
wire   [63:0] tmp_58_i_fu_1272_p1;
wire   [63:0] tmp_60_i_fu_1292_p1;
wire   [63:0] tmp_s_fu_1370_p1;
wire   [63:0] tmp_12_fu_1456_p1;
wire   [63:0] tmp_15_fu_1476_p1;
wire   [63:0] tmp_20_fu_1493_p1;
wire  signed [63:0] tmp_55_fu_1349_p1;
wire  signed [63:0] tmp_64_fu_1435_p1;
wire  signed [63:0] out_correlation4_sum_cast_fu_1530_p1;
reg    ap_reg_ioackin_gmem32_ARREADY = 1'b0;
reg    ap_sig_ioackin_gmem32_ARREADY;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_1803;
reg    ap_sig_cseq_ST_st47_fsm_44;
reg    ap_sig_bdd_1819;
reg    ap_reg_ioackin_gmem32_AWREADY = 1'b0;
reg    ap_reg_ioackin_gmem32_WREADY = 1'b0;
reg    ap_sig_ioackin_gmem32_WREADY;
reg    ap_sig_cseq_ST_st300_fsm_218;
reg    ap_sig_bdd_1841;
reg    ap_sig_cseq_ST_st130_fsm_56;
reg    ap_sig_bdd_1866;
reg    ap_sig_cseq_ST_st56_fsm_51;
reg    ap_sig_bdd_1887;
reg    ap_sig_cseq_ST_st57_fsm_52;
reg    ap_sig_bdd_1894;
reg   [31:0] grp_fu_1017_p0;
reg   [31:0] grp_fu_1017_p1;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_1969;
reg    ap_sig_cseq_ST_st184_fsm_102;
reg    ap_sig_bdd_1981;
reg    ap_sig_cseq_ST_st189_fsm_107;
reg    ap_sig_bdd_1988;
reg    ap_sig_cseq_ST_st193_fsm_111;
reg    ap_sig_bdd_1995;
reg    ap_sig_cseq_ST_st228_fsm_146;
reg    ap_sig_bdd_2002;
reg    ap_sig_cseq_ST_st232_fsm_150;
reg    ap_sig_bdd_2009;
reg   [31:0] grp_fu_1021_p0;
reg   [31:0] grp_fu_1021_p1;
reg   [31:0] grp_fu_1025_p0;
reg   [31:0] grp_fu_1025_p1;
wire   [31:0] grp_fu_1029_p0;
wire   [31:0] grp_fu_1029_p1;
reg   [31:0] grp_fu_1041_p0;
reg   [31:0] grp_fu_1041_p1;
reg    ap_sig_cseq_ST_st179_fsm_97;
reg    ap_sig_bdd_2033;
reg    ap_sig_cseq_ST_st223_fsm_141;
reg    ap_sig_bdd_2040;
reg    ap_sig_cseq_ST_st265_fsm_183;
reg    ap_sig_bdd_2048;
reg   [31:0] grp_fu_1047_p0;
reg   [31:0] grp_fu_1047_p1;
reg   [31:0] grp_fu_1051_p0;
reg   [31:0] grp_fu_1051_p1;
reg   [31:0] grp_fu_1055_p0;
wire   [31:0] grp_fu_1055_p1;
reg   [31:0] grp_fu_1065_p0;
reg   [31:0] grp_fu_1065_p1;
reg    ap_sig_cseq_ST_st198_fsm_116;
reg    ap_sig_bdd_2065;
reg    ap_sig_cseq_ST_st202_fsm_120;
reg    ap_sig_bdd_2072;
reg    ap_sig_cseq_ST_st270_fsm_188;
reg    ap_sig_bdd_2079;
reg   [31:0] grp_fu_1070_p0;
reg   [31:0] grp_fu_1070_p1;
wire  signed [31:0] grp_fu_1075_p0;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_2091;
wire   [31:0] grp_fu_1078_p1;
reg    ap_sig_cseq_ST_st237_fsm_155;
reg    ap_sig_bdd_2099;
wire   [31:0] grp_fu_1083_p1;
reg   [31:0] grp_fu_1088_p1;
wire   [29:0] tmp_3_fu_1238_p4;
wire   [29:0] tmp_5_fu_1252_p4;
wire   [31:0] i1_i_cast_fu_1283_p1;
wire  signed [31:0] tmp_59_i_fu_1287_p1;
wire  signed [31:0] tmp_1_fu_1303_p0;
wire  signed [31:0] tmp_6_fu_1313_p0;
wire  signed [31:0] next_mul_fu_1320_p1;
wire  signed [32:0] tmp_9_fu_1340_p1;
wire  signed [32:0] tmp_11_fu_1344_p2;
wire   [0:0] tmp_61_fu_1375_p2;
wire   [31:0] tmp_13_fu_1387_p2;
wire  signed [31:0] grp_fu_1409_p0;
wire  signed [31:0] grp_fu_1409_p1;
wire  signed [31:0] grp_fu_1409_p2;
wire  signed [32:0] tmp_62_fu_1426_p1;
wire  signed [32:0] tmp_63_fu_1430_p2;
wire   [31:0] i1_cast_fu_1461_p1;
wire   [30:0] grp_fu_1487_p0;
wire   [3:0] grp_fu_1487_p1;
wire   [30:0] grp_fu_1487_p2;
wire  signed [32:0] tmp_55_cast_fu_1521_p1;
wire  signed [32:0] out_correlation4_sum_fu_1525_p2;
reg   [1:0] grp_fu_1017_opcode;
wire    grp_fu_1017_ce;
reg   [1:0] grp_fu_1021_opcode;
wire    grp_fu_1021_ce;
wire    grp_fu_1025_ce;
wire    grp_fu_1029_ce;
wire    grp_fu_1041_ce;
wire    grp_fu_1047_ce;
wire    grp_fu_1051_ce;
wire    grp_fu_1055_ce;
reg    grp_fu_1065_ce;
reg    ap_sig_cseq_ST_st150_fsm_68;
reg    ap_sig_bdd_2332;
reg    ap_sig_cseq_ST_st151_fsm_69;
reg    ap_sig_bdd_2340;
reg    ap_sig_cseq_ST_st152_fsm_70;
reg    ap_sig_bdd_2348;
reg    ap_sig_cseq_ST_st153_fsm_71;
reg    ap_sig_bdd_2356;
reg    ap_sig_cseq_ST_st154_fsm_72;
reg    ap_sig_bdd_2364;
reg    ap_sig_cseq_ST_st155_fsm_73;
reg    ap_sig_bdd_2372;
reg    ap_sig_cseq_ST_st156_fsm_74;
reg    ap_sig_bdd_2380;
reg    ap_sig_cseq_ST_st157_fsm_75;
reg    ap_sig_bdd_2388;
reg    ap_sig_cseq_ST_st158_fsm_76;
reg    ap_sig_bdd_2396;
reg    ap_sig_cseq_ST_st159_fsm_77;
reg    ap_sig_bdd_2404;
reg    ap_sig_cseq_ST_st160_fsm_78;
reg    ap_sig_bdd_2412;
reg    ap_sig_cseq_ST_st161_fsm_79;
reg    ap_sig_bdd_2420;
reg    ap_sig_cseq_ST_st162_fsm_80;
reg    ap_sig_bdd_2428;
reg    ap_sig_cseq_ST_st163_fsm_81;
reg    ap_sig_bdd_2436;
reg    ap_sig_cseq_ST_st164_fsm_82;
reg    ap_sig_bdd_2444;
reg    ap_sig_cseq_ST_st165_fsm_83;
reg    ap_sig_bdd_2452;
reg    ap_sig_cseq_ST_st166_fsm_84;
reg    ap_sig_bdd_2460;
reg    ap_sig_cseq_ST_st167_fsm_85;
reg    ap_sig_bdd_2468;
reg    ap_sig_cseq_ST_st168_fsm_86;
reg    ap_sig_bdd_2476;
reg    ap_sig_cseq_ST_st169_fsm_87;
reg    ap_sig_bdd_2484;
reg    ap_sig_cseq_ST_st170_fsm_88;
reg    ap_sig_bdd_2492;
reg    ap_sig_cseq_ST_st171_fsm_89;
reg    ap_sig_bdd_2500;
reg    ap_sig_cseq_ST_st172_fsm_90;
reg    ap_sig_bdd_2508;
reg    ap_sig_cseq_ST_st173_fsm_91;
reg    ap_sig_bdd_2516;
reg    ap_sig_cseq_ST_st174_fsm_92;
reg    ap_sig_bdd_2524;
reg    ap_sig_cseq_ST_st175_fsm_93;
reg    ap_sig_bdd_2532;
reg    ap_sig_cseq_ST_st176_fsm_94;
reg    ap_sig_bdd_2540;
reg    ap_sig_cseq_ST_st177_fsm_95;
reg    ap_sig_bdd_2548;
reg    ap_sig_cseq_ST_st199_fsm_117;
reg    ap_sig_bdd_2558;
reg    ap_sig_cseq_ST_st200_fsm_118;
reg    ap_sig_bdd_2566;
reg    ap_sig_cseq_ST_st203_fsm_121;
reg    ap_sig_bdd_2576;
reg    ap_sig_cseq_ST_st204_fsm_122;
reg    ap_sig_bdd_2584;
reg    ap_sig_cseq_ST_st205_fsm_123;
reg    ap_sig_bdd_2592;
reg    ap_sig_cseq_ST_st206_fsm_124;
reg    ap_sig_bdd_2600;
reg    ap_sig_cseq_ST_st207_fsm_125;
reg    ap_sig_bdd_2608;
reg    ap_sig_cseq_ST_st208_fsm_126;
reg    ap_sig_bdd_2616;
reg    ap_sig_cseq_ST_st209_fsm_127;
reg    ap_sig_bdd_2624;
reg    ap_sig_cseq_ST_st210_fsm_128;
reg    ap_sig_bdd_2632;
reg    ap_sig_cseq_ST_st211_fsm_129;
reg    ap_sig_bdd_2640;
reg    ap_sig_cseq_ST_st212_fsm_130;
reg    ap_sig_bdd_2648;
reg    ap_sig_cseq_ST_st213_fsm_131;
reg    ap_sig_bdd_2656;
reg    ap_sig_cseq_ST_st214_fsm_132;
reg    ap_sig_bdd_2664;
reg    ap_sig_cseq_ST_st215_fsm_133;
reg    ap_sig_bdd_2672;
reg    ap_sig_cseq_ST_st216_fsm_134;
reg    ap_sig_bdd_2680;
reg    ap_sig_cseq_ST_st217_fsm_135;
reg    ap_sig_bdd_2688;
reg    ap_sig_cseq_ST_st218_fsm_136;
reg    ap_sig_bdd_2696;
reg    ap_sig_cseq_ST_st219_fsm_137;
reg    ap_sig_bdd_2704;
reg    ap_sig_cseq_ST_st220_fsm_138;
reg    ap_sig_bdd_2712;
reg    ap_sig_cseq_ST_st221_fsm_139;
reg    ap_sig_bdd_2720;
reg    ap_sig_cseq_ST_st222_fsm_140;
reg    ap_sig_bdd_2728;
reg    ap_sig_cseq_ST_st224_fsm_142;
reg    ap_sig_bdd_2737;
reg    ap_sig_cseq_ST_st225_fsm_143;
reg    ap_sig_bdd_2745;
reg    ap_sig_cseq_ST_st226_fsm_144;
reg    ap_sig_bdd_2753;
reg    ap_sig_cseq_ST_st229_fsm_147;
reg    ap_sig_bdd_2763;
reg    ap_sig_cseq_ST_st230_fsm_148;
reg    ap_sig_bdd_2771;
reg    ap_sig_cseq_ST_st271_fsm_189;
reg    ap_sig_bdd_2781;
reg    ap_sig_cseq_ST_st272_fsm_190;
reg    ap_sig_bdd_2789;
reg    ap_sig_cseq_ST_st273_fsm_191;
reg    ap_sig_bdd_2797;
reg    ap_sig_cseq_ST_st274_fsm_192;
reg    ap_sig_bdd_2805;
reg    ap_sig_cseq_ST_st275_fsm_193;
reg    ap_sig_bdd_2813;
reg    ap_sig_cseq_ST_st276_fsm_194;
reg    ap_sig_bdd_2821;
reg    ap_sig_cseq_ST_st277_fsm_195;
reg    ap_sig_bdd_2829;
reg    ap_sig_cseq_ST_st278_fsm_196;
reg    ap_sig_bdd_2837;
reg    ap_sig_cseq_ST_st279_fsm_197;
reg    ap_sig_bdd_2845;
reg    ap_sig_cseq_ST_st280_fsm_198;
reg    ap_sig_bdd_2853;
reg    ap_sig_cseq_ST_st281_fsm_199;
reg    ap_sig_bdd_2861;
reg    ap_sig_cseq_ST_st282_fsm_200;
reg    ap_sig_bdd_2869;
reg    ap_sig_cseq_ST_st283_fsm_201;
reg    ap_sig_bdd_2877;
reg    ap_sig_cseq_ST_st284_fsm_202;
reg    ap_sig_bdd_2885;
reg    ap_sig_cseq_ST_st285_fsm_203;
reg    ap_sig_bdd_2893;
reg    ap_sig_cseq_ST_st286_fsm_204;
reg    ap_sig_bdd_2901;
reg    ap_sig_cseq_ST_st287_fsm_205;
reg    ap_sig_bdd_2909;
reg    ap_sig_cseq_ST_st288_fsm_206;
reg    ap_sig_bdd_2917;
reg    ap_sig_cseq_ST_st289_fsm_207;
reg    ap_sig_bdd_2925;
reg    ap_sig_cseq_ST_st290_fsm_208;
reg    ap_sig_bdd_2933;
reg    ap_sig_cseq_ST_st291_fsm_209;
reg    ap_sig_bdd_2941;
reg    ap_sig_cseq_ST_st292_fsm_210;
reg    ap_sig_bdd_2949;
reg    ap_sig_cseq_ST_st293_fsm_211;
reg    ap_sig_bdd_2957;
reg    ap_sig_cseq_ST_st294_fsm_212;
reg    ap_sig_bdd_2965;
reg    ap_sig_cseq_ST_st295_fsm_213;
reg    ap_sig_bdd_2973;
reg    ap_sig_cseq_ST_st296_fsm_214;
reg    ap_sig_bdd_2981;
reg    ap_sig_cseq_ST_st297_fsm_215;
reg    ap_sig_bdd_2989;
reg    ap_sig_cseq_ST_st298_fsm_216;
reg    ap_sig_bdd_2997;
wire    grp_fu_1070_ce;
wire    grp_fu_1075_ce;
wire   [31:0] grp_fu_1078_p0;
wire    grp_fu_1078_ce;
wire   [31:0] grp_fu_1083_p0;
wire    grp_fu_1083_ce;
wire   [31:0] grp_fu_1088_p0;
wire    grp_fu_1088_ce;
wire    grp_fu_1409_ce;
wire    grp_fu_1487_ce;
reg   [221:0] ap_NS_fsm;


correlation_accel_v1_weight_rom #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
weight_rom_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( weight_rom_address0 ),
    .ce0( weight_rom_ce0 ),
    .we0( weight_rom_we0 ),
    .d0( weight_rom_d0 ),
    .q0( weight_rom_q0 ),
    .address1( weight_rom_address1 ),
    .ce1( weight_rom_ce1 ),
    .we1( weight_rom_we1 ),
    .d1( weight_rom_d1 ),
    .q1( weight_rom_q1 )
);

correlation_accel_v1_bramA #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
bramA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( bramA_address0 ),
    .ce0( bramA_ce0 ),
    .we0( bramA_we0 ),
    .d0( bramA_d0 ),
    .q0( bramA_q0 ),
    .address1( bramA_address1 ),
    .ce1( bramA_ce1 ),
    .q1( bramA_q1 )
);

correlation_accel_v1_bramB #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
bramB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( bramB_address0 ),
    .ce0( bramB_ce0 ),
    .we0( bramB_we0 ),
    .d0( bramB_d0 ),
    .q0( bramB_q0 )
);

correlation_accel_v1_gmem32_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_ID_WIDTH( C_M_AXI_GMEM32_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_GMEM32_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_GMEM32_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_GMEM32_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_GMEM32_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_GMEM32_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_GMEM32_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_GMEM32_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM32_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM32_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM32_CACHE_VALUE ))
correlation_accel_v1_gmem32_m_axi_U(
    .AWVALID( m_axi_gmem32_AWVALID ),
    .AWREADY( m_axi_gmem32_AWREADY ),
    .AWADDR( m_axi_gmem32_AWADDR ),
    .AWID( m_axi_gmem32_AWID ),
    .AWLEN( m_axi_gmem32_AWLEN ),
    .AWSIZE( m_axi_gmem32_AWSIZE ),
    .AWBURST( m_axi_gmem32_AWBURST ),
    .AWLOCK( m_axi_gmem32_AWLOCK ),
    .AWCACHE( m_axi_gmem32_AWCACHE ),
    .AWPROT( m_axi_gmem32_AWPROT ),
    .AWQOS( m_axi_gmem32_AWQOS ),
    .AWREGION( m_axi_gmem32_AWREGION ),
    .AWUSER( m_axi_gmem32_AWUSER ),
    .WVALID( m_axi_gmem32_WVALID ),
    .WREADY( m_axi_gmem32_WREADY ),
    .WDATA( m_axi_gmem32_WDATA ),
    .WSTRB( m_axi_gmem32_WSTRB ),
    .WLAST( m_axi_gmem32_WLAST ),
    .WID( m_axi_gmem32_WID ),
    .WUSER( m_axi_gmem32_WUSER ),
    .ARVALID( m_axi_gmem32_ARVALID ),
    .ARREADY( m_axi_gmem32_ARREADY ),
    .ARADDR( m_axi_gmem32_ARADDR ),
    .ARID( m_axi_gmem32_ARID ),
    .ARLEN( m_axi_gmem32_ARLEN ),
    .ARSIZE( m_axi_gmem32_ARSIZE ),
    .ARBURST( m_axi_gmem32_ARBURST ),
    .ARLOCK( m_axi_gmem32_ARLOCK ),
    .ARCACHE( m_axi_gmem32_ARCACHE ),
    .ARPROT( m_axi_gmem32_ARPROT ),
    .ARQOS( m_axi_gmem32_ARQOS ),
    .ARREGION( m_axi_gmem32_ARREGION ),
    .ARUSER( m_axi_gmem32_ARUSER ),
    .RVALID( m_axi_gmem32_RVALID ),
    .RREADY( m_axi_gmem32_RREADY ),
    .RDATA( m_axi_gmem32_RDATA ),
    .RLAST( m_axi_gmem32_RLAST ),
    .RID( m_axi_gmem32_RID ),
    .RUSER( m_axi_gmem32_RUSER ),
    .RRESP( m_axi_gmem32_RRESP ),
    .BVALID( m_axi_gmem32_BVALID ),
    .BREADY( m_axi_gmem32_BREADY ),
    .BRESP( m_axi_gmem32_BRESP ),
    .BID( m_axi_gmem32_BID ),
    .BUSER( m_axi_gmem32_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem32_ARVALID ),
    .I_ARREADY( gmem32_ARREADY ),
    .I_ARADDR( gmem32_ARADDR ),
    .I_ARID( gmem32_ARID ),
    .I_ARLEN( gmem32_ARLEN ),
    .I_ARSIZE( gmem32_ARSIZE ),
    .I_ARLOCK( gmem32_ARLOCK ),
    .I_ARCACHE( gmem32_ARCACHE ),
    .I_ARQOS( gmem32_ARQOS ),
    .I_ARPROT( gmem32_ARPROT ),
    .I_ARUSER( gmem32_ARUSER ),
    .I_ARBURST( gmem32_ARBURST ),
    .I_ARREGION( gmem32_ARREGION ),
    .I_RVALID( gmem32_RVALID ),
    .I_RREADY( gmem32_RREADY ),
    .I_RDATA( gmem32_RDATA ),
    .I_RID( gmem32_RID ),
    .I_RUSER( gmem32_RUSER ),
    .I_RRESP( gmem32_RRESP ),
    .I_RLAST( gmem32_RLAST ),
    .I_AWVALID( gmem32_AWVALID ),
    .I_AWREADY( gmem32_AWREADY ),
    .I_AWADDR( gmem32_AWADDR ),
    .I_AWID( gmem32_AWID ),
    .I_AWLEN( gmem32_AWLEN ),
    .I_AWSIZE( gmem32_AWSIZE ),
    .I_AWLOCK( gmem32_AWLOCK ),
    .I_AWCACHE( gmem32_AWCACHE ),
    .I_AWQOS( gmem32_AWQOS ),
    .I_AWPROT( gmem32_AWPROT ),
    .I_AWUSER( gmem32_AWUSER ),
    .I_AWBURST( gmem32_AWBURST ),
    .I_AWREGION( gmem32_AWREGION ),
    .I_WVALID( gmem32_WVALID ),
    .I_WREADY( gmem32_WREADY ),
    .I_WDATA( gmem32_WDATA ),
    .I_WID( gmem32_WID ),
    .I_WUSER( gmem32_WUSER ),
    .I_WLAST( gmem32_WLAST ),
    .I_WSTRB( gmem32_WSTRB ),
    .I_BVALID( gmem32_BVALID ),
    .I_BREADY( gmem32_BREADY ),
    .I_BRESP( gmem32_BRESP ),
    .I_BID( gmem32_BID ),
    .I_BUSER( gmem32_BUSER )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_returnA_address0 ),
    .ce0( acc_returnA_ce0 ),
    .we0( acc_returnA_we0 ),
    .d0( acc_returnA_d0 ),
    .q0( acc_returnA_q0 ),
    .address1( acc_returnA_address1 ),
    .ce1( acc_returnA_ce1 ),
    .we1( acc_returnA_we1 ),
    .d1( acc_returnA_d1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_returnB_address0 ),
    .ce0( acc_returnB_ce0 ),
    .we0( acc_returnB_we0 ),
    .d0( acc_returnB_d0 ),
    .q0( acc_returnB_q0 ),
    .address1( acc_returnB_address1 ),
    .ce1( acc_returnB_ce1 ),
    .we1( acc_returnB_we1 ),
    .d1( acc_returnB_d1 ),
    .q1( acc_returnB_q1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnSquareA_address0 ),
    .ce0( acc_weight_returnSquareA_ce0 ),
    .we0( acc_weight_returnSquareA_we0 ),
    .d0( acc_weight_returnSquareA_d0 ),
    .q0( acc_weight_returnSquareA_q0 ),
    .address1( acc_weight_returnSquareA_address1 ),
    .ce1( acc_weight_returnSquareA_ce1 ),
    .we1( acc_weight_returnSquareA_we1 ),
    .d1( acc_weight_returnSquareA_d1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnA_address0 ),
    .ce0( acc_weight_returnA_ce0 ),
    .we0( acc_weight_returnA_we0 ),
    .d0( acc_weight_returnA_d0 ),
    .q0( acc_weight_returnA_q0 ),
    .address1( acc_weight_returnA_address1 ),
    .ce1( acc_weight_returnA_ce1 ),
    .we1( acc_weight_returnA_we1 ),
    .d1( acc_weight_returnA_d1 ),
    .q1( acc_weight_returnA_q1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnSquareB_address0 ),
    .ce0( acc_weight_returnSquareB_ce0 ),
    .we0( acc_weight_returnSquareB_we0 ),
    .d0( acc_weight_returnSquareB_d0 ),
    .q0( acc_weight_returnSquareB_q0 ),
    .address1( acc_weight_returnSquareB_address1 ),
    .ce1( acc_weight_returnSquareB_ce1 ),
    .we1( acc_weight_returnSquareB_we1 ),
    .d1( acc_weight_returnSquareB_d1 ),
    .q1( acc_weight_returnSquareB_q1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnB_address0 ),
    .ce0( acc_weight_returnB_ce0 ),
    .we0( acc_weight_returnB_we0 ),
    .d0( acc_weight_returnB_d0 ),
    .q0( acc_weight_returnB_q0 ),
    .address1( acc_weight_returnB_address1 ),
    .ce1( acc_weight_returnB_ce1 ),
    .we1( acc_weight_returnB_we1 ),
    .d1( acc_weight_returnB_d1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnA_returnB_address0 ),
    .ce0( acc_weight_returnA_returnB_ce0 ),
    .we0( acc_weight_returnA_returnB_we0 ),
    .d0( acc_weight_returnA_returnB_d0 ),
    .q0( acc_weight_returnA_returnB_q0 ),
    .address1( acc_weight_returnA_returnB_address1 ),
    .ce1( acc_weight_returnA_returnB_ce1 ),
    .we1( acc_weight_returnA_returnB_we1 ),
    .d1( acc_weight_returnA_returnB_d1 ),
    .q1( acc_weight_returnA_returnB_q1 )
);

correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1017_p0 ),
    .din1( grp_fu_1017_p1 ),
    .opcode( grp_fu_1017_opcode ),
    .ce( grp_fu_1017_ce ),
    .dout( grp_fu_1017_p2 )
);

correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1021_p0 ),
    .din1( grp_fu_1021_p1 ),
    .opcode( grp_fu_1021_opcode ),
    .ce( grp_fu_1021_ce ),
    .dout( grp_fu_1021_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp_U3(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1025_p0 ),
    .din1( grp_fu_1025_p1 ),
    .ce( grp_fu_1025_ce ),
    .dout( grp_fu_1025_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1029_p0 ),
    .din1( grp_fu_1029_p1 ),
    .ce( grp_fu_1029_ce ),
    .dout( grp_fu_1029_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1041_p0 ),
    .din1( grp_fu_1041_p1 ),
    .ce( grp_fu_1041_ce ),
    .dout( grp_fu_1041_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1047_p0 ),
    .din1( grp_fu_1047_p1 ),
    .ce( grp_fu_1047_ce ),
    .dout( grp_fu_1047_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1051_p0 ),
    .din1( grp_fu_1051_p1 ),
    .ce( grp_fu_1051_ce ),
    .dout( grp_fu_1051_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1055_p0 ),
    .din1( grp_fu_1055_p1 ),
    .ce( grp_fu_1055_ce ),
    .dout( grp_fu_1055_p2 )
);

correlation_accel_v1_fdiv_32ns_32ns_32_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fdiv_32ns_32ns_32_30_U9(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1065_p0 ),
    .din1( grp_fu_1065_p1 ),
    .ce( grp_fu_1065_ce ),
    .dout( grp_fu_1065_p2 )
);

correlation_accel_v1_fdiv_32ns_32ns_32_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fdiv_32ns_32ns_32_30_U10(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1070_p0 ),
    .din1( grp_fu_1070_p1 ),
    .ce( grp_fu_1070_ce ),
    .dout( grp_fu_1070_p2 )
);

correlation_accel_v1_sitofp_32s_32_8 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_sitofp_32s_32_8_U11(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1075_p0 ),
    .ce( grp_fu_1075_ce ),
    .dout( grp_fu_1075_p1 )
);

correlation_accel_v1_fsqrt_32ns_32ns_32_28 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fsqrt_32ns_32ns_32_28_U12(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1078_p0 ),
    .din1( grp_fu_1078_p1 ),
    .ce( grp_fu_1078_ce ),
    .dout( grp_fu_1078_p2 )
);

correlation_accel_v1_fsqrt_32ns_32ns_32_28 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fsqrt_32ns_32ns_32_28_U13(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1083_p0 ),
    .din1( grp_fu_1083_p1 ),
    .ce( grp_fu_1083_ce ),
    .dout( grp_fu_1083_p2 )
);

correlation_accel_v1_flog_32ns_32ns_32_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_flog_32ns_32ns_32_18_full_dsp_U14(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1088_p0 ),
    .din1( grp_fu_1088_p1 ),
    .ce( grp_fu_1088_ce ),
    .dout( grp_fu_1088_p2 )
);

correlation_accel_v1_mul_32s_32s_32_7 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_mul_32s_32s_32_7_U15(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1409_p0 ),
    .din1( grp_fu_1409_p1 ),
    .ce( grp_fu_1409_ce ),
    .dout( grp_fu_1409_p2 )
);

correlation_accel_v1_urem_31ns_4ns_31_35 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 31 ))
correlation_accel_v1_urem_31ns_4ns_31_35_U16(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1487_p0 ),
    .din1( grp_fu_1487_p1 ),
    .ce( grp_fu_1487_ce ),
    .dout( grp_fu_1487_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_gmem32_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) | (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_44)))) begin
            ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) | ((ap_const_logic_1 == gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_44)))) begin
            ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_gmem32_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_AWREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st299_fsm_217)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) begin
                ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem32_AWREADY)) begin
                ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_gmem32_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_WREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st300_fsm_218)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_WREADY)) begin
                ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem32_WREADY)) begin
                ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1359_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond4_fu_1359_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1359_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1445_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_49)) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond2_fu_1445_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_49) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1445_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_49)) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_lv1_0 == tmp_14_fu_1465_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if ((~(ap_const_lv1_0 == tmp_14_reg_1915) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | ((ap_const_lv1_0 == tmp_14_reg_1915) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it10
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it10 <= ap_reg_ppiten_pp2_it9;
        end
    end
end

/// ap_reg_ppiten_pp2_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it11
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it11 <= ap_reg_ppiten_pp2_it10;
        end
    end
end

/// ap_reg_ppiten_pp2_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it12
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it12 <= ap_reg_ppiten_pp2_it11;
        end
    end
end

/// ap_reg_ppiten_pp2_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it13
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it13 <= ap_reg_ppiten_pp2_it12;
        end
    end
end

/// ap_reg_ppiten_pp2_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it14
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it14 <= ap_reg_ppiten_pp2_it13;
        end
    end
end

/// ap_reg_ppiten_pp2_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it15
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it15 <= ap_reg_ppiten_pp2_it14;
        end
    end
end

/// ap_reg_ppiten_pp2_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it16
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it16 <= ap_reg_ppiten_pp2_it15;
        end
    end
end

/// ap_reg_ppiten_pp2_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it17
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it17 <= ap_reg_ppiten_pp2_it16;
        end
    end
end

/// ap_reg_ppiten_pp2_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it18
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it18 <= ap_reg_ppiten_pp2_it17;
        end
    end
end

/// ap_reg_ppiten_pp2_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it19
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it19 <= ap_reg_ppiten_pp2_it18;
        end
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
        end
    end
end

/// ap_reg_ppiten_pp2_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it20
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it20 <= ap_reg_ppiten_pp2_it19;
        end
    end
end

/// ap_reg_ppiten_pp2_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it21
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it21 <= ap_reg_ppiten_pp2_it20;
        end
    end
end

/// ap_reg_ppiten_pp2_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it22
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it22 <= ap_reg_ppiten_pp2_it21;
        end
    end
end

/// ap_reg_ppiten_pp2_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it23
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it23 <= ap_reg_ppiten_pp2_it22;
        end
    end
end

/// ap_reg_ppiten_pp2_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it24
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it24 <= ap_reg_ppiten_pp2_it23;
        end
    end
end

/// ap_reg_ppiten_pp2_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it25
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it25 <= ap_reg_ppiten_pp2_it24;
        end
    end
end

/// ap_reg_ppiten_pp2_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it26
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it26 <= ap_reg_ppiten_pp2_it25;
        end
    end
end

/// ap_reg_ppiten_pp2_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it27
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it27 <= ap_reg_ppiten_pp2_it26;
        end
    end
end

/// ap_reg_ppiten_pp2_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it28
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it28 <= ap_reg_ppiten_pp2_it27;
        end
    end
end

/// ap_reg_ppiten_pp2_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it29
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it29 <= ap_reg_ppiten_pp2_it28;
        end
    end
end

/// ap_reg_ppiten_pp2_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
        end
    end
end

/// ap_reg_ppiten_pp2_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it30
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it30 <= ap_reg_ppiten_pp2_it29;
        end
    end
end

/// ap_reg_ppiten_pp2_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it31
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it31 <= ap_reg_ppiten_pp2_it30;
        end
    end
end

/// ap_reg_ppiten_pp2_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it32
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it32 <= ap_reg_ppiten_pp2_it31;
        end
    end
end

/// ap_reg_ppiten_pp2_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it33
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it33 <= ap_reg_ppiten_pp2_it32;
        end
    end
end

/// ap_reg_ppiten_pp2_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it34
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it34 <= ap_reg_ppiten_pp2_it33;
        end
    end
end

/// ap_reg_ppiten_pp2_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it35
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it35 <= ap_reg_ppiten_pp2_it34;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
            ap_reg_ppiten_pp2_it35 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
        end
    end
end

/// ap_reg_ppiten_pp2_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
        end
    end
end

/// ap_reg_ppiten_pp2_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
        end
    end
end

/// ap_reg_ppiten_pp2_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
        end
    end
end

/// ap_reg_ppiten_pp2_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it8
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it8 <= ap_reg_ppiten_pp2_it7;
        end
    end
end

/// ap_reg_ppiten_pp2_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it9
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            ap_reg_ppiten_pp2_it9 <= ap_reg_ppiten_pp2_it8;
        end
    end
end

/// ap_reg_ppiten_pp3_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58) & ~(ap_const_lv1_0 == exitcond_fu_1504_p2))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp3_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_66))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_66) & ~(ap_const_lv1_0 == exitcond_reg_2060)))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st303_fsm_221) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        column_index_0_in_reg_877 <= column_index_reg_1881;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_36)) begin
        column_index_0_in_reg_877 <= row_index_cast_reg_1843;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st303_fsm_221) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        counter_1_reg_886 <= tmp_56_reg_2154;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_36)) begin
        counter_1_reg_886 <= counter_reg_842;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        counter_reg_842 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_37) & (ap_const_lv1_0 == tmp_8_fu_1404_p2))) begin
        counter_reg_842 <= counter_2_reg_1876;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond_i_fu_1266_p2))) begin
        i1_i_reg_796 <= ap_const_lv31_2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        i1_i_reg_796 <= i_3_reg_1590;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        i1_reg_909 <= ap_const_lv31_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_const_lv1_0 == tmp_14_reg_1915))) begin
        i1_reg_909 <= i_reg_1919;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58))) begin
        i2_reg_1005 <= i_1_reg_2064;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        i2_reg_1005 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_i_reg_784 <= i_2_fu_1277_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_i_reg_784 <= ap_const_lv8_2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & (ap_const_lv1_0 == exitcond2_reg_1906) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar1_reg_897 <= indvar_next1_reg_1910;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_49)) begin
        indvar1_reg_897 <= ap_const_lv30_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond4_reg_1862 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_reg_865 <= indvar_next_reg_1866;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        indvar_reg_865 <= ap_const_lv30_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        indvars_iv2_reg_807 <= ap_const_lv32_FFFFFFFF;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_37) & (ap_const_lv1_0 == tmp_8_fu_1404_p2))) begin
        indvars_iv2_reg_807 <= indvars_iv_next3_fu_1420_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        indvars_iv_reg_819 <= ap_const_lv32_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_37) & (ap_const_lv1_0 == tmp_8_fu_1404_p2))) begin
        indvars_iv_reg_819 <= indvars_iv_next_fu_1414_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        phi_mul_reg_854 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_37) & (ap_const_lv1_0 == tmp_8_fu_1404_p2))) begin
        phi_mul_reg_854 <= next_mul_reg_1838;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == tmp_14_reg_1915))) begin
        reg_1103 <= weight_rom_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57))) begin
        reg_1103 <= weight_rom_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60))) begin
        reg_1152 <= acc_returnB_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it24))) begin
        reg_1152 <= acc_returnB_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62))) begin
        reg_1165 <= acc_weight_returnA_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it26))) begin
        reg_1165 <= acc_weight_returnA_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63))) begin
        reg_1196 <= acc_weight_returnSquareB_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29))) begin
        reg_1196 <= acc_weight_returnSquareB_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64))) begin
        reg_1203 <= acc_weight_returnA_returnB_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29))) begin
        reg_1203 <= acc_weight_returnA_returnB_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        row_index_reg_831 <= ap_const_lv31_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_37) & (ap_const_lv1_0 == tmp_8_fu_1404_p2))) begin
        row_index_reg_831 <= row_index_1_reg_1851;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_returnA_reg_921 <= sum_returnA_1_reg_2114;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        sum_returnA_reg_921 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_returnB_reg_933 <= sum_returnB_1_reg_2119;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        sum_returnB_reg_933 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnA_reg_957 <= sum_weight_returnA_1_reg_2129;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        sum_weight_returnA_reg_957 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_65))) begin
        sum_weight_returnA_returnB_reg_993 <= grp_fu_1017_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        sum_weight_returnA_returnB_reg_993 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_65))) begin
        sum_weight_returnB_reg_981 <= sum_weight_returnB_1_reg_2139;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        sum_weight_returnB_reg_981 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnSquareA_reg_945 <= sum_weight_returnSquareA_1_reg_2124;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        sum_weight_returnSquareA_reg_945 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnSquareB_reg_969 <= sum_weight_returnSquareB_1_reg_2134;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_57)) begin
        sum_weight_returnSquareB_reg_969 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_i_reg_772 <= reg_1093;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_i_reg_772 <= ap_const_lv32_3F800000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it16))) begin
        acc_returnA_addr_1_reg_1975 <= tmp_20_fu_1493_p1;
        acc_returnB_addr_1_reg_1981 <= tmp_20_fu_1493_p1;
        acc_weight_returnA_addr_1_reg_1999 <= tmp_20_fu_1493_p1;
        acc_weight_returnA_returnB_add_6_reg_2011 <= tmp_20_fu_1493_p1;
        acc_weight_returnB_addr_1_reg_2005 <= tmp_20_fu_1493_p1;
        acc_weight_returnSquareA_addr_1_reg_1987 <= tmp_20_fu_1493_p1;
        acc_weight_returnSquareB_addr_1_reg_1993 <= tmp_20_fu_1493_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54)) begin
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it18 <= acc_returnA_addr_1_reg_1975;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it19 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it18;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it20 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it19;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it21 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it20;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it22 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it21;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it23 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it22;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it24 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it23;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it25 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it24;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it26 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it25;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it27 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it26;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it28 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it27;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it29 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it28;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it18 <= acc_returnB_addr_1_reg_1981;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it19 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it18;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it20 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it19;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it21 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it20;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it22 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it21;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it23 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it22;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it24 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it23;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it25 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it24;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it26 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it25;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it27 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it26;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it28 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it27;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it29 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it28;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it18 <= acc_weight_returnA_addr_1_reg_1999;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it19 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it18;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it20 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it19;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it21 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it20;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it22 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it21;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it23 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it22;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it24 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it23;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it25 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it24;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it26 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it25;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it27 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it26;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it28 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it27;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it29 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it28;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it30 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it29;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it31 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it30;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it18 <= acc_weight_returnA_returnB_add_6_reg_2011;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it19 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it18;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it20 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it19;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it21 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it20;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it22 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it21;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it23 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it22;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it24 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it23;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it25 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it24;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it26 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it25;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it27 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it26;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it28 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it27;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it29 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it28;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it30 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it29;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it31 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it30;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it32 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it31;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it33 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it32;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it34 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it33;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it18 <= acc_weight_returnB_addr_1_reg_2005;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it19 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it18;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it20 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it19;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it21 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it20;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it22 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it21;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it23 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it22;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it24 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it23;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it25 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it24;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it26 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it25;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it27 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it26;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it28 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it27;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it29 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it28;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it30 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it29;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it31 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it30;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it32 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it31;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it18 <= acc_weight_returnSquareA_addr_1_reg_1987;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it19 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it18;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it20 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it19;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it21 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it20;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it22 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it21;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it23 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it22;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it24 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it23;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it25 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it24;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it26 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it25;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it27 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it26;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it28 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it27;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it29 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it28;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it30 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it29;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it31 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it30;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it32 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it31;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it33 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it32;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it34 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it33;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it18 <= acc_weight_returnSquareB_addr_1_reg_1993;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it19 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it18;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it20 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it19;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it21 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it20;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it22 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it21;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it23 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it22;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it24 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it23;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it25 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it24;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it26 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it25;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it27 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it26;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it28 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it27;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it29 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it28;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it30 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it29;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it31 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it30;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it32 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it31;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it33 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it32;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it34 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it33;
        ap_reg_ppstg_reg_1103_pp2_it10 <= ap_reg_ppstg_reg_1103_pp2_it9;
        ap_reg_ppstg_reg_1103_pp2_it11 <= ap_reg_ppstg_reg_1103_pp2_it10;
        ap_reg_ppstg_reg_1103_pp2_it12 <= ap_reg_ppstg_reg_1103_pp2_it11;
        ap_reg_ppstg_reg_1103_pp2_it13 <= ap_reg_ppstg_reg_1103_pp2_it12;
        ap_reg_ppstg_reg_1103_pp2_it14 <= ap_reg_ppstg_reg_1103_pp2_it13;
        ap_reg_ppstg_reg_1103_pp2_it15 <= ap_reg_ppstg_reg_1103_pp2_it14;
        ap_reg_ppstg_reg_1103_pp2_it16 <= ap_reg_ppstg_reg_1103_pp2_it15;
        ap_reg_ppstg_reg_1103_pp2_it17 <= ap_reg_ppstg_reg_1103_pp2_it16;
        ap_reg_ppstg_reg_1103_pp2_it18 <= ap_reg_ppstg_reg_1103_pp2_it17;
        ap_reg_ppstg_reg_1103_pp2_it19 <= ap_reg_ppstg_reg_1103_pp2_it18;
        ap_reg_ppstg_reg_1103_pp2_it2 <= reg_1103;
        ap_reg_ppstg_reg_1103_pp2_it20 <= ap_reg_ppstg_reg_1103_pp2_it19;
        ap_reg_ppstg_reg_1103_pp2_it21 <= ap_reg_ppstg_reg_1103_pp2_it20;
        ap_reg_ppstg_reg_1103_pp2_it22 <= ap_reg_ppstg_reg_1103_pp2_it21;
        ap_reg_ppstg_reg_1103_pp2_it23 <= ap_reg_ppstg_reg_1103_pp2_it22;
        ap_reg_ppstg_reg_1103_pp2_it24 <= ap_reg_ppstg_reg_1103_pp2_it23;
        ap_reg_ppstg_reg_1103_pp2_it25 <= ap_reg_ppstg_reg_1103_pp2_it24;
        ap_reg_ppstg_reg_1103_pp2_it26 <= ap_reg_ppstg_reg_1103_pp2_it25;
        ap_reg_ppstg_reg_1103_pp2_it27 <= ap_reg_ppstg_reg_1103_pp2_it26;
        ap_reg_ppstg_reg_1103_pp2_it3 <= ap_reg_ppstg_reg_1103_pp2_it2;
        ap_reg_ppstg_reg_1103_pp2_it4 <= ap_reg_ppstg_reg_1103_pp2_it3;
        ap_reg_ppstg_reg_1103_pp2_it5 <= ap_reg_ppstg_reg_1103_pp2_it4;
        ap_reg_ppstg_reg_1103_pp2_it6 <= ap_reg_ppstg_reg_1103_pp2_it5;
        ap_reg_ppstg_reg_1103_pp2_it7 <= ap_reg_ppstg_reg_1103_pp2_it6;
        ap_reg_ppstg_reg_1103_pp2_it8 <= ap_reg_ppstg_reg_1103_pp2_it7;
        ap_reg_ppstg_reg_1103_pp2_it9 <= ap_reg_ppstg_reg_1103_pp2_it8;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it1 <= tmp_14_reg_1915;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it10 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it9;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it11 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it10;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it12 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it11;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it13 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it12;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it14 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it13;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it15 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it14;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it16 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it15;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it17 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it16;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it18 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it17;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it19 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it18;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it2 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it1;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it20 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it19;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it21 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it20;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it22 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it21;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it23 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it22;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it24 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it23;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it25 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it24;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it26 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it25;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it27 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it26;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it28 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it27;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it29 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it28;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it3 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it2;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it30 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it29;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it31 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it30;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it32 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it31;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it33 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it32;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it34 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it33;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it4 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it3;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it5 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it4;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it6 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it5;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it7 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it6;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it8 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it7;
        ap_reg_ppstg_tmp_14_reg_1915_pp2_it9 <= ap_reg_ppstg_tmp_14_reg_1915_pp2_it8;
        tmp_14_reg_1915 <= tmp_14_fu_1465_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        ap_reg_ppstg_exitcond2_reg_1906_pp1_it1 <= exitcond2_reg_1906;
        ap_reg_ppstg_indvar1_reg_897_pp1_it1 <= indvar1_reg_897;
        exitcond2_reg_1906 <= exitcond2_fu_1445_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond4_reg_1862_pp0_it1 <= exitcond4_reg_1862;
        ap_reg_ppstg_indvar_reg_865_pp0_it1 <= indvar_reg_865;
        exitcond4_reg_1862 <= exitcond4_fu_1359_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58)) begin
        ap_reg_ppstg_exitcond_reg_2060_pp3_it1 <= exitcond_reg_2060;
        exitcond_reg_2060 <= exitcond_fu_1504_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_lv1_0 == tmp_14_reg_1915) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        bramA_load_1_reg_1950 <= bramA_q1;
        bramA_load_reg_1945 <= bramA_q0;
        bramB_load_reg_1955 <= bramB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == tmp_14_reg_1915))) begin
        bramB_load_1_reg_1970 <= bramB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_37)) begin
        column_index_reg_1881 <= column_index_fu_1398_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_36)) begin
        counter_2_reg_1876 <= counter_2_fu_1392_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_43)) begin
        gmem32_addr_1_reg_1900 <= tmp_64_fu_1435_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_67)) begin
        gmem32_addr_2_reg_2149 <= out_correlation4_sum_cast_fu_1530_p1;
        tmp_56_reg_2154 <= tmp_56_fu_1540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & ~(ap_const_lv1_0 == tmp_4_fu_1329_p2))) begin
        gmem32_addr_reg_1856 <= tmp_55_fu_1349_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58))) begin
        i_1_reg_2064 <= i_1_fu_1510_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == tmp_59_i_fu_1287_p2))) begin
        i_3_reg_1590 <= i_3_fu_1297_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        i_reg_1919 <= i_fu_1470_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar_next1_reg_1910 <= indvar_next1_fu_1450_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_next_reg_1866 <= indvar_next_fu_1364_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it24))) begin
        lnReturnA_reg_2017 <= grp_fu_1088_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it24))) begin
        lnReturnB_reg_2026 <= grp_fu_1088_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        next_mul_reg_1838 <= next_mul_fu_1320_p2;
        row_index_1_reg_1851 <= row_index_1_fu_1334_p2;
        row_index_cast_reg_1843[0] <= row_index_cast_fu_1325_p1[0];
row_index_cast_reg_1843[1] <= row_index_cast_fu_1325_p1[1];
row_index_cast_reg_1843[2] <= row_index_cast_fu_1325_p1[2];
row_index_cast_reg_1843[3] <= row_index_cast_fu_1325_p1[3];
row_index_cast_reg_1843[4] <= row_index_cast_fu_1325_p1[4];
row_index_cast_reg_1843[5] <= row_index_cast_fu_1325_p1[5];
row_index_cast_reg_1843[6] <= row_index_cast_fu_1325_p1[6];
row_index_cast_reg_1843[7] <= row_index_cast_fu_1325_p1[7];
row_index_cast_reg_1843[8] <= row_index_cast_fu_1325_p1[8];
row_index_cast_reg_1843[9] <= row_index_cast_fu_1325_p1[9];
row_index_cast_reg_1843[10] <= row_index_cast_fu_1325_p1[10];
row_index_cast_reg_1843[11] <= row_index_cast_fu_1325_p1[11];
row_index_cast_reg_1843[12] <= row_index_cast_fu_1325_p1[12];
row_index_cast_reg_1843[13] <= row_index_cast_fu_1325_p1[13];
row_index_cast_reg_1843[14] <= row_index_cast_fu_1325_p1[14];
row_index_cast_reg_1843[15] <= row_index_cast_fu_1325_p1[15];
row_index_cast_reg_1843[16] <= row_index_cast_fu_1325_p1[16];
row_index_cast_reg_1843[17] <= row_index_cast_fu_1325_p1[17];
row_index_cast_reg_1843[18] <= row_index_cast_fu_1325_p1[18];
row_index_cast_reg_1843[19] <= row_index_cast_fu_1325_p1[19];
row_index_cast_reg_1843[20] <= row_index_cast_fu_1325_p1[20];
row_index_cast_reg_1843[21] <= row_index_cast_fu_1325_p1[21];
row_index_cast_reg_1843[22] <= row_index_cast_fu_1325_p1[22];
row_index_cast_reg_1843[23] <= row_index_cast_fu_1325_p1[23];
row_index_cast_reg_1843[24] <= row_index_cast_fu_1325_p1[24];
row_index_cast_reg_1843[25] <= row_index_cast_fu_1325_p1[25];
row_index_cast_reg_1843[26] <= row_index_cast_fu_1325_p1[26];
row_index_cast_reg_1843[27] <= row_index_cast_fu_1325_p1[27];
row_index_cast_reg_1843[28] <= row_index_cast_fu_1325_p1[28];
row_index_cast_reg_1843[29] <= row_index_cast_fu_1325_p1[29];
row_index_cast_reg_1843[30] <= row_index_cast_fu_1325_p1[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        p_add_i32_shr_reg_1623[0] <= p_add_i32_shr_fu_1316_p1[0];
p_add_i32_shr_reg_1623[1] <= p_add_i32_shr_fu_1316_p1[1];
p_add_i32_shr_reg_1623[2] <= p_add_i32_shr_fu_1316_p1[2];
p_add_i32_shr_reg_1623[3] <= p_add_i32_shr_fu_1316_p1[3];
p_add_i32_shr_reg_1623[4] <= p_add_i32_shr_fu_1316_p1[4];
p_add_i32_shr_reg_1623[5] <= p_add_i32_shr_fu_1316_p1[5];
p_add_i32_shr_reg_1623[6] <= p_add_i32_shr_fu_1316_p1[6];
p_add_i32_shr_reg_1623[7] <= p_add_i32_shr_fu_1316_p1[7];
p_add_i32_shr_reg_1623[8] <= p_add_i32_shr_fu_1316_p1[8];
p_add_i32_shr_reg_1623[9] <= p_add_i32_shr_fu_1316_p1[9];
p_add_i32_shr_reg_1623[10] <= p_add_i32_shr_fu_1316_p1[10];
p_add_i32_shr_reg_1623[11] <= p_add_i32_shr_fu_1316_p1[11];
p_add_i32_shr_reg_1623[12] <= p_add_i32_shr_fu_1316_p1[12];
p_add_i32_shr_reg_1623[13] <= p_add_i32_shr_fu_1316_p1[13];
p_add_i32_shr_reg_1623[14] <= p_add_i32_shr_fu_1316_p1[14];
p_add_i32_shr_reg_1623[15] <= p_add_i32_shr_fu_1316_p1[15];
p_add_i32_shr_reg_1623[16] <= p_add_i32_shr_fu_1316_p1[16];
p_add_i32_shr_reg_1623[17] <= p_add_i32_shr_fu_1316_p1[17];
p_add_i32_shr_reg_1623[18] <= p_add_i32_shr_fu_1316_p1[18];
p_add_i32_shr_reg_1623[19] <= p_add_i32_shr_fu_1316_p1[19];
p_add_i32_shr_reg_1623[20] <= p_add_i32_shr_fu_1316_p1[20];
p_add_i32_shr_reg_1623[21] <= p_add_i32_shr_fu_1316_p1[21];
p_add_i32_shr_reg_1623[22] <= p_add_i32_shr_fu_1316_p1[22];
p_add_i32_shr_reg_1623[23] <= p_add_i32_shr_fu_1316_p1[23];
p_add_i32_shr_reg_1623[24] <= p_add_i32_shr_fu_1316_p1[24];
p_add_i32_shr_reg_1623[25] <= p_add_i32_shr_fu_1316_p1[25];
p_add_i32_shr_reg_1623[26] <= p_add_i32_shr_fu_1316_p1[26];
p_add_i32_shr_reg_1623[27] <= p_add_i32_shr_fu_1316_p1[27];
p_add_i32_shr_reg_1623[28] <= p_add_i32_shr_fu_1316_p1[28];
p_add_i32_shr_reg_1623[29] <= p_add_i32_shr_fu_1316_p1[29];
        tmp_2_reg_1611 <= grp_fu_1075_p1;
        tmp_6_reg_1617 <= tmp_6_fu_1313_p1;
        tmp_reg_1606 <= tmp_fu_1308_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it26)) | (ap_const_logic_1 == ap_sig_cseq_ST_st183_fsm_101) | (ap_const_logic_1 == ap_sig_cseq_ST_st188_fsm_106) | (ap_const_logic_1 == ap_sig_cseq_ST_st227_fsm_145) | (ap_const_logic_1 == ap_sig_cseq_ST_st269_fsm_187))) begin
        reg_1093 <= grp_fu_1041_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it28)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29)) | (ap_const_logic_1 == ap_sig_cseq_ST_st192_fsm_110) | (ap_const_logic_1 == ap_sig_cseq_ST_st201_fsm_119) | (ap_const_logic_1 == ap_sig_cseq_ST_st236_fsm_154))) begin
        reg_1114 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond4_reg_1862 == ap_const_lv1_0) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & (ap_const_lv1_0 == exitcond2_reg_1906) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        reg_1124 <= gmem32_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st227_fsm_145) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it15)) | (ap_const_logic_1 == ap_sig_cseq_ST_st178_fsm_96) | ((ap_const_logic_1 == ap_sig_cseq_ST_st299_fsm_217) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)))) begin
        reg_1130 <= grp_fu_1065_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it15)) | (ap_const_logic_1 == ap_sig_cseq_ST_st231_fsm_149))) begin
        reg_1140 <= grp_fu_1065_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it24)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_59) & (ap_const_lv1_0 == exitcond_reg_2060)))) begin
        reg_1146 <= acc_returnA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it26)) | (ap_const_logic_1 == ap_sig_cseq_ST_st183_fsm_101) | (ap_const_logic_1 == ap_sig_cseq_ST_st188_fsm_106) | (ap_const_logic_1 == ap_sig_cseq_ST_st227_fsm_145))) begin
        reg_1159 <= grp_fu_1047_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it27)) | ((ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64)))) begin
        reg_1172 <= acc_weight_returnB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st183_fsm_101) | (ap_const_logic_1 == ap_sig_cseq_ST_st227_fsm_145) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it27)))) begin
        reg_1178 <= grp_fu_1051_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29)) | ((ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61)))) begin
        reg_1184 <= acc_weight_returnSquareA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st188_fsm_106) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29)))) begin
        reg_1190 <= grp_fu_1051_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st236_fsm_154) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it31)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it31)) | (ap_const_logic_1 == ap_sig_cseq_ST_st197_fsm_115))) begin
        reg_1210 <= grp_fu_1021_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it33)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it34)))) begin
        reg_1218 <= grp_fu_1025_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st227_fsm_145) | (ap_const_logic_1 == ap_sig_cseq_ST_st178_fsm_96))) begin
        reg_1224 <= grp_fu_1070_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st197_fsm_115) | (ap_const_logic_1 == ap_sig_cseq_ST_st240_fsm_158))) begin
        reg_1233 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_35)) begin
        smax_reg_1871 <= smax_fu_1380_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_59) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_returnA_1_reg_2114 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_returnB_1_reg_2119 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnA_1_reg_2129 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnB_1_reg_2139 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnSquareA_1_reg_2124 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnSquareB_1_reg_2134 <= grp_fu_1017_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == tmp_14_fu_1465_p2))) begin
        tmp_16_reg_1929[0] <= tmp_16_fu_1482_p1[0];
tmp_16_reg_1929[1] <= tmp_16_fu_1482_p1[1];
tmp_16_reg_1929[2] <= tmp_16_fu_1482_p1[2];
tmp_16_reg_1929[3] <= tmp_16_fu_1482_p1[3];
tmp_16_reg_1929[4] <= tmp_16_fu_1482_p1[4];
tmp_16_reg_1929[5] <= tmp_16_fu_1482_p1[5];
tmp_16_reg_1929[6] <= tmp_16_fu_1482_p1[6];
tmp_16_reg_1929[7] <= tmp_16_fu_1482_p1[7];
tmp_16_reg_1929[8] <= tmp_16_fu_1482_p1[8];
tmp_16_reg_1929[9] <= tmp_16_fu_1482_p1[9];
tmp_16_reg_1929[10] <= tmp_16_fu_1482_p1[10];
tmp_16_reg_1929[11] <= tmp_16_fu_1482_p1[11];
tmp_16_reg_1929[12] <= tmp_16_fu_1482_p1[12];
tmp_16_reg_1929[13] <= tmp_16_fu_1482_p1[13];
tmp_16_reg_1929[14] <= tmp_16_fu_1482_p1[14];
tmp_16_reg_1929[15] <= tmp_16_fu_1482_p1[15];
tmp_16_reg_1929[16] <= tmp_16_fu_1482_p1[16];
tmp_16_reg_1929[17] <= tmp_16_fu_1482_p1[17];
tmp_16_reg_1929[18] <= tmp_16_fu_1482_p1[18];
tmp_16_reg_1929[19] <= tmp_16_fu_1482_p1[19];
tmp_16_reg_1929[20] <= tmp_16_fu_1482_p1[20];
tmp_16_reg_1929[21] <= tmp_16_fu_1482_p1[21];
tmp_16_reg_1929[22] <= tmp_16_fu_1482_p1[22];
tmp_16_reg_1929[23] <= tmp_16_fu_1482_p1[23];
tmp_16_reg_1929[24] <= tmp_16_fu_1482_p1[24];
tmp_16_reg_1929[25] <= tmp_16_fu_1482_p1[25];
tmp_16_reg_1929[26] <= tmp_16_fu_1482_p1[26];
tmp_16_reg_1929[27] <= tmp_16_fu_1482_p1[27];
tmp_16_reg_1929[28] <= tmp_16_fu_1482_p1[28];
tmp_16_reg_1929[29] <= tmp_16_fu_1482_p1[29];
tmp_16_reg_1929[30] <= tmp_16_fu_1482_p1[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == tmp_59_i_fu_1287_p2))) begin
        tmp_1_reg_1595 <= tmp_1_fu_1303_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29))) begin
        tmp_24_reg_2045 <= grp_fu_1055_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it27))) begin
        tmp_26_reg_2035 <= grp_fu_1041_p2;
        tmp_31_reg_2040 <= grp_fu_1047_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29))) begin
        tmp_34_reg_2050 <= grp_fu_1055_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it34))) begin
        tmp_35_reg_2055 <= grp_fu_1029_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58) & (ap_const_lv1_0 == exitcond_fu_1504_p2))) begin
        tmp_57_reg_2069[0] <= tmp_57_fu_1516_p1[0];
tmp_57_reg_2069[1] <= tmp_57_fu_1516_p1[1];
tmp_57_reg_2069[2] <= tmp_57_fu_1516_p1[2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_61_cast_reg_1563[0] <= tmp_61_cast_fu_1248_p1[0];
tmp_61_cast_reg_1563[1] <= tmp_61_cast_fu_1248_p1[1];
tmp_61_cast_reg_1563[2] <= tmp_61_cast_fu_1248_p1[2];
tmp_61_cast_reg_1563[3] <= tmp_61_cast_fu_1248_p1[3];
tmp_61_cast_reg_1563[4] <= tmp_61_cast_fu_1248_p1[4];
tmp_61_cast_reg_1563[5] <= tmp_61_cast_fu_1248_p1[5];
tmp_61_cast_reg_1563[6] <= tmp_61_cast_fu_1248_p1[6];
tmp_61_cast_reg_1563[7] <= tmp_61_cast_fu_1248_p1[7];
tmp_61_cast_reg_1563[8] <= tmp_61_cast_fu_1248_p1[8];
tmp_61_cast_reg_1563[9] <= tmp_61_cast_fu_1248_p1[9];
tmp_61_cast_reg_1563[10] <= tmp_61_cast_fu_1248_p1[10];
tmp_61_cast_reg_1563[11] <= tmp_61_cast_fu_1248_p1[11];
tmp_61_cast_reg_1563[12] <= tmp_61_cast_fu_1248_p1[12];
tmp_61_cast_reg_1563[13] <= tmp_61_cast_fu_1248_p1[13];
tmp_61_cast_reg_1563[14] <= tmp_61_cast_fu_1248_p1[14];
tmp_61_cast_reg_1563[15] <= tmp_61_cast_fu_1248_p1[15];
tmp_61_cast_reg_1563[16] <= tmp_61_cast_fu_1248_p1[16];
tmp_61_cast_reg_1563[17] <= tmp_61_cast_fu_1248_p1[17];
tmp_61_cast_reg_1563[18] <= tmp_61_cast_fu_1248_p1[18];
tmp_61_cast_reg_1563[19] <= tmp_61_cast_fu_1248_p1[19];
tmp_61_cast_reg_1563[20] <= tmp_61_cast_fu_1248_p1[20];
tmp_61_cast_reg_1563[21] <= tmp_61_cast_fu_1248_p1[21];
tmp_61_cast_reg_1563[22] <= tmp_61_cast_fu_1248_p1[22];
tmp_61_cast_reg_1563[23] <= tmp_61_cast_fu_1248_p1[23];
tmp_61_cast_reg_1563[24] <= tmp_61_cast_fu_1248_p1[24];
tmp_61_cast_reg_1563[25] <= tmp_61_cast_fu_1248_p1[25];
tmp_61_cast_reg_1563[26] <= tmp_61_cast_fu_1248_p1[26];
tmp_61_cast_reg_1563[27] <= tmp_61_cast_fu_1248_p1[27];
tmp_61_cast_reg_1563[28] <= tmp_61_cast_fu_1248_p1[28];
tmp_61_cast_reg_1563[29] <= tmp_61_cast_fu_1248_p1[29];
        tmp_62_cast_reg_1568[0] <= tmp_62_cast_fu_1262_p1[0];
tmp_62_cast_reg_1568[1] <= tmp_62_cast_fu_1262_p1[1];
tmp_62_cast_reg_1568[2] <= tmp_62_cast_fu_1262_p1[2];
tmp_62_cast_reg_1568[3] <= tmp_62_cast_fu_1262_p1[3];
tmp_62_cast_reg_1568[4] <= tmp_62_cast_fu_1262_p1[4];
tmp_62_cast_reg_1568[5] <= tmp_62_cast_fu_1262_p1[5];
tmp_62_cast_reg_1568[6] <= tmp_62_cast_fu_1262_p1[6];
tmp_62_cast_reg_1568[7] <= tmp_62_cast_fu_1262_p1[7];
tmp_62_cast_reg_1568[8] <= tmp_62_cast_fu_1262_p1[8];
tmp_62_cast_reg_1568[9] <= tmp_62_cast_fu_1262_p1[9];
tmp_62_cast_reg_1568[10] <= tmp_62_cast_fu_1262_p1[10];
tmp_62_cast_reg_1568[11] <= tmp_62_cast_fu_1262_p1[11];
tmp_62_cast_reg_1568[12] <= tmp_62_cast_fu_1262_p1[12];
tmp_62_cast_reg_1568[13] <= tmp_62_cast_fu_1262_p1[13];
tmp_62_cast_reg_1568[14] <= tmp_62_cast_fu_1262_p1[14];
tmp_62_cast_reg_1568[15] <= tmp_62_cast_fu_1262_p1[15];
tmp_62_cast_reg_1568[16] <= tmp_62_cast_fu_1262_p1[16];
tmp_62_cast_reg_1568[17] <= tmp_62_cast_fu_1262_p1[17];
tmp_62_cast_reg_1568[18] <= tmp_62_cast_fu_1262_p1[18];
tmp_62_cast_reg_1568[19] <= tmp_62_cast_fu_1262_p1[19];
tmp_62_cast_reg_1568[20] <= tmp_62_cast_fu_1262_p1[20];
tmp_62_cast_reg_1568[21] <= tmp_62_cast_fu_1262_p1[21];
tmp_62_cast_reg_1568[22] <= tmp_62_cast_fu_1262_p1[22];
tmp_62_cast_reg_1568[23] <= tmp_62_cast_fu_1262_p1[23];
tmp_62_cast_reg_1568[24] <= tmp_62_cast_fu_1262_p1[24];
tmp_62_cast_reg_1568[25] <= tmp_62_cast_fu_1262_p1[25];
tmp_62_cast_reg_1568[26] <= tmp_62_cast_fu_1262_p1[26];
tmp_62_cast_reg_1568[27] <= tmp_62_cast_fu_1262_p1[27];
tmp_62_cast_reg_1568[28] <= tmp_62_cast_fu_1262_p1[28];
tmp_62_cast_reg_1568[29] <= tmp_62_cast_fu_1262_p1[29];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st264_fsm_182)) begin
        volatilityA_reg_2159 <= grp_fu_1078_p2;
        volatilityB_reg_2164 <= grp_fu_1083_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        weight_rom_load_1_reg_1601 <= weight_rom_q0;
    end
end

/// acc_returnA_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it24 or ap_reg_ppiten_pp3_it0 or acc_returnA_addr_reg_1628 or acc_returnA_addr_7_reg_1698 or acc_returnA_addr_4_reg_1768 or ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it23 or ap_sig_cseq_ST_pp3_stg0_fsm_58 or tmp_57_fu_1516_p1 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_returnA_address0 = acc_returnA_addr_4_reg_1768;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_returnA_address0 = acc_returnA_addr_7_reg_1698;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnA_address0 = acc_returnA_addr_reg_1628;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58))) begin
        acc_returnA_address0 = tmp_57_fu_1516_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it24))) begin
        acc_returnA_address0 = ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it23;
    end else begin
        acc_returnA_address0 = 'bx;
    end
end

/// acc_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or acc_returnA_addr_6_reg_1663 or acc_returnA_addr_3_reg_1733 or acc_returnA_addr_5_reg_1803 or ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it29 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_returnA_address1 = ap_reg_ppstg_acc_returnA_addr_1_reg_1975_pp2_it29;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_returnA_address1 = acc_returnA_addr_5_reg_1803;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_returnA_address1 = acc_returnA_addr_3_reg_1733;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnA_address1 = acc_returnA_addr_6_reg_1663;
    end else begin
        acc_returnA_address1 = 'bx;
    end
end

/// acc_returnA_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it24 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_58 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58)) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it24)))) begin
        acc_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_returnA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        acc_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_returnA_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or reg_1114 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_returnA_d1 = reg_1114;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_returnA_d1 = ap_const_lv32_0;
    end else begin
        acc_returnA_d1 = 'bx;
    end
end

/// acc_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_returnA_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it29 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29)))) begin
        acc_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_returnB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp3_stg1_fsm_59 or ap_reg_ppiten_pp3_it0 or acc_returnB_addr_reg_1633 or acc_returnB_addr_7_reg_1703 or acc_returnB_addr_4_reg_1773 or ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it29 or tmp_57_reg_2069 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30))) begin
        acc_returnB_address0 = ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it29;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_returnB_address0 = acc_returnB_addr_4_reg_1773;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_returnB_address0 = acc_returnB_addr_7_reg_1703;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnB_address0 = acc_returnB_addr_reg_1633;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_59) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
        acc_returnB_address0 = tmp_57_reg_2069;
    end else begin
        acc_returnB_address0 = 'bx;
    end
end

/// acc_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it24 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or acc_returnB_addr_6_reg_1668 or acc_returnB_addr_3_reg_1738 or acc_returnB_addr_5_reg_1808 or ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it24 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_returnB_address1 = acc_returnB_addr_5_reg_1808;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_returnB_address1 = acc_returnB_addr_3_reg_1738;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnB_address1 = acc_returnB_addr_6_reg_1668;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it24) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_returnB_address1 = ap_reg_ppstg_acc_returnB_addr_1_reg_1981_pp2_it24;
    end else begin
        acc_returnB_address1 = 'bx;
    end
end

/// acc_returnB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp3_stg1_fsm_59 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_59) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30)))) begin
        acc_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it24 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it24) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        acc_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_returnB_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it30 or reg_1114 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30))) begin
        acc_returnB_d0 = reg_1114;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_returnB_d0 = ap_const_lv32_0;
    end else begin
        acc_returnB_d0 = 'bx;
    end
end

/// acc_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it30 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it29 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it29)))) begin
        acc_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_returnB_we1 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it32 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg3_fsm_61 or acc_weight_returnA_addr_reg_1643 or acc_weight_returnA_addr_7_reg_1713 or acc_weight_returnA_addr_4_reg_1783 or ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it31 or tmp_57_reg_2069 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32))) begin
        acc_weight_returnA_address0 = ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it31;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_4_reg_1783;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_7_reg_1713;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_reg_1643;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61))) begin
        acc_weight_returnA_address0 = tmp_57_reg_2069;
    end else begin
        acc_weight_returnA_address0 = 'bx;
    end
end

/// acc_weight_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it26 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or acc_weight_returnA_addr_6_reg_1678 or acc_weight_returnA_addr_3_reg_1748 or acc_weight_returnA_addr_5_reg_1818 or ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it26 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_5_reg_1818;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_3_reg_1748;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_6_reg_1678;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it26) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_weight_returnA_address1 = ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1999_pp2_it26;
    end else begin
        acc_weight_returnA_address1 = 'bx;
    end
end

/// acc_weight_returnA_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it32 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg3_fsm_61 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61)) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32)))) begin
        acc_weight_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it26 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it26) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        acc_weight_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it32 or reg_1210 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32))) begin
        acc_weight_returnA_d0 = reg_1210;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnA_d0 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_d0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or acc_weight_returnA_returnB_add_reg_1658 or acc_weight_returnA_returnB_add_2_reg_1728 or acc_weight_returnA_returnB_add_4_reg_1798 or ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it34 or tmp_57_reg_2069 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnA_returnB_address0 = ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_4_reg_1798;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_2_reg_1728;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_reg_1658;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63))) begin
        acc_weight_returnA_returnB_address0 = tmp_57_reg_2069;
    end else begin
        acc_weight_returnA_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or acc_weight_returnA_returnB_add_1_reg_1693 or acc_weight_returnA_returnB_add_3_reg_1763 or acc_weight_returnA_returnB_add_5_reg_1833 or ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it29 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_5_reg_1833;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_3_reg_1763;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_1_reg_1693;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_weight_returnA_returnB_address1 = ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_2011_pp2_it29;
    end else begin
        acc_weight_returnA_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63)) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35)))) begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or tmp_35_reg_2055 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnA_returnB_d0 = tmp_35_reg_2055;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnA_returnB_d0 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_returnB_d0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it34 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it34)))) begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_we1 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it32 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it31 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it31)))) begin
        acc_weight_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we1 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or acc_weight_returnB_addr_reg_1653 or acc_weight_returnB_addr_7_reg_1723 or acc_weight_returnB_addr_4_reg_1793 or ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it26 or tmp_57_reg_2069 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_4_reg_1793;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_7_reg_1723;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_reg_1653;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63))) begin
        acc_weight_returnB_address0 = tmp_57_reg_2069;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it27))) begin
        acc_weight_returnB_address0 = ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it26;
    end else begin
        acc_weight_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or acc_weight_returnB_addr_6_reg_1688 or acc_weight_returnB_addr_3_reg_1758 or acc_weight_returnB_addr_5_reg_1828 or ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it32 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_weight_returnB_address1 = ap_reg_ppstg_acc_weight_returnB_addr_1_reg_2005_pp2_it32;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_5_reg_1828;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_3_reg_1758;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_6_reg_1688;
    end else begin
        acc_weight_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63)) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it27)))) begin
        acc_weight_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        acc_weight_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1210 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_weight_returnB_d1 = reg_1210;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnB_d1 = 'bx;
    end
end

/// acc_weight_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it32 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it32)))) begin
        acc_weight_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it29 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_60 or acc_weight_returnSquareA_addr_reg_1638 or acc_weight_returnSquareA_addr_7_reg_1708 or acc_weight_returnSquareA_addr_4_reg_1778 or ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it28 or tmp_57_reg_2069 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_4_reg_1778;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_7_reg_1708;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_reg_1638;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60))) begin
        acc_weight_returnSquareA_address0 = tmp_57_reg_2069;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it29))) begin
        acc_weight_returnSquareA_address0 = ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it28;
    end else begin
        acc_weight_returnSquareA_address0 = 'bx;
    end
end

/// acc_weight_returnSquareA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or acc_weight_returnSquareA_addr_6_reg_1673 or acc_weight_returnSquareA_addr_3_reg_1743 or acc_weight_returnSquareA_addr_5_reg_1813 or ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it34 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_weight_returnSquareA_address1 = ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1987_pp2_it34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_5_reg_1813;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_3_reg_1743;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_6_reg_1673;
    end else begin
        acc_weight_returnSquareA_address1 = 'bx;
    end
end

/// acc_weight_returnSquareA_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it29 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_60 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60)) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it29)))) begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1218 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_weight_returnSquareA_d1 = reg_1218;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnSquareA_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareA_d1 = 'bx;
    end
end

/// acc_weight_returnSquareA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnSquareA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it34 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it34)))) begin
        acc_weight_returnSquareA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg4_fsm_62 or acc_weight_returnSquareB_addr_reg_1648 or acc_weight_returnSquareB_addr_7_reg_1718 or acc_weight_returnSquareB_addr_4_reg_1788 or ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it34 or tmp_57_reg_2069 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnSquareB_address0 = ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_4_reg_1788;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_7_reg_1718;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_reg_1648;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62))) begin
        acc_weight_returnSquareB_address0 = tmp_57_reg_2069;
    end else begin
        acc_weight_returnSquareB_address0 = 'bx;
    end
end

/// acc_weight_returnSquareB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or acc_weight_returnSquareB_addr_6_reg_1683 or acc_weight_returnSquareB_addr_3_reg_1753 or acc_weight_returnSquareB_addr_5_reg_1823 or ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it29 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_5_reg_1823;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_3_reg_1753;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_6_reg_1683;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        acc_weight_returnSquareB_address1 = ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1993_pp2_it29;
    end else begin
        acc_weight_returnSquareB_address1 = 'bx;
    end
end

/// acc_weight_returnSquareB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg4_fsm_62 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62)) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35)))) begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or reg_1218 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnSquareB_d0 = reg_1218;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnSquareB_d0 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareB_d0 = 'bx;
    end
end

/// acc_weight_returnSquareB_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it35 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it34 or ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it34)))) begin
        acc_weight_returnSquareB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_we1 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st57_fsm_52)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_52))) begin
        acc_weight_returnSquareB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27 or tmp_4_fu_1329_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & (ap_const_lv1_0 == tmp_4_fu_1329_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27 or tmp_4_fu_1329_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & (ap_const_lv1_0 == tmp_4_fu_1329_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_34 assign process. ///
always @ (ap_sig_bdd_427)
begin
    if (ap_sig_bdd_427) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_50 assign process. ///
always @ (ap_sig_bdd_452)
begin
    if (ap_sig_bdd_452) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg0_fsm_54 assign process. ///
always @ (ap_sig_bdd_475)
begin
    if (ap_sig_bdd_475) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg1_fsm_55 assign process. ///
always @ (ap_sig_bdd_697)
begin
    if (ap_sig_bdd_697) begin
        ap_sig_cseq_ST_pp2_stg1_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg1_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg0_fsm_58 assign process. ///
always @ (ap_sig_bdd_1470)
begin
    if (ap_sig_bdd_1470) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg1_fsm_59 assign process. ///
always @ (ap_sig_bdd_804)
begin
    if (ap_sig_bdd_804) begin
        ap_sig_cseq_ST_pp3_stg1_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg1_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg2_fsm_60 assign process. ///
always @ (ap_sig_bdd_828)
begin
    if (ap_sig_bdd_828) begin
        ap_sig_cseq_ST_pp3_stg2_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg2_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg3_fsm_61 assign process. ///
always @ (ap_sig_bdd_896)
begin
    if (ap_sig_bdd_896) begin
        ap_sig_cseq_ST_pp3_stg3_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg3_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg4_fsm_62 assign process. ///
always @ (ap_sig_bdd_854)
begin
    if (ap_sig_bdd_854) begin
        ap_sig_cseq_ST_pp3_stg4_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg4_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg5_fsm_63 assign process. ///
always @ (ap_sig_bdd_921)
begin
    if (ap_sig_bdd_921) begin
        ap_sig_cseq_ST_pp3_stg5_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg5_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg6_fsm_64 assign process. ///
always @ (ap_sig_bdd_873)
begin
    if (ap_sig_bdd_873) begin
        ap_sig_cseq_ST_pp3_stg6_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg6_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg7_fsm_65 assign process. ///
always @ (ap_sig_bdd_1520)
begin
    if (ap_sig_bdd_1520) begin
        ap_sig_cseq_ST_pp3_stg7_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg7_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg8_fsm_66 assign process. ///
always @ (ap_sig_bdd_1587)
begin
    if (ap_sig_bdd_1587) begin
        ap_sig_cseq_ST_pp3_stg8_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg8_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_1969)
begin
    if (ap_sig_bdd_1969) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st130_fsm_56 assign process. ///
always @ (ap_sig_bdd_1866)
begin
    if (ap_sig_bdd_1866) begin
        ap_sig_cseq_ST_st130_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st130_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st131_fsm_57 assign process. ///
always @ (ap_sig_bdd_675)
begin
    if (ap_sig_bdd_675) begin
        ap_sig_cseq_ST_st131_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st131_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st149_fsm_67 assign process. ///
always @ (ap_sig_bdd_1531)
begin
    if (ap_sig_bdd_1531) begin
        ap_sig_cseq_ST_st149_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st149_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st150_fsm_68 assign process. ///
always @ (ap_sig_bdd_2332)
begin
    if (ap_sig_bdd_2332) begin
        ap_sig_cseq_ST_st150_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st150_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st151_fsm_69 assign process. ///
always @ (ap_sig_bdd_2340)
begin
    if (ap_sig_bdd_2340) begin
        ap_sig_cseq_ST_st151_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st151_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st152_fsm_70 assign process. ///
always @ (ap_sig_bdd_2348)
begin
    if (ap_sig_bdd_2348) begin
        ap_sig_cseq_ST_st152_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st152_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st153_fsm_71 assign process. ///
always @ (ap_sig_bdd_2356)
begin
    if (ap_sig_bdd_2356) begin
        ap_sig_cseq_ST_st153_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st153_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st154_fsm_72 assign process. ///
always @ (ap_sig_bdd_2364)
begin
    if (ap_sig_bdd_2364) begin
        ap_sig_cseq_ST_st154_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st154_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st155_fsm_73 assign process. ///
always @ (ap_sig_bdd_2372)
begin
    if (ap_sig_bdd_2372) begin
        ap_sig_cseq_ST_st155_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st155_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st156_fsm_74 assign process. ///
always @ (ap_sig_bdd_2380)
begin
    if (ap_sig_bdd_2380) begin
        ap_sig_cseq_ST_st156_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st156_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st157_fsm_75 assign process. ///
always @ (ap_sig_bdd_2388)
begin
    if (ap_sig_bdd_2388) begin
        ap_sig_cseq_ST_st157_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st157_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st158_fsm_76 assign process. ///
always @ (ap_sig_bdd_2396)
begin
    if (ap_sig_bdd_2396) begin
        ap_sig_cseq_ST_st158_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st158_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st159_fsm_77 assign process. ///
always @ (ap_sig_bdd_2404)
begin
    if (ap_sig_bdd_2404) begin
        ap_sig_cseq_ST_st159_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st159_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st160_fsm_78 assign process. ///
always @ (ap_sig_bdd_2412)
begin
    if (ap_sig_bdd_2412) begin
        ap_sig_cseq_ST_st160_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st160_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st161_fsm_79 assign process. ///
always @ (ap_sig_bdd_2420)
begin
    if (ap_sig_bdd_2420) begin
        ap_sig_cseq_ST_st161_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st161_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st162_fsm_80 assign process. ///
always @ (ap_sig_bdd_2428)
begin
    if (ap_sig_bdd_2428) begin
        ap_sig_cseq_ST_st162_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st162_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st163_fsm_81 assign process. ///
always @ (ap_sig_bdd_2436)
begin
    if (ap_sig_bdd_2436) begin
        ap_sig_cseq_ST_st163_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st163_fsm_81 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st164_fsm_82 assign process. ///
always @ (ap_sig_bdd_2444)
begin
    if (ap_sig_bdd_2444) begin
        ap_sig_cseq_ST_st164_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st164_fsm_82 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st165_fsm_83 assign process. ///
always @ (ap_sig_bdd_2452)
begin
    if (ap_sig_bdd_2452) begin
        ap_sig_cseq_ST_st165_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st165_fsm_83 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st166_fsm_84 assign process. ///
always @ (ap_sig_bdd_2460)
begin
    if (ap_sig_bdd_2460) begin
        ap_sig_cseq_ST_st166_fsm_84 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st166_fsm_84 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st167_fsm_85 assign process. ///
always @ (ap_sig_bdd_2468)
begin
    if (ap_sig_bdd_2468) begin
        ap_sig_cseq_ST_st167_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st167_fsm_85 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st168_fsm_86 assign process. ///
always @ (ap_sig_bdd_2476)
begin
    if (ap_sig_bdd_2476) begin
        ap_sig_cseq_ST_st168_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st168_fsm_86 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st169_fsm_87 assign process. ///
always @ (ap_sig_bdd_2484)
begin
    if (ap_sig_bdd_2484) begin
        ap_sig_cseq_ST_st169_fsm_87 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st169_fsm_87 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st170_fsm_88 assign process. ///
always @ (ap_sig_bdd_2492)
begin
    if (ap_sig_bdd_2492) begin
        ap_sig_cseq_ST_st170_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st170_fsm_88 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st171_fsm_89 assign process. ///
always @ (ap_sig_bdd_2500)
begin
    if (ap_sig_bdd_2500) begin
        ap_sig_cseq_ST_st171_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st171_fsm_89 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st172_fsm_90 assign process. ///
always @ (ap_sig_bdd_2508)
begin
    if (ap_sig_bdd_2508) begin
        ap_sig_cseq_ST_st172_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st172_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st173_fsm_91 assign process. ///
always @ (ap_sig_bdd_2516)
begin
    if (ap_sig_bdd_2516) begin
        ap_sig_cseq_ST_st173_fsm_91 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st173_fsm_91 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st174_fsm_92 assign process. ///
always @ (ap_sig_bdd_2524)
begin
    if (ap_sig_bdd_2524) begin
        ap_sig_cseq_ST_st174_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st174_fsm_92 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st175_fsm_93 assign process. ///
always @ (ap_sig_bdd_2532)
begin
    if (ap_sig_bdd_2532) begin
        ap_sig_cseq_ST_st175_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st175_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st176_fsm_94 assign process. ///
always @ (ap_sig_bdd_2540)
begin
    if (ap_sig_bdd_2540) begin
        ap_sig_cseq_ST_st176_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st176_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st177_fsm_95 assign process. ///
always @ (ap_sig_bdd_2548)
begin
    if (ap_sig_bdd_2548) begin
        ap_sig_cseq_ST_st177_fsm_95 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st177_fsm_95 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st178_fsm_96 assign process. ///
always @ (ap_sig_bdd_753)
begin
    if (ap_sig_bdd_753) begin
        ap_sig_cseq_ST_st178_fsm_96 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st178_fsm_96 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st179_fsm_97 assign process. ///
always @ (ap_sig_bdd_2033)
begin
    if (ap_sig_bdd_2033) begin
        ap_sig_cseq_ST_st179_fsm_97 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st179_fsm_97 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st183_fsm_101 assign process. ///
always @ (ap_sig_bdd_603)
begin
    if (ap_sig_bdd_603) begin
        ap_sig_cseq_ST_st183_fsm_101 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st183_fsm_101 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st184_fsm_102 assign process. ///
always @ (ap_sig_bdd_1981)
begin
    if (ap_sig_bdd_1981) begin
        ap_sig_cseq_ST_st184_fsm_102 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st184_fsm_102 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st188_fsm_106 assign process. ///
always @ (ap_sig_bdd_611)
begin
    if (ap_sig_bdd_611) begin
        ap_sig_cseq_ST_st188_fsm_106 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st188_fsm_106 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st189_fsm_107 assign process. ///
always @ (ap_sig_bdd_1988)
begin
    if (ap_sig_bdd_1988) begin
        ap_sig_cseq_ST_st189_fsm_107 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st189_fsm_107 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_685)
begin
    if (ap_sig_bdd_685) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st192_fsm_110 assign process. ///
always @ (ap_sig_bdd_709)
begin
    if (ap_sig_bdd_709) begin
        ap_sig_cseq_ST_st192_fsm_110 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st192_fsm_110 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st193_fsm_111 assign process. ///
always @ (ap_sig_bdd_1995)
begin
    if (ap_sig_bdd_1995) begin
        ap_sig_cseq_ST_st193_fsm_111 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st193_fsm_111 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st197_fsm_115 assign process. ///
always @ (ap_sig_bdd_946)
begin
    if (ap_sig_bdd_946) begin
        ap_sig_cseq_ST_st197_fsm_115 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st197_fsm_115 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st198_fsm_116 assign process. ///
always @ (ap_sig_bdd_2065)
begin
    if (ap_sig_bdd_2065) begin
        ap_sig_cseq_ST_st198_fsm_116 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st198_fsm_116 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st199_fsm_117 assign process. ///
always @ (ap_sig_bdd_2558)
begin
    if (ap_sig_bdd_2558) begin
        ap_sig_cseq_ST_st199_fsm_117 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st199_fsm_117 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_1692)
begin
    if (ap_sig_bdd_1692) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_240)
begin
    if (ap_sig_bdd_240) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st200_fsm_118 assign process. ///
always @ (ap_sig_bdd_2566)
begin
    if (ap_sig_bdd_2566) begin
        ap_sig_cseq_ST_st200_fsm_118 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st200_fsm_118 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st201_fsm_119 assign process. ///
always @ (ap_sig_bdd_717)
begin
    if (ap_sig_bdd_717) begin
        ap_sig_cseq_ST_st201_fsm_119 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st201_fsm_119 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st202_fsm_120 assign process. ///
always @ (ap_sig_bdd_2072)
begin
    if (ap_sig_bdd_2072) begin
        ap_sig_cseq_ST_st202_fsm_120 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st202_fsm_120 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st203_fsm_121 assign process. ///
always @ (ap_sig_bdd_2576)
begin
    if (ap_sig_bdd_2576) begin
        ap_sig_cseq_ST_st203_fsm_121 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st203_fsm_121 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st204_fsm_122 assign process. ///
always @ (ap_sig_bdd_2584)
begin
    if (ap_sig_bdd_2584) begin
        ap_sig_cseq_ST_st204_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st204_fsm_122 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st205_fsm_123 assign process. ///
always @ (ap_sig_bdd_2592)
begin
    if (ap_sig_bdd_2592) begin
        ap_sig_cseq_ST_st205_fsm_123 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st205_fsm_123 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st206_fsm_124 assign process. ///
always @ (ap_sig_bdd_2600)
begin
    if (ap_sig_bdd_2600) begin
        ap_sig_cseq_ST_st206_fsm_124 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st206_fsm_124 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st207_fsm_125 assign process. ///
always @ (ap_sig_bdd_2608)
begin
    if (ap_sig_bdd_2608) begin
        ap_sig_cseq_ST_st207_fsm_125 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st207_fsm_125 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st208_fsm_126 assign process. ///
always @ (ap_sig_bdd_2616)
begin
    if (ap_sig_bdd_2616) begin
        ap_sig_cseq_ST_st208_fsm_126 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st208_fsm_126 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st209_fsm_127 assign process. ///
always @ (ap_sig_bdd_2624)
begin
    if (ap_sig_bdd_2624) begin
        ap_sig_cseq_ST_st209_fsm_127 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st209_fsm_127 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_2091)
begin
    if (ap_sig_bdd_2091) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st210_fsm_128 assign process. ///
always @ (ap_sig_bdd_2632)
begin
    if (ap_sig_bdd_2632) begin
        ap_sig_cseq_ST_st210_fsm_128 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st210_fsm_128 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st211_fsm_129 assign process. ///
always @ (ap_sig_bdd_2640)
begin
    if (ap_sig_bdd_2640) begin
        ap_sig_cseq_ST_st211_fsm_129 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st211_fsm_129 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st212_fsm_130 assign process. ///
always @ (ap_sig_bdd_2648)
begin
    if (ap_sig_bdd_2648) begin
        ap_sig_cseq_ST_st212_fsm_130 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st212_fsm_130 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st213_fsm_131 assign process. ///
always @ (ap_sig_bdd_2656)
begin
    if (ap_sig_bdd_2656) begin
        ap_sig_cseq_ST_st213_fsm_131 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st213_fsm_131 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st214_fsm_132 assign process. ///
always @ (ap_sig_bdd_2664)
begin
    if (ap_sig_bdd_2664) begin
        ap_sig_cseq_ST_st214_fsm_132 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st214_fsm_132 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st215_fsm_133 assign process. ///
always @ (ap_sig_bdd_2672)
begin
    if (ap_sig_bdd_2672) begin
        ap_sig_cseq_ST_st215_fsm_133 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st215_fsm_133 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st216_fsm_134 assign process. ///
always @ (ap_sig_bdd_2680)
begin
    if (ap_sig_bdd_2680) begin
        ap_sig_cseq_ST_st216_fsm_134 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st216_fsm_134 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st217_fsm_135 assign process. ///
always @ (ap_sig_bdd_2688)
begin
    if (ap_sig_bdd_2688) begin
        ap_sig_cseq_ST_st217_fsm_135 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st217_fsm_135 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st218_fsm_136 assign process. ///
always @ (ap_sig_bdd_2696)
begin
    if (ap_sig_bdd_2696) begin
        ap_sig_cseq_ST_st218_fsm_136 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st218_fsm_136 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st219_fsm_137 assign process. ///
always @ (ap_sig_bdd_2704)
begin
    if (ap_sig_bdd_2704) begin
        ap_sig_cseq_ST_st219_fsm_137 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st219_fsm_137 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st220_fsm_138 assign process. ///
always @ (ap_sig_bdd_2712)
begin
    if (ap_sig_bdd_2712) begin
        ap_sig_cseq_ST_st220_fsm_138 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st220_fsm_138 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st221_fsm_139 assign process. ///
always @ (ap_sig_bdd_2720)
begin
    if (ap_sig_bdd_2720) begin
        ap_sig_cseq_ST_st221_fsm_139 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st221_fsm_139 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st222_fsm_140 assign process. ///
always @ (ap_sig_bdd_2728)
begin
    if (ap_sig_bdd_2728) begin
        ap_sig_cseq_ST_st222_fsm_140 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st222_fsm_140 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st223_fsm_141 assign process. ///
always @ (ap_sig_bdd_2040)
begin
    if (ap_sig_bdd_2040) begin
        ap_sig_cseq_ST_st223_fsm_141 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st223_fsm_141 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st224_fsm_142 assign process. ///
always @ (ap_sig_bdd_2737)
begin
    if (ap_sig_bdd_2737) begin
        ap_sig_cseq_ST_st224_fsm_142 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st224_fsm_142 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st225_fsm_143 assign process. ///
always @ (ap_sig_bdd_2745)
begin
    if (ap_sig_bdd_2745) begin
        ap_sig_cseq_ST_st225_fsm_143 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st225_fsm_143 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st226_fsm_144 assign process. ///
always @ (ap_sig_bdd_2753)
begin
    if (ap_sig_bdd_2753) begin
        ap_sig_cseq_ST_st226_fsm_144 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st226_fsm_144 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st227_fsm_145 assign process. ///
always @ (ap_sig_bdd_619)
begin
    if (ap_sig_bdd_619) begin
        ap_sig_cseq_ST_st227_fsm_145 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st227_fsm_145 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st228_fsm_146 assign process. ///
always @ (ap_sig_bdd_2002)
begin
    if (ap_sig_bdd_2002) begin
        ap_sig_cseq_ST_st228_fsm_146 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st228_fsm_146 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st229_fsm_147 assign process. ///
always @ (ap_sig_bdd_2763)
begin
    if (ap_sig_bdd_2763) begin
        ap_sig_cseq_ST_st229_fsm_147 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st229_fsm_147 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st230_fsm_148 assign process. ///
always @ (ap_sig_bdd_2771)
begin
    if (ap_sig_bdd_2771) begin
        ap_sig_cseq_ST_st230_fsm_148 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st230_fsm_148 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st231_fsm_149 assign process. ///
always @ (ap_sig_bdd_785)
begin
    if (ap_sig_bdd_785) begin
        ap_sig_cseq_ST_st231_fsm_149 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st231_fsm_149 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st232_fsm_150 assign process. ///
always @ (ap_sig_bdd_2009)
begin
    if (ap_sig_bdd_2009) begin
        ap_sig_cseq_ST_st232_fsm_150 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st232_fsm_150 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st236_fsm_154 assign process. ///
always @ (ap_sig_bdd_725)
begin
    if (ap_sig_bdd_725) begin
        ap_sig_cseq_ST_st236_fsm_154 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st236_fsm_154 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st237_fsm_155 assign process. ///
always @ (ap_sig_bdd_2099)
begin
    if (ap_sig_bdd_2099) begin
        ap_sig_cseq_ST_st237_fsm_155 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st237_fsm_155 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st240_fsm_158 assign process. ///
always @ (ap_sig_bdd_970)
begin
    if (ap_sig_bdd_970) begin
        ap_sig_cseq_ST_st240_fsm_158 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st240_fsm_158 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st264_fsm_182 assign process. ///
always @ (ap_sig_bdd_1542)
begin
    if (ap_sig_bdd_1542) begin
        ap_sig_cseq_ST_st264_fsm_182 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st264_fsm_182 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st265_fsm_183 assign process. ///
always @ (ap_sig_bdd_2048)
begin
    if (ap_sig_bdd_2048) begin
        ap_sig_cseq_ST_st265_fsm_183 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st265_fsm_183 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st269_fsm_187 assign process. ///
always @ (ap_sig_bdd_627)
begin
    if (ap_sig_bdd_627) begin
        ap_sig_cseq_ST_st269_fsm_187 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st269_fsm_187 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st270_fsm_188 assign process. ///
always @ (ap_sig_bdd_2079)
begin
    if (ap_sig_bdd_2079) begin
        ap_sig_cseq_ST_st270_fsm_188 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st270_fsm_188 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st271_fsm_189 assign process. ///
always @ (ap_sig_bdd_2781)
begin
    if (ap_sig_bdd_2781) begin
        ap_sig_cseq_ST_st271_fsm_189 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st271_fsm_189 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st272_fsm_190 assign process. ///
always @ (ap_sig_bdd_2789)
begin
    if (ap_sig_bdd_2789) begin
        ap_sig_cseq_ST_st272_fsm_190 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st272_fsm_190 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st273_fsm_191 assign process. ///
always @ (ap_sig_bdd_2797)
begin
    if (ap_sig_bdd_2797) begin
        ap_sig_cseq_ST_st273_fsm_191 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st273_fsm_191 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st274_fsm_192 assign process. ///
always @ (ap_sig_bdd_2805)
begin
    if (ap_sig_bdd_2805) begin
        ap_sig_cseq_ST_st274_fsm_192 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st274_fsm_192 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st275_fsm_193 assign process. ///
always @ (ap_sig_bdd_2813)
begin
    if (ap_sig_bdd_2813) begin
        ap_sig_cseq_ST_st275_fsm_193 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st275_fsm_193 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st276_fsm_194 assign process. ///
always @ (ap_sig_bdd_2821)
begin
    if (ap_sig_bdd_2821) begin
        ap_sig_cseq_ST_st276_fsm_194 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st276_fsm_194 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st277_fsm_195 assign process. ///
always @ (ap_sig_bdd_2829)
begin
    if (ap_sig_bdd_2829) begin
        ap_sig_cseq_ST_st277_fsm_195 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st277_fsm_195 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st278_fsm_196 assign process. ///
always @ (ap_sig_bdd_2837)
begin
    if (ap_sig_bdd_2837) begin
        ap_sig_cseq_ST_st278_fsm_196 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st278_fsm_196 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st279_fsm_197 assign process. ///
always @ (ap_sig_bdd_2845)
begin
    if (ap_sig_bdd_2845) begin
        ap_sig_cseq_ST_st279_fsm_197 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st279_fsm_197 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_1019)
begin
    if (ap_sig_bdd_1019) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st280_fsm_198 assign process. ///
always @ (ap_sig_bdd_2853)
begin
    if (ap_sig_bdd_2853) begin
        ap_sig_cseq_ST_st280_fsm_198 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st280_fsm_198 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st281_fsm_199 assign process. ///
always @ (ap_sig_bdd_2861)
begin
    if (ap_sig_bdd_2861) begin
        ap_sig_cseq_ST_st281_fsm_199 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st281_fsm_199 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st282_fsm_200 assign process. ///
always @ (ap_sig_bdd_2869)
begin
    if (ap_sig_bdd_2869) begin
        ap_sig_cseq_ST_st282_fsm_200 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st282_fsm_200 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st283_fsm_201 assign process. ///
always @ (ap_sig_bdd_2877)
begin
    if (ap_sig_bdd_2877) begin
        ap_sig_cseq_ST_st283_fsm_201 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st283_fsm_201 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st284_fsm_202 assign process. ///
always @ (ap_sig_bdd_2885)
begin
    if (ap_sig_bdd_2885) begin
        ap_sig_cseq_ST_st284_fsm_202 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st284_fsm_202 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st285_fsm_203 assign process. ///
always @ (ap_sig_bdd_2893)
begin
    if (ap_sig_bdd_2893) begin
        ap_sig_cseq_ST_st285_fsm_203 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st285_fsm_203 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st286_fsm_204 assign process. ///
always @ (ap_sig_bdd_2901)
begin
    if (ap_sig_bdd_2901) begin
        ap_sig_cseq_ST_st286_fsm_204 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st286_fsm_204 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st287_fsm_205 assign process. ///
always @ (ap_sig_bdd_2909)
begin
    if (ap_sig_bdd_2909) begin
        ap_sig_cseq_ST_st287_fsm_205 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st287_fsm_205 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st288_fsm_206 assign process. ///
always @ (ap_sig_bdd_2917)
begin
    if (ap_sig_bdd_2917) begin
        ap_sig_cseq_ST_st288_fsm_206 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st288_fsm_206 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st289_fsm_207 assign process. ///
always @ (ap_sig_bdd_2925)
begin
    if (ap_sig_bdd_2925) begin
        ap_sig_cseq_ST_st289_fsm_207 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st289_fsm_207 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_1118)
begin
    if (ap_sig_bdd_1118) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st290_fsm_208 assign process. ///
always @ (ap_sig_bdd_2933)
begin
    if (ap_sig_bdd_2933) begin
        ap_sig_cseq_ST_st290_fsm_208 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st290_fsm_208 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st291_fsm_209 assign process. ///
always @ (ap_sig_bdd_2941)
begin
    if (ap_sig_bdd_2941) begin
        ap_sig_cseq_ST_st291_fsm_209 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st291_fsm_209 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st292_fsm_210 assign process. ///
always @ (ap_sig_bdd_2949)
begin
    if (ap_sig_bdd_2949) begin
        ap_sig_cseq_ST_st292_fsm_210 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st292_fsm_210 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st293_fsm_211 assign process. ///
always @ (ap_sig_bdd_2957)
begin
    if (ap_sig_bdd_2957) begin
        ap_sig_cseq_ST_st293_fsm_211 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st293_fsm_211 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st294_fsm_212 assign process. ///
always @ (ap_sig_bdd_2965)
begin
    if (ap_sig_bdd_2965) begin
        ap_sig_cseq_ST_st294_fsm_212 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st294_fsm_212 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st295_fsm_213 assign process. ///
always @ (ap_sig_bdd_2973)
begin
    if (ap_sig_bdd_2973) begin
        ap_sig_cseq_ST_st295_fsm_213 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st295_fsm_213 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st296_fsm_214 assign process. ///
always @ (ap_sig_bdd_2981)
begin
    if (ap_sig_bdd_2981) begin
        ap_sig_cseq_ST_st296_fsm_214 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st296_fsm_214 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st297_fsm_215 assign process. ///
always @ (ap_sig_bdd_2989)
begin
    if (ap_sig_bdd_2989) begin
        ap_sig_cseq_ST_st297_fsm_215 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st297_fsm_215 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st298_fsm_216 assign process. ///
always @ (ap_sig_bdd_2997)
begin
    if (ap_sig_bdd_2997) begin
        ap_sig_cseq_ST_st298_fsm_216 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st298_fsm_216 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st299_fsm_217 assign process. ///
always @ (ap_sig_bdd_762)
begin
    if (ap_sig_bdd_762) begin
        ap_sig_cseq_ST_st299_fsm_217 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st299_fsm_217 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_1803)
begin
    if (ap_sig_bdd_1803) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_1700)
begin
    if (ap_sig_bdd_1700) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st300_fsm_218 assign process. ///
always @ (ap_sig_bdd_1841)
begin
    if (ap_sig_bdd_1841) begin
        ap_sig_cseq_ST_st300_fsm_218 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st300_fsm_218 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st303_fsm_221 assign process. ///
always @ (ap_sig_bdd_1731)
begin
    if (ap_sig_bdd_1731) begin
        ap_sig_cseq_ST_st303_fsm_221 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st303_fsm_221 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_1551)
begin
    if (ap_sig_bdd_1551) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_35 assign process. ///
always @ (ap_sig_bdd_1144)
begin
    if (ap_sig_bdd_1144) begin
        ap_sig_cseq_ST_st38_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_36 assign process. ///
always @ (ap_sig_bdd_1153)
begin
    if (ap_sig_bdd_1153) begin
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_37 assign process. ///
always @ (ap_sig_bdd_1162)
begin
    if (ap_sig_bdd_1162) begin
        ap_sig_cseq_ST_st40_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_43 assign process. ///
always @ (ap_sig_bdd_1178)
begin
    if (ap_sig_bdd_1178) begin
        ap_sig_cseq_ST_st46_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_44 assign process. ///
always @ (ap_sig_bdd_1819)
begin
    if (ap_sig_bdd_1819) begin
        ap_sig_cseq_ST_st47_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st52_fsm_49 assign process. ///
always @ (ap_sig_bdd_1563)
begin
    if (ap_sig_bdd_1563) begin
        ap_sig_cseq_ST_st52_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_51 assign process. ///
always @ (ap_sig_bdd_1887)
begin
    if (ap_sig_bdd_1887) begin
        ap_sig_cseq_ST_st56_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_52 assign process. ///
always @ (ap_sig_bdd_1894)
begin
    if (ap_sig_bdd_1894) begin
        ap_sig_cseq_ST_st57_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_53 assign process. ///
always @ (ap_sig_bdd_1575)
begin
    if (ap_sig_bdd_1575) begin
        ap_sig_cseq_ST_st58_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_587)
begin
    if (ap_sig_bdd_587) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_991)
begin
    if (ap_sig_bdd_991) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_1000)
begin
    if (ap_sig_bdd_1000) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_636)
begin
    if (ap_sig_bdd_636) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_gmem32_ARREADY assign process. ///
always @ (gmem32_ARREADY or ap_reg_ioackin_gmem32_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) begin
        ap_sig_ioackin_gmem32_ARREADY = gmem32_ARREADY;
    end else begin
        ap_sig_ioackin_gmem32_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_gmem32_AWREADY assign process. ///
always @ (gmem32_AWREADY or ap_reg_ioackin_gmem32_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_AWREADY)) begin
        ap_sig_ioackin_gmem32_AWREADY = gmem32_AWREADY;
    end else begin
        ap_sig_ioackin_gmem32_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_gmem32_WREADY assign process. ///
always @ (gmem32_WREADY or ap_reg_ioackin_gmem32_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_WREADY)) begin
        ap_sig_ioackin_gmem32_WREADY = gmem32_WREADY;
    end else begin
        ap_sig_ioackin_gmem32_WREADY = ap_const_logic_1;
    end
end

/// bramA_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it0 or tmp_s_fu_1370_p1 or tmp_15_fu_1476_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        bramA_address0 = tmp_s_fu_1370_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramA_address0 = tmp_15_fu_1476_p1;
    end else begin
        bramA_address0 = 'bx;
    end
end

/// bramA_ce0 assign process. ///
always @ (ap_sig_bdd_436 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        bramA_ce0 = ap_const_logic_1;
    end else begin
        bramA_ce0 = ap_const_logic_0;
    end
end

/// bramA_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramA_ce1 = ap_const_logic_1;
    end else begin
        bramA_ce1 = ap_const_logic_0;
    end
end

/// bramA_we0 assign process. ///
always @ (ap_sig_bdd_436 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond4_reg_1862_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1862_pp0_it1))) begin
        bramA_we0 = ap_const_logic_1;
    end else begin
        bramA_we0 = ap_const_logic_0;
    end
end

/// bramB_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or tmp_16_reg_1929 or tmp_12_fu_1456_p1 or tmp_15_fu_1476_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        bramB_address0 = tmp_12_fu_1456_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        bramB_address0 = tmp_16_reg_1929;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramB_address0 = tmp_15_fu_1476_p1;
    end else begin
        bramB_address0 = 'bx;
    end
end

/// bramB_ce0 assign process. ///
always @ (ap_sig_bdd_459 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_55)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        bramB_ce0 = ap_const_logic_1;
    end else begin
        bramB_ce0 = ap_const_logic_0;
    end
end

/// bramB_we0 assign process. ///
always @ (ap_sig_bdd_459 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond2_reg_1906_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_1906_pp1_it1))) begin
        bramB_we0 = ap_const_logic_1;
    end else begin
        bramB_we0 = ap_const_logic_0;
    end
end

/// gmem32_ARADDR assign process. ///
always @ (gmem32_addr_reg_1856 or gmem32_addr_1_reg_1900 or ap_reg_ioackin_gmem32_ARREADY or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st47_fsm_44)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_44)) begin
            gmem32_ARADDR = gmem32_addr_1_reg_1900;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
            gmem32_ARADDR = gmem32_addr_reg_1856;
        end else begin
            gmem32_ARADDR = 'bx;
        end
    end else begin
        gmem32_ARADDR = 'bx;
    end
end

/// gmem32_ARVALID assign process. ///
always @ (ap_reg_ioackin_gmem32_ARREADY or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st47_fsm_44)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) | ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_44)))) begin
        gmem32_ARVALID = ap_const_logic_1;
    end else begin
        gmem32_ARVALID = ap_const_logic_0;
    end
end

/// gmem32_AWVALID assign process. ///
always @ (ap_sig_cseq_ST_st299_fsm_217 or ap_reg_ioackin_gmem32_AWREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st299_fsm_217) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_AWREADY))) begin
        gmem32_AWVALID = ap_const_logic_1;
    end else begin
        gmem32_AWVALID = ap_const_logic_0;
    end
end

/// gmem32_BREADY assign process. ///
always @ (gmem32_BVALID or ap_sig_cseq_ST_st303_fsm_221)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st303_fsm_221) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        gmem32_BREADY = ap_const_logic_1;
    end else begin
        gmem32_BREADY = ap_const_logic_0;
    end
end

/// gmem32_RREADY assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_34 or exitcond4_reg_1862 or ap_sig_bdd_436 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp1_stg0_fsm_50 or exitcond2_reg_1906 or ap_sig_bdd_459 or ap_reg_ppiten_pp1_it1)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond4_reg_1862 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & (ap_const_lv1_0 == exitcond2_reg_1906) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        gmem32_RREADY = ap_const_logic_1;
    end else begin
        gmem32_RREADY = ap_const_logic_0;
    end
end

/// gmem32_WVALID assign process. ///
always @ (ap_reg_ioackin_gmem32_WREADY or ap_sig_cseq_ST_st300_fsm_218)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st300_fsm_218) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_WREADY))) begin
        gmem32_WVALID = ap_const_logic_1;
    end else begin
        gmem32_WVALID = ap_const_logic_0;
    end
end

/// grp_fu_1017_opcode assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it24 or ap_reg_ppiten_pp3_it0 or exitcond_reg_2060 or ap_sig_cseq_ST_pp3_stg2_fsm_60 or ap_sig_cseq_ST_pp3_stg4_fsm_62 or ap_sig_cseq_ST_pp3_stg6_fsm_64 or ap_sig_cseq_ST_pp3_stg3_fsm_61 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it25 or ap_sig_cseq_ST_pp3_stg7_fsm_65 or ap_sig_cseq_ST_pp3_stg8_fsm_66 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st189_fsm_107 or ap_sig_cseq_ST_st193_fsm_111 or ap_sig_cseq_ST_st228_fsm_146 or ap_sig_cseq_ST_st232_fsm_150)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102) | (ap_const_logic_1 == ap_sig_cseq_ST_st189_fsm_107) | (ap_const_logic_1 == ap_sig_cseq_ST_st193_fsm_111))) begin
        grp_fu_1017_opcode = ap_const_lv2_1;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63)) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146) | (ap_const_logic_1 == ap_sig_cseq_ST_st232_fsm_150) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it24)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it25)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_65)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_66)))) begin
        grp_fu_1017_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_1017_opcode = 'bx;
    end
end

/// grp_fu_1017_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or sum_weight_returnSquareA_reg_945 or sum_weight_returnA_returnB_reg_993 or reg_1114 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1130 or reg_1140 or reg_1146 or ap_reg_ppiten_pp3_it0 or reg_1152 or ap_sig_cseq_ST_pp3_stg2_fsm_60 or ap_sig_cseq_ST_pp3_stg4_fsm_62 or ap_sig_cseq_ST_pp3_stg6_fsm_64 or ap_sig_cseq_ST_pp3_stg3_fsm_61 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or weight_rom_load_1_reg_1601 or ap_sig_cseq_ST_pp3_stg7_fsm_65 or ap_sig_cseq_ST_pp3_stg8_fsm_66 or sum_returnA_phi_fu_925_p4 or sum_returnB_phi_fu_937_p4 or sum_weight_returnSquareA_phi_fu_949_p4 or sum_weight_returnA_phi_fu_961_p4 or sum_weight_returnSquareB_phi_fu_973_p4 or sum_weight_returnB_phi_fu_985_p4 or sum_weight_returnA_returnB_phi_fu_997_p4 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st189_fsm_107 or ap_sig_cseq_ST_st193_fsm_111 or ap_sig_cseq_ST_st228_fsm_146 or ap_sig_cseq_ST_st232_fsm_150)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st232_fsm_150)) begin
        grp_fu_1017_p0 = reg_1140;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146)) begin
        grp_fu_1017_p0 = reg_1130;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st193_fsm_111)) begin
        grp_fu_1017_p0 = reg_1114;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st189_fsm_107)) begin
        grp_fu_1017_p0 = sum_weight_returnSquareA_reg_945;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102)) begin
        grp_fu_1017_p0 = sum_weight_returnA_returnB_reg_993;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_66))) begin
        grp_fu_1017_p0 = sum_weight_returnA_returnB_phi_fu_997_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_65))) begin
        grp_fu_1017_p0 = sum_weight_returnB_phi_fu_985_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64))) begin
        grp_fu_1017_p0 = sum_weight_returnSquareB_phi_fu_973_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63))) begin
        grp_fu_1017_p0 = sum_weight_returnA_phi_fu_961_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62))) begin
        grp_fu_1017_p0 = sum_weight_returnSquareA_phi_fu_949_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61))) begin
        grp_fu_1017_p0 = sum_returnB_phi_fu_937_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60))) begin
        grp_fu_1017_p0 = sum_returnA_phi_fu_925_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1017_p0 = reg_1152;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1017_p0 = reg_1146;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_1017_p0 = weight_rom_load_1_reg_1601;
    end else begin
        grp_fu_1017_p0 = 'bx;
    end
end

/// grp_fu_1017_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or reg_1093 or reg_1103 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1146 or ap_reg_ppiten_pp3_it0 or reg_1152 or ap_sig_cseq_ST_pp3_stg2_fsm_60 or reg_1165 or ap_sig_cseq_ST_pp3_stg4_fsm_62 or reg_1172 or ap_sig_cseq_ST_pp3_stg6_fsm_64 or reg_1178 or reg_1184 or ap_sig_cseq_ST_pp3_stg3_fsm_61 or reg_1190 or reg_1196 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or reg_1203 or lnReturnA_reg_2017 or lnReturnB_reg_2026 or ap_sig_cseq_ST_pp3_stg7_fsm_65 or ap_sig_cseq_ST_pp3_stg8_fsm_66 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st189_fsm_107 or ap_sig_cseq_ST_st193_fsm_111 or ap_sig_cseq_ST_st228_fsm_146 or ap_sig_cseq_ST_st232_fsm_150)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st193_fsm_111)) begin
        grp_fu_1017_p1 = reg_1190;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st189_fsm_107) | (ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146))) begin
        grp_fu_1017_p1 = reg_1093;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102) | (ap_const_logic_1 == ap_sig_cseq_ST_st232_fsm_150))) begin
        grp_fu_1017_p1 = reg_1178;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_66))) begin
        grp_fu_1017_p1 = reg_1203;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_65))) begin
        grp_fu_1017_p1 = reg_1172;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64))) begin
        grp_fu_1017_p1 = reg_1196;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63))) begin
        grp_fu_1017_p1 = reg_1165;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62))) begin
        grp_fu_1017_p1 = reg_1184;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61))) begin
        grp_fu_1017_p1 = reg_1152;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60))) begin
        grp_fu_1017_p1 = reg_1146;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1017_p1 = lnReturnB_reg_2026;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1017_p1 = lnReturnA_reg_2017;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_1017_p1 = reg_1103;
    end else begin
        grp_fu_1017_p1 = 'bx;
    end
end

/// grp_fu_1021_opcode assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it27 or ap_sig_cseq_ST_st189_fsm_107 or ap_sig_cseq_ST_st228_fsm_146)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st189_fsm_107)) begin
        grp_fu_1021_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it27)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it27)))) begin
        grp_fu_1021_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_1021_opcode = 'bx;
    end
end

/// grp_fu_1021_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or sum_weight_returnSquareB_reg_969 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1165 or reg_1172 or reg_1224 or ap_sig_cseq_ST_st189_fsm_107 or ap_sig_cseq_ST_st228_fsm_146)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146)) begin
        grp_fu_1021_p0 = reg_1224;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st189_fsm_107)) begin
        grp_fu_1021_p0 = sum_weight_returnSquareB_reg_969;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1021_p0 = reg_1172;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1021_p0 = reg_1165;
    end else begin
        grp_fu_1021_p0 = 'bx;
    end
end

/// grp_fu_1021_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1159 or tmp_31_reg_2040 or ap_sig_cseq_ST_st189_fsm_107 or ap_sig_cseq_ST_st228_fsm_146)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1021_p1 = tmp_31_reg_2040;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st189_fsm_107) | (ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        grp_fu_1021_p1 = reg_1159;
    end else begin
        grp_fu_1021_p1 = 'bx;
    end
end

/// grp_fu_1025_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1184 or reg_1196)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it30)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            grp_fu_1025_p0 = reg_1196;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54)) begin
            grp_fu_1025_p0 = reg_1184;
        end else begin
            grp_fu_1025_p0 = 'bx;
        end
    end else begin
        grp_fu_1025_p0 = 'bx;
    end
end

/// grp_fu_1025_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1190 or tmp_24_reg_2045)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it30)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            grp_fu_1025_p1 = reg_1190;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54)) begin
            grp_fu_1025_p1 = tmp_24_reg_2045;
        end else begin
            grp_fu_1025_p1 = 'bx;
        end
    end else begin
        grp_fu_1025_p1 = 'bx;
    end
end

/// grp_fu_1041_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or reg_1093 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1130 or lnReturnA_reg_2017 or lnReturnB_reg_2026 or volatilityA_reg_2159 or tmp_i_reg_772 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st179_fsm_97 or ap_sig_cseq_ST_st223_fsm_141 or ap_sig_cseq_ST_st265_fsm_183)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st265_fsm_183)) begin
        grp_fu_1041_p0 = volatilityA_reg_2159;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102)) begin
        grp_fu_1041_p0 = reg_1093;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_97) | (ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141))) begin
        grp_fu_1041_p0 = reg_1130;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1041_p0 = lnReturnB_reg_2026;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1041_p0 = lnReturnA_reg_2017;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_1041_p0 = tmp_i_reg_772;
    end else begin
        grp_fu_1041_p0 = 'bx;
    end
end

/// grp_fu_1041_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or sum_weight_returnA_reg_957 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1130 or lnReturnA_reg_2017 or lnReturnB_reg_2026 or volatilityB_reg_2164 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st179_fsm_97 or ap_sig_cseq_ST_st223_fsm_141 or ap_sig_cseq_ST_st265_fsm_183)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st265_fsm_183)) begin
        grp_fu_1041_p1 = volatilityB_reg_2164;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141)) begin
        grp_fu_1041_p1 = reg_1130;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102)) begin
        grp_fu_1041_p1 = sum_weight_returnA_reg_957;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_97)) begin
        grp_fu_1041_p1 = ap_const_lv32_40000000;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1041_p1 = lnReturnB_reg_2026;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1041_p1 = lnReturnA_reg_2017;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_1041_p1 = ap_const_lv32_3F70A3D7;
    end else begin
        grp_fu_1041_p1 = 'bx;
    end
end

/// grp_fu_1047_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1159 or reg_1224 or lnReturnA_reg_2017 or lnReturnB_reg_2026 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st179_fsm_97 or ap_sig_cseq_ST_st223_fsm_141)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102)) begin
        grp_fu_1047_p0 = reg_1159;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_97) | (ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141))) begin
        grp_fu_1047_p0 = reg_1224;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1047_p0 = lnReturnB_reg_2026;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1047_p0 = lnReturnA_reg_2017;
    end else begin
        grp_fu_1047_p0 = 'bx;
    end
end

/// grp_fu_1047_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or sum_weight_returnB_reg_981 or ap_reg_ppstg_reg_1103_pp2_it24 or ap_reg_ppstg_reg_1103_pp2_it25 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1224 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st179_fsm_97 or ap_sig_cseq_ST_st223_fsm_141)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141)) begin
        grp_fu_1047_p1 = reg_1224;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102)) begin
        grp_fu_1047_p1 = sum_weight_returnB_reg_981;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_97)) begin
        grp_fu_1047_p1 = ap_const_lv32_40000000;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1047_p1 = ap_reg_ppstg_reg_1103_pp2_it25;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1047_p1 = ap_reg_ppstg_reg_1103_pp2_it24;
    end else begin
        grp_fu_1047_p1 = 'bx;
    end
end

/// grp_fu_1051_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or ap_reg_ppiten_pp2_it28 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1130 or reg_1224 or lnReturnA_reg_2017 or tmp_26_reg_2035 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st179_fsm_97 or ap_sig_cseq_ST_st223_fsm_141)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102)) begin
        grp_fu_1051_p0 = reg_1224;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_97) | (ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141))) begin
        grp_fu_1051_p0 = reg_1130;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1051_p0 = tmp_26_reg_2035;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1051_p0 = lnReturnA_reg_2017;
    end else begin
        grp_fu_1051_p0 = 'bx;
    end
end

/// grp_fu_1051_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it25 or ap_reg_ppiten_pp2_it28 or sum_weight_returnA_reg_957 or sum_weight_returnB_reg_981 or ap_reg_ppstg_reg_1103_pp2_it27 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1224 or lnReturnB_reg_2026 or ap_sig_cseq_ST_st184_fsm_102 or ap_sig_cseq_ST_st179_fsm_97 or ap_sig_cseq_ST_st223_fsm_141)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141)) begin
        grp_fu_1051_p1 = reg_1224;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st184_fsm_102)) begin
        grp_fu_1051_p1 = sum_weight_returnA_reg_957;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st179_fsm_97)) begin
        grp_fu_1051_p1 = sum_weight_returnB_reg_981;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1051_p1 = ap_reg_ppstg_reg_1103_pp2_it27;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1051_p1 = lnReturnB_reg_2026;
    end else begin
        grp_fu_1051_p1 = 'bx;
    end
end

/// grp_fu_1055_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or reg_1093 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1178)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1055_p0 = reg_1178;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1055_p0 = reg_1093;
    end else begin
        grp_fu_1055_p0 = 'bx;
    end
end

/// grp_fu_1065_ce assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or tmp_14_reg_1915 or ap_sig_cseq_ST_st227_fsm_145 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st201_fsm_119 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it15 or ap_sig_cseq_ST_st178_fsm_96 or ap_sig_cseq_ST_st299_fsm_217 or ap_sig_ioackin_gmem32_AWREADY or ap_sig_cseq_ST_st231_fsm_149 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it1 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it2 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it3 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it4 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it5 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it6 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it7 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it8 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it9 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it10 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it11 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it12 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it13 or ap_reg_ppstg_tmp_14_reg_1915_pp2_it14 or ap_sig_cseq_ST_st149_fsm_67 or ap_sig_cseq_ST_st228_fsm_146 or ap_sig_cseq_ST_st223_fsm_141 or ap_sig_cseq_ST_st198_fsm_116 or ap_sig_cseq_ST_st202_fsm_120 or ap_sig_cseq_ST_st270_fsm_188 or ap_sig_cseq_ST_st150_fsm_68 or ap_sig_cseq_ST_st151_fsm_69 or ap_sig_cseq_ST_st152_fsm_70 or ap_sig_cseq_ST_st153_fsm_71 or ap_sig_cseq_ST_st154_fsm_72 or ap_sig_cseq_ST_st155_fsm_73 or ap_sig_cseq_ST_st156_fsm_74 or ap_sig_cseq_ST_st157_fsm_75 or ap_sig_cseq_ST_st158_fsm_76 or ap_sig_cseq_ST_st159_fsm_77 or ap_sig_cseq_ST_st160_fsm_78 or ap_sig_cseq_ST_st161_fsm_79 or ap_sig_cseq_ST_st162_fsm_80 or ap_sig_cseq_ST_st163_fsm_81 or ap_sig_cseq_ST_st164_fsm_82 or ap_sig_cseq_ST_st165_fsm_83 or ap_sig_cseq_ST_st166_fsm_84 or ap_sig_cseq_ST_st167_fsm_85 or ap_sig_cseq_ST_st168_fsm_86 or ap_sig_cseq_ST_st169_fsm_87 or ap_sig_cseq_ST_st170_fsm_88 or ap_sig_cseq_ST_st171_fsm_89 or ap_sig_cseq_ST_st172_fsm_90 or ap_sig_cseq_ST_st173_fsm_91 or ap_sig_cseq_ST_st174_fsm_92 or ap_sig_cseq_ST_st175_fsm_93 or ap_sig_cseq_ST_st176_fsm_94 or ap_sig_cseq_ST_st177_fsm_95 or ap_sig_cseq_ST_st199_fsm_117 or ap_sig_cseq_ST_st200_fsm_118 or ap_sig_cseq_ST_st203_fsm_121 or ap_sig_cseq_ST_st204_fsm_122 or ap_sig_cseq_ST_st205_fsm_123 or ap_sig_cseq_ST_st206_fsm_124 or ap_sig_cseq_ST_st207_fsm_125 or ap_sig_cseq_ST_st208_fsm_126 or ap_sig_cseq_ST_st209_fsm_127 or ap_sig_cseq_ST_st210_fsm_128 or ap_sig_cseq_ST_st211_fsm_129 or ap_sig_cseq_ST_st212_fsm_130 or ap_sig_cseq_ST_st213_fsm_131 or ap_sig_cseq_ST_st214_fsm_132 or ap_sig_cseq_ST_st215_fsm_133 or ap_sig_cseq_ST_st216_fsm_134 or ap_sig_cseq_ST_st217_fsm_135 or ap_sig_cseq_ST_st218_fsm_136 or ap_sig_cseq_ST_st219_fsm_137 or ap_sig_cseq_ST_st220_fsm_138 or ap_sig_cseq_ST_st221_fsm_139 or ap_sig_cseq_ST_st222_fsm_140 or ap_sig_cseq_ST_st224_fsm_142 or ap_sig_cseq_ST_st225_fsm_143 or ap_sig_cseq_ST_st226_fsm_144 or ap_sig_cseq_ST_st229_fsm_147 or ap_sig_cseq_ST_st230_fsm_148 or ap_sig_cseq_ST_st271_fsm_189 or ap_sig_cseq_ST_st272_fsm_190 or ap_sig_cseq_ST_st273_fsm_191 or ap_sig_cseq_ST_st274_fsm_192 or ap_sig_cseq_ST_st275_fsm_193 or ap_sig_cseq_ST_st276_fsm_194 or ap_sig_cseq_ST_st277_fsm_195 or ap_sig_cseq_ST_st278_fsm_196 or ap_sig_cseq_ST_st279_fsm_197 or ap_sig_cseq_ST_st280_fsm_198 or ap_sig_cseq_ST_st281_fsm_199 or ap_sig_cseq_ST_st282_fsm_200 or ap_sig_cseq_ST_st283_fsm_201 or ap_sig_cseq_ST_st284_fsm_202 or ap_sig_cseq_ST_st285_fsm_203 or ap_sig_cseq_ST_st286_fsm_204 or ap_sig_cseq_ST_st287_fsm_205 or ap_sig_cseq_ST_st288_fsm_206 or ap_sig_cseq_ST_st289_fsm_207 or ap_sig_cseq_ST_st290_fsm_208 or ap_sig_cseq_ST_st291_fsm_209 or ap_sig_cseq_ST_st292_fsm_210 or ap_sig_cseq_ST_st293_fsm_211 or ap_sig_cseq_ST_st294_fsm_212 or ap_sig_cseq_ST_st295_fsm_213 or ap_sig_cseq_ST_st296_fsm_214 or ap_sig_cseq_ST_st297_fsm_215 or ap_sig_cseq_ST_st298_fsm_216)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st227_fsm_145) | (ap_const_logic_1 == ap_sig_cseq_ST_st201_fsm_119) | (ap_const_logic_1 == ap_sig_cseq_ST_st178_fsm_96) | ((ap_const_logic_1 == ap_sig_cseq_ST_st299_fsm_217) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) | (ap_const_logic_1 == ap_sig_cseq_ST_st231_fsm_149) | (ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_67) | (ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146) | (ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141) | (ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st202_fsm_120) | (ap_const_logic_1 == ap_sig_cseq_ST_st270_fsm_188) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (~(ap_const_lv1_0 == tmp_14_reg_1915) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it15) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it1) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it2) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it3) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it4) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it5) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it6) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it7) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it8) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it9) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it10) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it11) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it12) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it13) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it14))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55) & (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it15) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it1) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it2) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it3) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it4) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it5) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it6) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it7) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it8) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it9) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it10) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it11) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it12) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it13) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_1915_pp2_it14))) | (ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_68) | (ap_const_logic_1 == ap_sig_cseq_ST_st151_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st152_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_73) | (ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_74) | (ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st159_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st161_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st162_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st163_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_82) | (ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_83) | (ap_const_logic_1 == ap_sig_cseq_ST_st166_fsm_84) | (ap_const_logic_1 == ap_sig_cseq_ST_st167_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st168_fsm_86) | (ap_const_logic_1 == ap_sig_cseq_ST_st169_fsm_87) | (ap_const_logic_1 == ap_sig_cseq_ST_st170_fsm_88) | (ap_const_logic_1 == ap_sig_cseq_ST_st171_fsm_89) | (ap_const_logic_1 == ap_sig_cseq_ST_st172_fsm_90) | (ap_const_logic_1 == ap_sig_cseq_ST_st173_fsm_91) | (ap_const_logic_1 == ap_sig_cseq_ST_st174_fsm_92) | (ap_const_logic_1 == ap_sig_cseq_ST_st175_fsm_93) | (ap_const_logic_1 == ap_sig_cseq_ST_st176_fsm_94) | (ap_const_logic_1 == ap_sig_cseq_ST_st177_fsm_95) | (ap_const_logic_1 == ap_sig_cseq_ST_st199_fsm_117) | (ap_const_logic_1 == ap_sig_cseq_ST_st200_fsm_118) | (ap_const_logic_1 == ap_sig_cseq_ST_st203_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st204_fsm_122) | (ap_const_logic_1 == ap_sig_cseq_ST_st205_fsm_123) | (ap_const_logic_1 == ap_sig_cseq_ST_st206_fsm_124) | (ap_const_logic_1 == ap_sig_cseq_ST_st207_fsm_125) | (ap_const_logic_1 == ap_sig_cseq_ST_st208_fsm_126) | (ap_const_logic_1 == ap_sig_cseq_ST_st209_fsm_127) | (ap_const_logic_1 == ap_sig_cseq_ST_st210_fsm_128) | (ap_const_logic_1 == ap_sig_cseq_ST_st211_fsm_129) | (ap_const_logic_1 == ap_sig_cseq_ST_st212_fsm_130) | (ap_const_logic_1 == ap_sig_cseq_ST_st213_fsm_131) | (ap_const_logic_1 == ap_sig_cseq_ST_st214_fsm_132) | (ap_const_logic_1 == ap_sig_cseq_ST_st215_fsm_133) | (ap_const_logic_1 == ap_sig_cseq_ST_st216_fsm_134) | (ap_const_logic_1 == ap_sig_cseq_ST_st217_fsm_135) | (ap_const_logic_1 == ap_sig_cseq_ST_st218_fsm_136) | (ap_const_logic_1 == ap_sig_cseq_ST_st219_fsm_137) | (ap_const_logic_1 == ap_sig_cseq_ST_st220_fsm_138) | (ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139) | (ap_const_logic_1 == ap_sig_cseq_ST_st222_fsm_140) | (ap_const_logic_1 == ap_sig_cseq_ST_st224_fsm_142) | (ap_const_logic_1 == ap_sig_cseq_ST_st225_fsm_143) | (ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144) | (ap_const_logic_1 == ap_sig_cseq_ST_st229_fsm_147) | (ap_const_logic_1 == ap_sig_cseq_ST_st230_fsm_148) | (ap_const_logic_1 == ap_sig_cseq_ST_st271_fsm_189) | (ap_const_logic_1 == ap_sig_cseq_ST_st272_fsm_190) | (ap_const_logic_1 == ap_sig_cseq_ST_st273_fsm_191) | (ap_const_logic_1 == ap_sig_cseq_ST_st274_fsm_192) | (ap_const_logic_1 == ap_sig_cseq_ST_st275_fsm_193) | (ap_const_logic_1 == ap_sig_cseq_ST_st276_fsm_194) | (ap_const_logic_1 == ap_sig_cseq_ST_st277_fsm_195) | (ap_const_logic_1 == ap_sig_cseq_ST_st278_fsm_196) | (ap_const_logic_1 == ap_sig_cseq_ST_st279_fsm_197) | (ap_const_logic_1 == ap_sig_cseq_ST_st280_fsm_198) | (ap_const_logic_1 == ap_sig_cseq_ST_st281_fsm_199) | (ap_const_logic_1 == ap_sig_cseq_ST_st282_fsm_200) | (ap_const_logic_1 == ap_sig_cseq_ST_st283_fsm_201) | (ap_const_logic_1 == ap_sig_cseq_ST_st284_fsm_202) | (ap_const_logic_1 == ap_sig_cseq_ST_st285_fsm_203) | (ap_const_logic_1 == ap_sig_cseq_ST_st286_fsm_204) | (ap_const_logic_1 == ap_sig_cseq_ST_st287_fsm_205) | (ap_const_logic_1 == ap_sig_cseq_ST_st288_fsm_206) | (ap_const_logic_1 == ap_sig_cseq_ST_st289_fsm_207) | (ap_const_logic_1 == ap_sig_cseq_ST_st290_fsm_208) | (ap_const_logic_1 == ap_sig_cseq_ST_st291_fsm_209) | (ap_const_logic_1 == ap_sig_cseq_ST_st292_fsm_210) | (ap_const_logic_1 == ap_sig_cseq_ST_st293_fsm_211) | (ap_const_logic_1 == ap_sig_cseq_ST_st294_fsm_212) | (ap_const_logic_1 == ap_sig_cseq_ST_st295_fsm_213) | (ap_const_logic_1 == ap_sig_cseq_ST_st296_fsm_214) | (ap_const_logic_1 == ap_sig_cseq_ST_st297_fsm_215) | (ap_const_logic_1 == ap_sig_cseq_ST_st298_fsm_216))) begin
        grp_fu_1065_ce = ap_const_logic_1;
    end else begin
        grp_fu_1065_ce = ap_const_logic_0;
    end
end

/// grp_fu_1065_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it1 or sum_returnA_reg_921 or reg_1114 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1233 or bramA_load_reg_1945 or bramB_load_reg_1955 or ap_sig_cseq_ST_st149_fsm_67 or ap_sig_cseq_ST_st198_fsm_116 or ap_sig_cseq_ST_st202_fsm_120 or ap_sig_cseq_ST_st270_fsm_188)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st202_fsm_120)) begin
        grp_fu_1065_p0 = reg_1114;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st270_fsm_188))) begin
        grp_fu_1065_p0 = reg_1233;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_67)) begin
        grp_fu_1065_p0 = sum_returnA_reg_921;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1065_p0 = bramB_load_reg_1955;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
        grp_fu_1065_p0 = bramA_load_reg_1945;
    end else begin
        grp_fu_1065_p0 = 'bx;
    end
end

/// grp_fu_1065_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it1 or reg_1093 or reg_1103 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or tmp_2_reg_1611 or bramA_load_1_reg_1950 or bramB_load_1_reg_1970 or ap_sig_cseq_ST_st149_fsm_67 or ap_sig_cseq_ST_st198_fsm_116 or ap_sig_cseq_ST_st202_fsm_120 or ap_sig_cseq_ST_st270_fsm_188)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st270_fsm_188)) begin
        grp_fu_1065_p1 = reg_1093;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st202_fsm_120))) begin
        grp_fu_1065_p1 = reg_1103;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_67)) begin
        grp_fu_1065_p1 = tmp_2_reg_1611;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        grp_fu_1065_p1 = bramB_load_1_reg_1970;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
        grp_fu_1065_p1 = bramA_load_1_reg_1950;
    end else begin
        grp_fu_1065_p1 = 'bx;
    end
end

/// grp_fu_1070_p0 assign process. ///
always @ (sum_returnB_reg_933 or reg_1210 or ap_sig_cseq_ST_st149_fsm_67 or ap_sig_cseq_ST_st198_fsm_116)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_116)) begin
        grp_fu_1070_p0 = reg_1210;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_67)) begin
        grp_fu_1070_p0 = sum_returnB_reg_933;
    end else begin
        grp_fu_1070_p0 = 'bx;
    end
end

/// grp_fu_1070_p1 assign process. ///
always @ (reg_1103 or tmp_2_reg_1611 or ap_sig_cseq_ST_st149_fsm_67 or ap_sig_cseq_ST_st198_fsm_116)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_116)) begin
        grp_fu_1070_p1 = reg_1103;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_67)) begin
        grp_fu_1070_p1 = tmp_2_reg_1611;
    end else begin
        grp_fu_1070_p1 = 'bx;
    end
end

/// grp_fu_1088_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it16 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or reg_1130 or reg_1140)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it16)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)) begin
            grp_fu_1088_p1 = reg_1140;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54)) begin
            grp_fu_1088_p1 = reg_1130;
        end else begin
            grp_fu_1088_p1 = 'bx;
        end
    end else begin
        grp_fu_1088_p1 = 'bx;
    end
end

/// i1_phi_fu_913_p4 assign process. ///
always @ (i1_reg_909 or ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it1 or tmp_14_reg_1915 or i_reg_1919)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_const_lv1_0 == tmp_14_reg_1915))) begin
        i1_phi_fu_913_p4 = i_reg_1919;
    end else begin
        i1_phi_fu_913_p4 = i1_reg_909;
    end
end

/// i2_phi_fu_1009_p4 assign process. ///
always @ (i2_reg_1005 or ap_reg_ppiten_pp3_it1 or exitcond_reg_2060 or ap_sig_cseq_ST_pp3_stg0_fsm_58 or i_1_reg_2064)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_reg_2060) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_58))) begin
        i2_phi_fu_1009_p4 = i_1_reg_2064;
    end else begin
        i2_phi_fu_1009_p4 = i2_reg_1005;
    end
end

/// indvar1_phi_fu_901_p4 assign process. ///
always @ (indvar1_reg_897 or ap_sig_cseq_ST_pp1_stg0_fsm_50 or exitcond2_reg_1906 or ap_reg_ppiten_pp1_it1 or indvar_next1_reg_1910)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_50) & (ap_const_lv1_0 == exitcond2_reg_1906) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        indvar1_phi_fu_901_p4 = indvar_next1_reg_1910;
    end else begin
        indvar1_phi_fu_901_p4 = indvar1_reg_897;
    end
end

/// indvar_phi_fu_869_p4 assign process. ///
always @ (indvar_reg_865 or ap_sig_cseq_ST_pp0_stg0_fsm_34 or exitcond4_reg_1862 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_1866)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond4_reg_1862 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_869_p4 = indvar_next_reg_1866;
    end else begin
        indvar_phi_fu_869_p4 = indvar_reg_865;
    end
end

/// sum_returnA_phi_fu_925_p4 assign process. ///
always @ (sum_returnA_reg_921 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg2_fsm_60 or ap_reg_ppstg_exitcond_reg_2060_pp3_it1 or sum_returnA_1_reg_2114)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_60) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_returnA_phi_fu_925_p4 = sum_returnA_1_reg_2114;
    end else begin
        sum_returnA_phi_fu_925_p4 = sum_returnA_reg_921;
    end
end

/// sum_returnB_phi_fu_937_p4 assign process. ///
always @ (sum_returnB_reg_933 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg3_fsm_61 or ap_reg_ppstg_exitcond_reg_2060_pp3_it1 or sum_returnB_1_reg_2119)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_61) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_returnB_phi_fu_937_p4 = sum_returnB_1_reg_2119;
    end else begin
        sum_returnB_phi_fu_937_p4 = sum_returnB_reg_933;
    end
end

/// sum_weight_returnA_phi_fu_961_p4 assign process. ///
always @ (sum_weight_returnA_reg_957 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg5_fsm_63 or ap_reg_ppstg_exitcond_reg_2060_pp3_it1 or sum_weight_returnA_1_reg_2129)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_63) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnA_phi_fu_961_p4 = sum_weight_returnA_1_reg_2129;
    end else begin
        sum_weight_returnA_phi_fu_961_p4 = sum_weight_returnA_reg_957;
    end
end

/// sum_weight_returnB_phi_fu_985_p4 assign process. ///
always @ (sum_weight_returnB_reg_981 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_2060_pp3_it1 or sum_weight_returnB_1_reg_2139 or ap_sig_cseq_ST_pp3_stg7_fsm_65)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_65))) begin
        sum_weight_returnB_phi_fu_985_p4 = sum_weight_returnB_1_reg_2139;
    end else begin
        sum_weight_returnB_phi_fu_985_p4 = sum_weight_returnB_reg_981;
    end
end

/// sum_weight_returnSquareA_phi_fu_949_p4 assign process. ///
always @ (sum_weight_returnSquareA_reg_945 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg4_fsm_62 or ap_reg_ppstg_exitcond_reg_2060_pp3_it1 or sum_weight_returnSquareA_1_reg_2124)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_62) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnSquareA_phi_fu_949_p4 = sum_weight_returnSquareA_1_reg_2124;
    end else begin
        sum_weight_returnSquareA_phi_fu_949_p4 = sum_weight_returnSquareA_reg_945;
    end
end

/// sum_weight_returnSquareB_phi_fu_973_p4 assign process. ///
always @ (sum_weight_returnSquareB_reg_969 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg6_fsm_64 or ap_reg_ppstg_exitcond_reg_2060_pp3_it1 or sum_weight_returnSquareB_1_reg_2134)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_64) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_2060_pp3_it1))) begin
        sum_weight_returnSquareB_phi_fu_973_p4 = sum_weight_returnSquareB_1_reg_2134;
    end else begin
        sum_weight_returnSquareB_phi_fu_973_p4 = sum_weight_returnSquareB_reg_969;
    end
end

/// weight_rom_address0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or tmp_16_reg_1929 or tmp_58_i_fu_1272_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        weight_rom_address0 = tmp_58_i_fu_1272_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55))) begin
        weight_rom_address0 = tmp_16_reg_1929;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        weight_rom_address0 = ap_const_lv8_0;
    end else begin
        weight_rom_address0 = 'bx;
    end
end

/// weight_rom_address1 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st19_fsm_18 or tmp_60_i_fu_1292_p1 or ap_sig_cseq_ST_st130_fsm_56)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_address1 = ap_const_lv8_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st130_fsm_56))) begin
        weight_rom_address1 = ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        weight_rom_address1 = tmp_60_i_fu_1292_p1;
    end else begin
        weight_rom_address1 = 'bx;
    end
end

/// weight_rom_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_55 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_55)))) begin
        weight_rom_ce0 = ap_const_logic_1;
    end else begin
        weight_rom_ce0 = ap_const_logic_0;
    end
end

/// weight_rom_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st130_fsm_56)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st130_fsm_56))) begin
        weight_rom_ce1 = ap_const_logic_1;
    end else begin
        weight_rom_ce1 = ap_const_logic_0;
    end
end

/// weight_rom_d0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or reg_1093 or ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        weight_rom_d0 = reg_1093;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_d0 = ap_const_lv32_3F800000;
    end else begin
        weight_rom_d0 = 'bx;
    end
end

/// weight_rom_d1 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or reg_1114 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        weight_rom_d1 = reg_1114;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_d1 = ap_const_lv32_3F800000;
    end else begin
        weight_rom_d1 = 'bx;
    end
end

/// weight_rom_we0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        weight_rom_we0 = ap_const_logic_1;
    end else begin
        weight_rom_we0 = ap_const_logic_0;
    end
end

/// weight_rom_we1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        weight_rom_we1 = ap_const_logic_1;
    end else begin
        weight_rom_we1 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or gmem32_BVALID or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_436 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_459 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_54 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp2_it35 or ap_sig_ioackin_gmem32_AWREADY or ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp3_it1 or tmp_59_i_fu_1287_p2 or tmp_4_fu_1329_p2 or exitcond4_fu_1359_p2 or tmp_8_fu_1404_p2 or exitcond2_fu_1445_p2 or tmp_14_fu_1465_p2 or exitcond_fu_1504_p2 or ap_sig_cseq_ST_pp3_stg7_fsm_65 or exitcond_i_fu_1266_p2 or ap_sig_ioackin_gmem32_ARREADY or ap_sig_ioackin_gmem32_WREADY)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_fu_1266_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if ((ap_const_lv1_0 == tmp_59_i_fu_1287_p2)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            if ((ap_const_lv1_0 == tmp_4_fu_1329_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st29_fsm_28 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_34;
        end
        ap_ST_pp0_stg0_fsm_34 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1359_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_34;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_436 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_1359_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st38_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_34;
            end
        end
        ap_ST_st38_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_36;
        end
        ap_ST_st39_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_37;
        end
        ap_ST_st40_fsm_37 : 
        begin
            if ((ap_const_lv1_0 == tmp_8_fu_1404_p2)) begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st41_fsm_38;
            end
        end
        ap_ST_st41_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_39;
        end
        ap_ST_st42_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_40;
        end
        ap_ST_st43_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_41;
        end
        ap_ST_st44_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_42;
        end
        ap_ST_st45_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_43;
        end
        ap_ST_st46_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_44;
        end
        ap_ST_st47_fsm_44 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) begin
                ap_NS_fsm = ap_ST_st48_fsm_45;
            end else begin
                ap_NS_fsm = ap_ST_st47_fsm_44;
            end
        end
        ap_ST_st48_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_46;
        end
        ap_ST_st49_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_47;
        end
        ap_ST_st50_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_48;
        end
        ap_ST_st51_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_49;
        end
        ap_ST_st52_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_50;
        end
        ap_ST_pp1_stg0_fsm_50 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1445_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_50;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_459 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1445_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st56_fsm_51;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_50;
            end
        end
        ap_ST_st56_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_52;
        end
        ap_ST_st57_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_53;
        end
        ap_ST_st58_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_54;
        end
        ap_ST_pp2_stg0_fsm_54 : 
        begin
            if ((~((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_54) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it34)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == tmp_14_fu_1465_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg1_fsm_55;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == tmp_14_fu_1465_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
                ap_NS_fsm = ap_ST_st130_fsm_56;
            end else begin
                ap_NS_fsm = ap_ST_st130_fsm_56;
            end
        end
        ap_ST_pp2_stg1_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_54;
        end
        ap_ST_st130_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_57;
        end
        ap_ST_st131_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_58;
        end
        ap_ST_pp3_stg0_fsm_58 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~(ap_const_lv1_0 == exitcond_fu_1504_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1))) begin
                ap_NS_fsm = ap_ST_pp3_stg1_fsm_59;
            end else begin
                ap_NS_fsm = ap_ST_st149_fsm_67;
            end
        end
        ap_ST_pp3_stg1_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg2_fsm_60;
        end
        ap_ST_pp3_stg2_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg3_fsm_61;
        end
        ap_ST_pp3_stg3_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg4_fsm_62;
        end
        ap_ST_pp3_stg4_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg5_fsm_63;
        end
        ap_ST_pp3_stg5_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg6_fsm_64;
        end
        ap_ST_pp3_stg6_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg7_fsm_65;
        end
        ap_ST_pp3_stg7_fsm_65 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_65) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
                ap_NS_fsm = ap_ST_pp3_stg8_fsm_66;
            end else begin
                ap_NS_fsm = ap_ST_st149_fsm_67;
            end
        end
        ap_ST_pp3_stg8_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_58;
        end
        ap_ST_st149_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st150_fsm_68;
        end
        ap_ST_st150_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st151_fsm_69;
        end
        ap_ST_st151_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st152_fsm_70;
        end
        ap_ST_st152_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st153_fsm_71;
        end
        ap_ST_st153_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st154_fsm_72;
        end
        ap_ST_st154_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st155_fsm_73;
        end
        ap_ST_st155_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st156_fsm_74;
        end
        ap_ST_st156_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st157_fsm_75;
        end
        ap_ST_st157_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st158_fsm_76;
        end
        ap_ST_st158_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st159_fsm_77;
        end
        ap_ST_st159_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st160_fsm_78;
        end
        ap_ST_st160_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st161_fsm_79;
        end
        ap_ST_st161_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st162_fsm_80;
        end
        ap_ST_st162_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st163_fsm_81;
        end
        ap_ST_st163_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st164_fsm_82;
        end
        ap_ST_st164_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st165_fsm_83;
        end
        ap_ST_st165_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st166_fsm_84;
        end
        ap_ST_st166_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st167_fsm_85;
        end
        ap_ST_st167_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st168_fsm_86;
        end
        ap_ST_st168_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st169_fsm_87;
        end
        ap_ST_st169_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st170_fsm_88;
        end
        ap_ST_st170_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st171_fsm_89;
        end
        ap_ST_st171_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st172_fsm_90;
        end
        ap_ST_st172_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st173_fsm_91;
        end
        ap_ST_st173_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st174_fsm_92;
        end
        ap_ST_st174_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st175_fsm_93;
        end
        ap_ST_st175_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st176_fsm_94;
        end
        ap_ST_st176_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st177_fsm_95;
        end
        ap_ST_st177_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st178_fsm_96;
        end
        ap_ST_st178_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st179_fsm_97;
        end
        ap_ST_st179_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st180_fsm_98;
        end
        ap_ST_st180_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st181_fsm_99;
        end
        ap_ST_st181_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st182_fsm_100;
        end
        ap_ST_st182_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st183_fsm_101;
        end
        ap_ST_st183_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st184_fsm_102;
        end
        ap_ST_st184_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st185_fsm_103;
        end
        ap_ST_st185_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st186_fsm_104;
        end
        ap_ST_st186_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st187_fsm_105;
        end
        ap_ST_st187_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st188_fsm_106;
        end
        ap_ST_st188_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st189_fsm_107;
        end
        ap_ST_st189_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st190_fsm_108;
        end
        ap_ST_st190_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st191_fsm_109;
        end
        ap_ST_st191_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st192_fsm_110;
        end
        ap_ST_st192_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st193_fsm_111;
        end
        ap_ST_st193_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st194_fsm_112;
        end
        ap_ST_st194_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st195_fsm_113;
        end
        ap_ST_st195_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st196_fsm_114;
        end
        ap_ST_st196_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st197_fsm_115;
        end
        ap_ST_st197_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st198_fsm_116;
        end
        ap_ST_st198_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st199_fsm_117;
        end
        ap_ST_st199_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st200_fsm_118;
        end
        ap_ST_st200_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st201_fsm_119;
        end
        ap_ST_st201_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st202_fsm_120;
        end
        ap_ST_st202_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st203_fsm_121;
        end
        ap_ST_st203_fsm_121 : 
        begin
            ap_NS_fsm = ap_ST_st204_fsm_122;
        end
        ap_ST_st204_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st205_fsm_123;
        end
        ap_ST_st205_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st206_fsm_124;
        end
        ap_ST_st206_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st207_fsm_125;
        end
        ap_ST_st207_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st208_fsm_126;
        end
        ap_ST_st208_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st209_fsm_127;
        end
        ap_ST_st209_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st210_fsm_128;
        end
        ap_ST_st210_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st211_fsm_129;
        end
        ap_ST_st211_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st212_fsm_130;
        end
        ap_ST_st212_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st213_fsm_131;
        end
        ap_ST_st213_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st214_fsm_132;
        end
        ap_ST_st214_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st215_fsm_133;
        end
        ap_ST_st215_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st216_fsm_134;
        end
        ap_ST_st216_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st217_fsm_135;
        end
        ap_ST_st217_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st218_fsm_136;
        end
        ap_ST_st218_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st219_fsm_137;
        end
        ap_ST_st219_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st220_fsm_138;
        end
        ap_ST_st220_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st221_fsm_139;
        end
        ap_ST_st221_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st222_fsm_140;
        end
        ap_ST_st222_fsm_140 : 
        begin
            ap_NS_fsm = ap_ST_st223_fsm_141;
        end
        ap_ST_st223_fsm_141 : 
        begin
            ap_NS_fsm = ap_ST_st224_fsm_142;
        end
        ap_ST_st224_fsm_142 : 
        begin
            ap_NS_fsm = ap_ST_st225_fsm_143;
        end
        ap_ST_st225_fsm_143 : 
        begin
            ap_NS_fsm = ap_ST_st226_fsm_144;
        end
        ap_ST_st226_fsm_144 : 
        begin
            ap_NS_fsm = ap_ST_st227_fsm_145;
        end
        ap_ST_st227_fsm_145 : 
        begin
            ap_NS_fsm = ap_ST_st228_fsm_146;
        end
        ap_ST_st228_fsm_146 : 
        begin
            ap_NS_fsm = ap_ST_st229_fsm_147;
        end
        ap_ST_st229_fsm_147 : 
        begin
            ap_NS_fsm = ap_ST_st230_fsm_148;
        end
        ap_ST_st230_fsm_148 : 
        begin
            ap_NS_fsm = ap_ST_st231_fsm_149;
        end
        ap_ST_st231_fsm_149 : 
        begin
            ap_NS_fsm = ap_ST_st232_fsm_150;
        end
        ap_ST_st232_fsm_150 : 
        begin
            ap_NS_fsm = ap_ST_st233_fsm_151;
        end
        ap_ST_st233_fsm_151 : 
        begin
            ap_NS_fsm = ap_ST_st234_fsm_152;
        end
        ap_ST_st234_fsm_152 : 
        begin
            ap_NS_fsm = ap_ST_st235_fsm_153;
        end
        ap_ST_st235_fsm_153 : 
        begin
            ap_NS_fsm = ap_ST_st236_fsm_154;
        end
        ap_ST_st236_fsm_154 : 
        begin
            ap_NS_fsm = ap_ST_st237_fsm_155;
        end
        ap_ST_st237_fsm_155 : 
        begin
            ap_NS_fsm = ap_ST_st238_fsm_156;
        end
        ap_ST_st238_fsm_156 : 
        begin
            ap_NS_fsm = ap_ST_st239_fsm_157;
        end
        ap_ST_st239_fsm_157 : 
        begin
            ap_NS_fsm = ap_ST_st240_fsm_158;
        end
        ap_ST_st240_fsm_158 : 
        begin
            ap_NS_fsm = ap_ST_st241_fsm_159;
        end
        ap_ST_st241_fsm_159 : 
        begin
            ap_NS_fsm = ap_ST_st242_fsm_160;
        end
        ap_ST_st242_fsm_160 : 
        begin
            ap_NS_fsm = ap_ST_st243_fsm_161;
        end
        ap_ST_st243_fsm_161 : 
        begin
            ap_NS_fsm = ap_ST_st244_fsm_162;
        end
        ap_ST_st244_fsm_162 : 
        begin
            ap_NS_fsm = ap_ST_st245_fsm_163;
        end
        ap_ST_st245_fsm_163 : 
        begin
            ap_NS_fsm = ap_ST_st246_fsm_164;
        end
        ap_ST_st246_fsm_164 : 
        begin
            ap_NS_fsm = ap_ST_st247_fsm_165;
        end
        ap_ST_st247_fsm_165 : 
        begin
            ap_NS_fsm = ap_ST_st248_fsm_166;
        end
        ap_ST_st248_fsm_166 : 
        begin
            ap_NS_fsm = ap_ST_st249_fsm_167;
        end
        ap_ST_st249_fsm_167 : 
        begin
            ap_NS_fsm = ap_ST_st250_fsm_168;
        end
        ap_ST_st250_fsm_168 : 
        begin
            ap_NS_fsm = ap_ST_st251_fsm_169;
        end
        ap_ST_st251_fsm_169 : 
        begin
            ap_NS_fsm = ap_ST_st252_fsm_170;
        end
        ap_ST_st252_fsm_170 : 
        begin
            ap_NS_fsm = ap_ST_st253_fsm_171;
        end
        ap_ST_st253_fsm_171 : 
        begin
            ap_NS_fsm = ap_ST_st254_fsm_172;
        end
        ap_ST_st254_fsm_172 : 
        begin
            ap_NS_fsm = ap_ST_st255_fsm_173;
        end
        ap_ST_st255_fsm_173 : 
        begin
            ap_NS_fsm = ap_ST_st256_fsm_174;
        end
        ap_ST_st256_fsm_174 : 
        begin
            ap_NS_fsm = ap_ST_st257_fsm_175;
        end
        ap_ST_st257_fsm_175 : 
        begin
            ap_NS_fsm = ap_ST_st258_fsm_176;
        end
        ap_ST_st258_fsm_176 : 
        begin
            ap_NS_fsm = ap_ST_st259_fsm_177;
        end
        ap_ST_st259_fsm_177 : 
        begin
            ap_NS_fsm = ap_ST_st260_fsm_178;
        end
        ap_ST_st260_fsm_178 : 
        begin
            ap_NS_fsm = ap_ST_st261_fsm_179;
        end
        ap_ST_st261_fsm_179 : 
        begin
            ap_NS_fsm = ap_ST_st262_fsm_180;
        end
        ap_ST_st262_fsm_180 : 
        begin
            ap_NS_fsm = ap_ST_st263_fsm_181;
        end
        ap_ST_st263_fsm_181 : 
        begin
            ap_NS_fsm = ap_ST_st264_fsm_182;
        end
        ap_ST_st264_fsm_182 : 
        begin
            ap_NS_fsm = ap_ST_st265_fsm_183;
        end
        ap_ST_st265_fsm_183 : 
        begin
            ap_NS_fsm = ap_ST_st266_fsm_184;
        end
        ap_ST_st266_fsm_184 : 
        begin
            ap_NS_fsm = ap_ST_st267_fsm_185;
        end
        ap_ST_st267_fsm_185 : 
        begin
            ap_NS_fsm = ap_ST_st268_fsm_186;
        end
        ap_ST_st268_fsm_186 : 
        begin
            ap_NS_fsm = ap_ST_st269_fsm_187;
        end
        ap_ST_st269_fsm_187 : 
        begin
            ap_NS_fsm = ap_ST_st270_fsm_188;
        end
        ap_ST_st270_fsm_188 : 
        begin
            ap_NS_fsm = ap_ST_st271_fsm_189;
        end
        ap_ST_st271_fsm_189 : 
        begin
            ap_NS_fsm = ap_ST_st272_fsm_190;
        end
        ap_ST_st272_fsm_190 : 
        begin
            ap_NS_fsm = ap_ST_st273_fsm_191;
        end
        ap_ST_st273_fsm_191 : 
        begin
            ap_NS_fsm = ap_ST_st274_fsm_192;
        end
        ap_ST_st274_fsm_192 : 
        begin
            ap_NS_fsm = ap_ST_st275_fsm_193;
        end
        ap_ST_st275_fsm_193 : 
        begin
            ap_NS_fsm = ap_ST_st276_fsm_194;
        end
        ap_ST_st276_fsm_194 : 
        begin
            ap_NS_fsm = ap_ST_st277_fsm_195;
        end
        ap_ST_st277_fsm_195 : 
        begin
            ap_NS_fsm = ap_ST_st278_fsm_196;
        end
        ap_ST_st278_fsm_196 : 
        begin
            ap_NS_fsm = ap_ST_st279_fsm_197;
        end
        ap_ST_st279_fsm_197 : 
        begin
            ap_NS_fsm = ap_ST_st280_fsm_198;
        end
        ap_ST_st280_fsm_198 : 
        begin
            ap_NS_fsm = ap_ST_st281_fsm_199;
        end
        ap_ST_st281_fsm_199 : 
        begin
            ap_NS_fsm = ap_ST_st282_fsm_200;
        end
        ap_ST_st282_fsm_200 : 
        begin
            ap_NS_fsm = ap_ST_st283_fsm_201;
        end
        ap_ST_st283_fsm_201 : 
        begin
            ap_NS_fsm = ap_ST_st284_fsm_202;
        end
        ap_ST_st284_fsm_202 : 
        begin
            ap_NS_fsm = ap_ST_st285_fsm_203;
        end
        ap_ST_st285_fsm_203 : 
        begin
            ap_NS_fsm = ap_ST_st286_fsm_204;
        end
        ap_ST_st286_fsm_204 : 
        begin
            ap_NS_fsm = ap_ST_st287_fsm_205;
        end
        ap_ST_st287_fsm_205 : 
        begin
            ap_NS_fsm = ap_ST_st288_fsm_206;
        end
        ap_ST_st288_fsm_206 : 
        begin
            ap_NS_fsm = ap_ST_st289_fsm_207;
        end
        ap_ST_st289_fsm_207 : 
        begin
            ap_NS_fsm = ap_ST_st290_fsm_208;
        end
        ap_ST_st290_fsm_208 : 
        begin
            ap_NS_fsm = ap_ST_st291_fsm_209;
        end
        ap_ST_st291_fsm_209 : 
        begin
            ap_NS_fsm = ap_ST_st292_fsm_210;
        end
        ap_ST_st292_fsm_210 : 
        begin
            ap_NS_fsm = ap_ST_st293_fsm_211;
        end
        ap_ST_st293_fsm_211 : 
        begin
            ap_NS_fsm = ap_ST_st294_fsm_212;
        end
        ap_ST_st294_fsm_212 : 
        begin
            ap_NS_fsm = ap_ST_st295_fsm_213;
        end
        ap_ST_st295_fsm_213 : 
        begin
            ap_NS_fsm = ap_ST_st296_fsm_214;
        end
        ap_ST_st296_fsm_214 : 
        begin
            ap_NS_fsm = ap_ST_st297_fsm_215;
        end
        ap_ST_st297_fsm_215 : 
        begin
            ap_NS_fsm = ap_ST_st298_fsm_216;
        end
        ap_ST_st298_fsm_216 : 
        begin
            ap_NS_fsm = ap_ST_st299_fsm_217;
        end
        ap_ST_st299_fsm_217 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) begin
                ap_NS_fsm = ap_ST_st300_fsm_218;
            end else begin
                ap_NS_fsm = ap_ST_st299_fsm_217;
            end
        end
        ap_ST_st300_fsm_218 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_WREADY)) begin
                ap_NS_fsm = ap_ST_st301_fsm_219;
            end else begin
                ap_NS_fsm = ap_ST_st300_fsm_218;
            end
        end
        ap_ST_st301_fsm_219 : 
        begin
            ap_NS_fsm = ap_ST_st302_fsm_220;
        end
        ap_ST_st302_fsm_220 : 
        begin
            ap_NS_fsm = ap_ST_st303_fsm_221;
        end
        ap_ST_st303_fsm_221 : 
        begin
            if (~(gmem32_BVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st40_fsm_37;
            end else begin
                ap_NS_fsm = ap_ST_st303_fsm_221;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_returnA_addr_3_gep_fu_404_p3 = ap_const_lv64_3;
assign acc_returnA_addr_4_gep_fu_453_p3 = ap_const_lv64_4;
assign acc_returnA_addr_5_gep_fu_502_p3 = ap_const_lv64_5;
assign acc_returnA_addr_6_gep_fu_306_p3 = ap_const_lv64_1;
assign acc_returnA_addr_7_gep_fu_355_p3 = ap_const_lv64_2;
assign acc_returnA_addr_gep_fu_257_p3 = ap_const_lv64_0;
assign acc_returnA_d0 = ap_const_lv32_0;
assign acc_returnB_addr_3_gep_fu_411_p3 = ap_const_lv64_3;
assign acc_returnB_addr_4_gep_fu_460_p3 = ap_const_lv64_4;
assign acc_returnB_addr_5_gep_fu_509_p3 = ap_const_lv64_5;
assign acc_returnB_addr_6_gep_fu_313_p3 = ap_const_lv64_1;
assign acc_returnB_addr_7_gep_fu_362_p3 = ap_const_lv64_2;
assign acc_returnB_addr_gep_fu_264_p3 = ap_const_lv64_0;
assign acc_returnB_d1 = ap_const_lv32_0;
assign acc_weight_returnA_addr_3_gep_fu_425_p3 = ap_const_lv64_3;
assign acc_weight_returnA_addr_4_gep_fu_474_p3 = ap_const_lv64_4;
assign acc_weight_returnA_addr_5_gep_fu_523_p3 = ap_const_lv64_5;
assign acc_weight_returnA_addr_6_gep_fu_327_p3 = ap_const_lv64_1;
assign acc_weight_returnA_addr_7_gep_fu_376_p3 = ap_const_lv64_2;
assign acc_weight_returnA_addr_gep_fu_278_p3 = ap_const_lv64_0;
assign acc_weight_returnA_d1 = ap_const_lv32_0;
assign acc_weight_returnA_returnB_add_1_gep_fu_348_p3 = ap_const_lv64_1;
assign acc_weight_returnA_returnB_add_2_gep_fu_397_p3 = ap_const_lv64_2;
assign acc_weight_returnA_returnB_add_3_gep_fu_446_p3 = ap_const_lv64_3;
assign acc_weight_returnA_returnB_add_4_gep_fu_495_p3 = ap_const_lv64_4;
assign acc_weight_returnA_returnB_add_5_gep_fu_544_p3 = ap_const_lv64_5;
assign acc_weight_returnA_returnB_add_gep_fu_299_p3 = ap_const_lv64_0;
assign acc_weight_returnA_returnB_d1 = ap_const_lv32_0;
assign acc_weight_returnB_addr_3_gep_fu_439_p3 = ap_const_lv64_3;
assign acc_weight_returnB_addr_4_gep_fu_488_p3 = ap_const_lv64_4;
assign acc_weight_returnB_addr_5_gep_fu_537_p3 = ap_const_lv64_5;
assign acc_weight_returnB_addr_6_gep_fu_341_p3 = ap_const_lv64_1;
assign acc_weight_returnB_addr_7_gep_fu_390_p3 = ap_const_lv64_2;
assign acc_weight_returnB_addr_gep_fu_292_p3 = ap_const_lv64_0;
assign acc_weight_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareA_addr_3_gep_fu_418_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareA_addr_4_gep_fu_467_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareA_addr_5_gep_fu_516_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareA_addr_6_gep_fu_320_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareA_addr_7_gep_fu_369_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareA_addr_gep_fu_271_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareA_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareB_addr_3_gep_fu_432_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareB_addr_4_gep_fu_481_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareB_addr_5_gep_fu_530_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareB_addr_6_gep_fu_334_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareB_addr_7_gep_fu_383_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareB_addr_gep_fu_285_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareB_d1 = ap_const_lv32_0;
assign ap_return = ap_const_lv32_0;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_1000 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1000 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_1019 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1019 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_1118 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1118 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_1144 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1144 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_1153 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_1162 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1162 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_1178 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1178 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_1470 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1470 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_1520 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1520 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_1531 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1531 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end

/// ap_sig_bdd_1542 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1542 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B6]);
end

/// ap_sig_bdd_1551 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1551 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_1563 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1563 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_1575 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1575 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_1587 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1587 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_1692 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1692 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_1700 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1700 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_1731 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1731 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_DD]);
end

/// ap_sig_bdd_1803 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1803 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_1819 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1819 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_1841 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1841 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_DA]);
end

/// ap_sig_bdd_1866 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1866 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_1887 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1887 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_1894 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1894 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_1969 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1969 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_1981 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1981 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_66]);
end

/// ap_sig_bdd_1988 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1988 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6B]);
end

/// ap_sig_bdd_1995 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1995 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6F]);
end

/// ap_sig_bdd_2002 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2002 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_92]);
end

/// ap_sig_bdd_2009 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2009 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_96]);
end

/// ap_sig_bdd_2033 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2033 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_61]);
end

/// ap_sig_bdd_2040 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2040 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8D]);
end

/// ap_sig_bdd_2048 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2048 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B7]);
end

/// ap_sig_bdd_2065 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2065 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_74]);
end

/// ap_sig_bdd_2072 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2072 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_78]);
end

/// ap_sig_bdd_2079 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2079 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BC]);
end

/// ap_sig_bdd_2091 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2091 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_2099 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2099 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9B]);
end

/// ap_sig_bdd_2332 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2332 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_2340 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2340 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_2348 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2348 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_2356 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2356 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_2364 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2364 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_2372 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2372 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_2380 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2380 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_2388 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2388 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_2396 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2396 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_240 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_240 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_2404 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2404 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_2412 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2412 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_2420 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2420 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_2428 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2428 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_2436 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2436 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end

/// ap_sig_bdd_2444 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2444 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end

/// ap_sig_bdd_2452 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2452 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end

/// ap_sig_bdd_2460 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2460 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_54]);
end

/// ap_sig_bdd_2468 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2468 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end

/// ap_sig_bdd_2476 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2476 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end

/// ap_sig_bdd_2484 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2484 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_57]);
end

/// ap_sig_bdd_2492 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2492 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end

/// ap_sig_bdd_2500 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2500 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end

/// ap_sig_bdd_2508 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2508 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end

/// ap_sig_bdd_2516 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2516 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5B]);
end

/// ap_sig_bdd_2524 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2524 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end

/// ap_sig_bdd_2532 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2532 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_2540 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2540 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_2548 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2548 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5F]);
end

/// ap_sig_bdd_2558 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2558 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_75]);
end

/// ap_sig_bdd_2566 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2566 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_76]);
end

/// ap_sig_bdd_2576 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2576 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_79]);
end

/// ap_sig_bdd_2584 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2584 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end

/// ap_sig_bdd_2592 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2592 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7B]);
end

/// ap_sig_bdd_2600 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2600 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7C]);
end

/// ap_sig_bdd_2608 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2608 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7D]);
end

/// ap_sig_bdd_2616 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2616 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7E]);
end

/// ap_sig_bdd_2624 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2624 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7F]);
end

/// ap_sig_bdd_2632 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2632 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_80]);
end

/// ap_sig_bdd_2640 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2640 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_81]);
end

/// ap_sig_bdd_2648 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2648 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_82]);
end

/// ap_sig_bdd_2656 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2656 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_83]);
end

/// ap_sig_bdd_2664 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2664 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_84]);
end

/// ap_sig_bdd_2672 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2672 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_85]);
end

/// ap_sig_bdd_2680 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2680 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_86]);
end

/// ap_sig_bdd_2688 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2688 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_87]);
end

/// ap_sig_bdd_2696 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2696 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_88]);
end

/// ap_sig_bdd_2704 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2704 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_89]);
end

/// ap_sig_bdd_2712 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2712 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8A]);
end

/// ap_sig_bdd_2720 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2720 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8B]);
end

/// ap_sig_bdd_2728 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2728 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8C]);
end

/// ap_sig_bdd_2737 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2737 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8E]);
end

/// ap_sig_bdd_2745 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2745 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8F]);
end

/// ap_sig_bdd_2753 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2753 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_90]);
end

/// ap_sig_bdd_2763 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2763 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_93]);
end

/// ap_sig_bdd_2771 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2771 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_94]);
end

/// ap_sig_bdd_2781 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2781 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BD]);
end

/// ap_sig_bdd_2789 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2789 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BE]);
end

/// ap_sig_bdd_2797 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2797 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BF]);
end

/// ap_sig_bdd_2805 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2805 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C0]);
end

/// ap_sig_bdd_2813 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2813 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C1]);
end

/// ap_sig_bdd_2821 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2821 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C2]);
end

/// ap_sig_bdd_2829 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2829 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C3]);
end

/// ap_sig_bdd_2837 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2837 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C4]);
end

/// ap_sig_bdd_2845 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2845 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C5]);
end

/// ap_sig_bdd_2853 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2853 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C6]);
end

/// ap_sig_bdd_2861 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2861 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C7]);
end

/// ap_sig_bdd_2869 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2869 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C8]);
end

/// ap_sig_bdd_2877 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2877 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C9]);
end

/// ap_sig_bdd_2885 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2885 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CA]);
end

/// ap_sig_bdd_2893 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2893 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CB]);
end

/// ap_sig_bdd_2901 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2901 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CC]);
end

/// ap_sig_bdd_2909 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2909 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CD]);
end

/// ap_sig_bdd_2917 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2917 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CE]);
end

/// ap_sig_bdd_2925 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2925 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CF]);
end

/// ap_sig_bdd_2933 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2933 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D0]);
end

/// ap_sig_bdd_2941 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2941 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D1]);
end

/// ap_sig_bdd_2949 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2949 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D2]);
end

/// ap_sig_bdd_2957 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2957 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D3]);
end

/// ap_sig_bdd_2965 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2965 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D4]);
end

/// ap_sig_bdd_2973 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2973 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D5]);
end

/// ap_sig_bdd_2981 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2981 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D6]);
end

/// ap_sig_bdd_2989 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2989 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D7]);
end

/// ap_sig_bdd_2997 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2997 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D8]);
end

/// ap_sig_bdd_427 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_427 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_436 assign process. ///
always @ (gmem32_RVALID or exitcond4_reg_1862)
begin
    ap_sig_bdd_436 = ((gmem32_RVALID == ap_const_logic_0) & (exitcond4_reg_1862 == ap_const_lv1_0));
end

/// ap_sig_bdd_452 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_452 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_459 assign process. ///
always @ (gmem32_RVALID or exitcond2_reg_1906)
begin
    ap_sig_bdd_459 = ((gmem32_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond2_reg_1906));
end

/// ap_sig_bdd_475 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_475 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_587 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_587 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_603 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_603 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_65]);
end

/// ap_sig_bdd_611 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_611 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6A]);
end

/// ap_sig_bdd_619 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_619 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_91]);
end

/// ap_sig_bdd_627 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_627 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BB]);
end

/// ap_sig_bdd_636 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_636 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_675 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_675 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_685 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_685 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_697 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_697 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_709 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_709 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6E]);
end

/// ap_sig_bdd_717 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_717 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_77]);
end

/// ap_sig_bdd_725 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_725 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9A]);
end

/// ap_sig_bdd_753 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_753 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_60]);
end

/// ap_sig_bdd_762 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_762 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D9]);
end

/// ap_sig_bdd_785 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_785 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_95]);
end

/// ap_sig_bdd_804 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_804 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_828 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_828 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_854 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_854 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_873 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_873 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_896 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_896 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_921 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_921 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_946 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_946 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_73]);
end

/// ap_sig_bdd_970 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_970 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9E]);
end

/// ap_sig_bdd_991 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_991 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end
assign bramA_address1 = tmp_16_fu_1482_p1;
assign bramA_d0 = reg_1124;
assign bramB_d0 = reg_1124;
assign column_index_fu_1398_p2 = (column_index_0_in_reg_877 + ap_const_lv32_1);
assign correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign counter_2_fu_1392_p2 = (counter_reg_842 + tmp_13_fu_1387_p2);
assign exitcond2_fu_1445_p2 = (indvar1_phi_fu_901_p4 == tmp_6_reg_1617? 1'b1: 1'b0);
assign exitcond4_fu_1359_p2 = (indvar_phi_fu_869_p4 == tmp_6_reg_1617? 1'b1: 1'b0);
assign exitcond_fu_1504_p2 = (i2_phi_fu_1009_p4 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_i_fu_1266_p2 = (i_i_reg_784 == ap_const_lv8_FC? 1'b1: 1'b0);
assign gmem32_ARBURST = ap_const_lv2_0;
assign gmem32_ARCACHE = ap_const_lv4_0;
assign gmem32_ARID = ap_const_lv1_0;
assign gmem32_ARLEN = p_add_i32_shr_reg_1623;
assign gmem32_ARLOCK = ap_const_lv2_0;
assign gmem32_ARPROT = ap_const_lv3_0;
assign gmem32_ARQOS = ap_const_lv4_0;
assign gmem32_ARREGION = ap_const_lv4_0;
assign gmem32_ARSIZE = ap_const_lv3_0;
assign gmem32_ARUSER = ap_const_lv1_0;
assign gmem32_AWADDR = gmem32_addr_2_reg_2149;
assign gmem32_AWBURST = ap_const_lv2_0;
assign gmem32_AWCACHE = ap_const_lv4_0;
assign gmem32_AWID = ap_const_lv1_0;
assign gmem32_AWLEN = ap_const_lv32_1;
assign gmem32_AWLOCK = ap_const_lv2_0;
assign gmem32_AWPROT = ap_const_lv3_0;
assign gmem32_AWQOS = ap_const_lv4_0;
assign gmem32_AWREGION = ap_const_lv4_0;
assign gmem32_AWSIZE = ap_const_lv3_0;
assign gmem32_AWUSER = ap_const_lv1_0;
assign gmem32_WDATA = reg_1130;
assign gmem32_WID = ap_const_lv1_0;
assign gmem32_WLAST = ap_const_logic_0;
assign gmem32_WSTRB = ap_const_lv4_F;
assign gmem32_WUSER = ap_const_lv1_0;
assign grp_fu_1017_ce = ap_const_logic_1;
assign grp_fu_1021_ce = ap_const_logic_1;
assign grp_fu_1025_ce = ap_const_logic_1;
assign grp_fu_1029_ce = ap_const_logic_1;
assign grp_fu_1029_p0 = reg_1203;
assign grp_fu_1029_p1 = tmp_34_reg_2050;
assign grp_fu_1041_ce = ap_const_logic_1;
assign grp_fu_1047_ce = ap_const_logic_1;
assign grp_fu_1051_ce = ap_const_logic_1;
assign grp_fu_1055_ce = ap_const_logic_1;
assign grp_fu_1055_p1 = ap_reg_ppstg_reg_1103_pp2_it27;
assign grp_fu_1070_ce = ap_const_logic_1;
assign grp_fu_1075_ce = ap_const_logic_1;
assign grp_fu_1075_p0 = tmp_1_reg_1595;
assign grp_fu_1078_ce = ap_const_logic_1;
assign grp_fu_1078_p0 = ap_const_lv32_0;
assign grp_fu_1078_p1 = reg_1114;
assign grp_fu_1083_ce = ap_const_logic_1;
assign grp_fu_1083_p0 = ap_const_lv32_0;
assign grp_fu_1083_p1 = reg_1210;
assign grp_fu_1088_ce = ap_const_logic_1;
assign grp_fu_1088_p0 = ap_const_lv32_0;
assign grp_fu_1409_ce = ap_const_logic_1;
assign grp_fu_1409_p0 = column_index_fu_1398_p2;
assign grp_fu_1409_p1 = number_of_days;
assign grp_fu_1487_ce = ap_const_logic_1;
assign grp_fu_1487_p0 = i1_phi_fu_913_p4;
assign grp_fu_1487_p1 = ap_const_lv31_6;
assign i1_cast_fu_1461_p1 = i1_phi_fu_913_p4;
assign i1_i_cast_fu_1283_p1 = i1_i_reg_796;
assign i_1_fu_1510_p2 = (i2_phi_fu_1009_p4 + ap_const_lv3_1);
assign i_2_fu_1277_p2 = (i_i_reg_784 + ap_const_lv8_1);
assign i_3_fu_1297_p2 = (i1_i_reg_796 + ap_const_lv31_1);
assign i_fu_1470_p2 = (i1_phi_fu_913_p4 + ap_const_lv31_1);
assign indvar_next1_fu_1450_p2 = (indvar1_phi_fu_901_p4 + ap_const_lv30_1);
assign indvar_next_fu_1364_p2 = (indvar_phi_fu_869_p4 + ap_const_lv30_1);
assign indvars_iv_next3_fu_1420_p2 = ($signed(indvars_iv2_reg_807) + $signed(ap_const_lv32_FFFFFFFF));
assign indvars_iv_next_fu_1414_p2 = (indvars_iv_reg_819 + ap_const_lv32_1);
assign next_mul_fu_1320_p1 = number_of_days;
assign next_mul_fu_1320_p2 = ($signed(phi_mul_reg_854) + $signed(next_mul_fu_1320_p1));
assign out_correlation4_sum_cast_fu_1530_p1 = out_correlation4_sum_fu_1525_p2;
assign out_correlation4_sum_fu_1525_p2 = ($signed(tmp_61_cast_reg_1563) + $signed(tmp_55_cast_fu_1521_p1));
assign p_add_i32_shr_fu_1316_p1 = tmp_6_fu_1313_p1;
assign row_index_1_fu_1334_p2 = (row_index_reg_831 + ap_const_lv31_1);
assign row_index_cast_fu_1325_p1 = row_index_reg_831;
assign smax_fu_1380_p3 = ((tmp_61_fu_1375_p2)? number_of_indices: indvars_iv_reg_819);
assign sum_weight_returnA_returnB_phi_fu_997_p4 = sum_weight_returnA_returnB_reg_993;
assign tmp_11_fu_1344_p2 = ($signed(tmp_62_cast_reg_1568) + $signed(tmp_9_fu_1340_p1));
assign tmp_12_fu_1456_p1 = ap_reg_ppstg_indvar1_reg_897_pp1_it1;
assign tmp_13_fu_1387_p2 = (smax_reg_1871 + indvars_iv2_reg_807);
assign tmp_14_fu_1465_p2 = ($signed(i1_cast_fu_1461_p1) < $signed(tmp_1_reg_1595)? 1'b1: 1'b0);
assign tmp_15_fu_1476_p1 = i1_phi_fu_913_p4;
assign tmp_16_fu_1482_p1 = i_fu_1470_p2;
assign tmp_1_fu_1303_p0 = number_of_days;
assign tmp_1_fu_1303_p2 = ($signed(tmp_1_fu_1303_p0) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_20_fu_1493_p1 = grp_fu_1487_p2;
assign tmp_3_fu_1238_p4 = {{out_correlation[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_4_fu_1329_p2 = ($signed(row_index_cast_fu_1325_p1) < $signed(tmp_reg_1606)? 1'b1: 1'b0);
assign tmp_55_cast_fu_1521_p1 = $signed(counter_1_reg_886);
assign tmp_55_fu_1349_p1 = tmp_11_fu_1344_p2;
assign tmp_56_fu_1540_p2 = (counter_1_reg_886 + ap_const_lv32_1);
assign tmp_57_fu_1516_p1 = i2_phi_fu_1009_p4;
assign tmp_58_i_fu_1272_p1 = i_i_reg_784;
assign tmp_59_i_fu_1287_p1 = number_of_days;
assign tmp_59_i_fu_1287_p2 = ($signed(i1_i_cast_fu_1283_p1) < $signed(tmp_59_i_fu_1287_p1)? 1'b1: 1'b0);
assign tmp_5_fu_1252_p4 = {{in_indices[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_60_i_fu_1292_p1 = i1_i_reg_796;
assign tmp_61_cast_fu_1248_p1 = tmp_3_fu_1238_p4;
assign tmp_61_fu_1375_p2 = ($signed(indvars_iv_reg_819) < $signed(number_of_indices)? 1'b1: 1'b0);
assign tmp_62_cast_fu_1262_p1 = tmp_5_fu_1252_p4;
assign tmp_62_fu_1426_p1 = grp_fu_1409_p2;
assign tmp_63_fu_1430_p2 = ($signed(tmp_62_cast_reg_1568) + $signed(tmp_62_fu_1426_p1));
assign tmp_64_fu_1435_p1 = tmp_63_fu_1430_p2;
assign tmp_6_fu_1313_p0 = number_of_days;
assign tmp_6_fu_1313_p1 = tmp_6_fu_1313_p0[29:0];
assign tmp_8_fu_1404_p2 = ($signed(column_index_fu_1398_p2) < $signed(number_of_indices)? 1'b1: 1'b0);
assign tmp_9_fu_1340_p1 = $signed(phi_mul_reg_854);
assign tmp_fu_1308_p2 = ($signed(number_of_indices) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_s_fu_1370_p1 = ap_reg_ppstg_indvar_reg_865_pp0_it1;
always @ (posedge ap_clk)
begin
    tmp_61_cast_reg_1563[32:30] <= 3'b000;
    tmp_62_cast_reg_1568[32:30] <= 3'b000;
    p_add_i32_shr_reg_1623[31:30] <= 2'b00;
    acc_returnA_addr_reg_1628[2:0] <= 3'b000;
    acc_returnB_addr_reg_1633[2:0] <= 3'b000;
    acc_weight_returnSquareA_addr_reg_1638[2:0] <= 3'b000;
    acc_weight_returnA_addr_reg_1643[2:0] <= 3'b000;
    acc_weight_returnSquareB_addr_reg_1648[2:0] <= 3'b000;
    acc_weight_returnB_addr_reg_1653[2:0] <= 3'b000;
    acc_weight_returnA_returnB_add_reg_1658[2:0] <= 3'b000;
    acc_returnA_addr_6_reg_1663[2:0] <= 3'b001;
    acc_returnB_addr_6_reg_1668[2:0] <= 3'b001;
    acc_weight_returnSquareA_addr_6_reg_1673[2:0] <= 3'b001;
    acc_weight_returnA_addr_6_reg_1678[2:0] <= 3'b001;
    acc_weight_returnSquareB_addr_6_reg_1683[2:0] <= 3'b001;
    acc_weight_returnB_addr_6_reg_1688[2:0] <= 3'b001;
    acc_weight_returnA_returnB_add_1_reg_1693[2:0] <= 3'b001;
    acc_returnA_addr_7_reg_1698[2:0] <= 3'b010;
    acc_returnB_addr_7_reg_1703[2:0] <= 3'b010;
    acc_weight_returnSquareA_addr_7_reg_1708[2:0] <= 3'b010;
    acc_weight_returnA_addr_7_reg_1713[2:0] <= 3'b010;
    acc_weight_returnSquareB_addr_7_reg_1718[2:0] <= 3'b010;
    acc_weight_returnB_addr_7_reg_1723[2:0] <= 3'b010;
    acc_weight_returnA_returnB_add_2_reg_1728[2:0] <= 3'b010;
    acc_returnA_addr_3_reg_1733[2:0] <= 3'b011;
    acc_returnB_addr_3_reg_1738[2:0] <= 3'b011;
    acc_weight_returnSquareA_addr_3_reg_1743[2:0] <= 3'b011;
    acc_weight_returnA_addr_3_reg_1748[2:0] <= 3'b011;
    acc_weight_returnSquareB_addr_3_reg_1753[2:0] <= 3'b011;
    acc_weight_returnB_addr_3_reg_1758[2:0] <= 3'b011;
    acc_weight_returnA_returnB_add_3_reg_1763[2:0] <= 3'b011;
    acc_returnA_addr_4_reg_1768[2:0] <= 3'b100;
    acc_returnB_addr_4_reg_1773[2:0] <= 3'b100;
    acc_weight_returnSquareA_addr_4_reg_1778[2:0] <= 3'b100;
    acc_weight_returnA_addr_4_reg_1783[2:0] <= 3'b100;
    acc_weight_returnSquareB_addr_4_reg_1788[2:0] <= 3'b100;
    acc_weight_returnB_addr_4_reg_1793[2:0] <= 3'b100;
    acc_weight_returnA_returnB_add_4_reg_1798[2:0] <= 3'b100;
    acc_returnA_addr_5_reg_1803[2:0] <= 3'b101;
    acc_returnB_addr_5_reg_1808[2:0] <= 3'b101;
    acc_weight_returnSquareA_addr_5_reg_1813[2:0] <= 3'b101;
    acc_weight_returnA_addr_5_reg_1818[2:0] <= 3'b101;
    acc_weight_returnSquareB_addr_5_reg_1823[2:0] <= 3'b101;
    acc_weight_returnB_addr_5_reg_1828[2:0] <= 3'b101;
    acc_weight_returnA_returnB_add_5_reg_1833[2:0] <= 3'b101;
    row_index_cast_reg_1843[31] <= 1'b0;
    tmp_16_reg_1929[63:31] <= 33'b000000000000000000000000000000000;
    tmp_57_reg_2069[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end



endmodule //correlation_accel_v1

