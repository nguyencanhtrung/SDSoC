<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<spirit:vendor>xilinx.com</spirit:vendor>
	<spirit:library>user</spirit:library>
	<spirit:name>arraycopy</spirit:name>
	<spirit:version>1.0</spirit:version>
	<spirit:busInterfaces>
		<spirit:busInterface>
			<spirit:name>s_axi_AXILiteS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
			<spirit:slave>
				<spirit:memoryMapRef spirit:memoryMapRef="s_axi_AXILiteS"/>
			</spirit:slave>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_AWADDR</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_AWVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_AWREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_WDATA</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_WSTRB</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_WVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_WREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_BRESP</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_BVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_BREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_ARADDR</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_ARVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_ARREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_RDATA</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_RRESP</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_RVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_AXILiteS_RREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:endianness>little</spirit:endianness>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ADDR_WIDTH</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.S_AXI_AXILITES.ADDR_WIDTH">6</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>DATA_WIDTH</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.S_AXI_AXILITES.DATA_WIDTH">32</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>PROTOCOL</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.S_AXI_AXILITES.PROTOCOL">AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>READ_WRITE_MODE</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.S_AXI_AXILITES.READ_WRITE_MODE">READ_WRITE</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>ap_clk</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>ap_clk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.AP_CLK.ASSOCIATED_BUSIF">s_axi_AXILiteS:m_axi_gmem32</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.AP_CLK.ASSOCIATED_RESET">ap_rst_n</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>ap_rst_n</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>ap_rst_n</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.AP_RST_N.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>interrupt</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
			<spirit:master/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>INTERRUPT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>interrupt</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>SENSITIVITY</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.SENSITIVITY">LEVEL_HIGH</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>m_axi_gmem32</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
			<spirit:master>
				<spirit:addressSpaceRef spirit:addressSpaceRef="Data"/>
			</spirit:master>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWADDR</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWLEN</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWSIZE</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWBURST</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWLOCK</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREGION</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWREGION</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWCACHE</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWPROT</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWQOS</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWQOS</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWUSER</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_AWREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_WID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_WDATA</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_WSTRB</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_WLAST</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_WUSER</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_WVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_WREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_BID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_BRESP</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_BUSER</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_BVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_BREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARADDR</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARLEN</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARSIZE</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARBURST</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARLOCK</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREGION</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARREGION</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARCACHE</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARPROT</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARQOS</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARQOS</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARUSER</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_ARREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_RID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_RDATA</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_RRESP</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_RLAST</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_RUSER</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_RVALID</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axi_gmem32_RREADY</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:endianness>little</spirit:endianness>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ADDR_WIDTH</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.M_AXI_GMEM32.ADDR_WIDTH">32</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>MAX_BURST_LENGTH</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.M_AXI_GMEM32.MAX_BURST_LENGTH">256</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>NUM_READ_OUTSTANDING</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.M_AXI_GMEM32.NUM_READ_OUTSTANDING">1</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.M_AXI_GMEM32.NUM_WRITE_OUTSTANDING">1</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>PROTOCOL</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.M_AXI_GMEM32.PROTOCOL">AXI4</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>READ_WRITE_MODE</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.M_AXI_GMEM32.READ_WRITE_MODE">READ_WRITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
					<spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.M_AXI_GMEM32.SUPPORTS_NARROW_BURST">0</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
	</spirit:busInterfaces>
	<spirit:addressSpaces>
		<spirit:addressSpace>
			<spirit:name>Data</spirit:name>
			<spirit:range spirit:format="string">4G</spirit:range>
			<spirit:width>32</spirit:width>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>DEPENDENT_ON</spirit:name>
					<spirit:value spirit:id="ADDRSPACEPARAM_VALUE.DATA.DEPENDENT_ON">s_axi_AXILiteS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>PREFERRED_USAGE</spirit:name>
					<spirit:value spirit:id="ADDRSPACEPARAM_VALUE.DATA.PREFERRED_USAGE">MEMORY</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:addressSpace>
	</spirit:addressSpaces>
	<spirit:memoryMaps>
		<spirit:memoryMap>
			<spirit:name>s_axi_AXILiteS</spirit:name>
			<spirit:addressBlock>
				<spirit:name>Reg</spirit:name>
				<spirit:baseAddress spirit:format="long" spirit:resolve="immediate">0</spirit:baseAddress>
				<spirit:range spirit:format="long" spirit:resolve="generated">65536</spirit:range>
				<spirit:width>32</spirit:width>
				<spirit:usage>register</spirit:usage>
				<spirit:access>read-write</spirit:access>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>OFFSET_BASE_PARAM</spirit:name>
						<spirit:value spirit:id="ADDRBLOCKPARAM_VALUE.REG.OFFSET_BASE_PARAM">C_S_AXI_AXILITES_BASEADDR</spirit:value>
					</spirit:parameter>
					<spirit:parameter>
						<spirit:name>OFFSET_HIGH_PARAM</spirit:name>
						<spirit:value spirit:id="ADDRBLOCKPARAM_VALUE.REG.OFFSET_HIGH_PARAM">C_S_AXI_AXILITES_HIGHADDR</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:addressBlock>
		</spirit:memoryMap>
	</spirit:memoryMaps>
	<spirit:model>
		<spirit:views>
			<spirit:view>
				<spirit:name>xilinx_verilogsynthesis</spirit:name>
				<spirit:displayName>Verilog Synthesis</spirit:displayName>
				<spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis</spirit:envIdentifier>
				<spirit:language>verilog</spirit:language>
				<spirit:modelName>arraycopy</spirit:modelName>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_verilogsynthesis_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_verilogbehavioralsimulation</spirit:name>
				<spirit:displayName>Verilog Simulation</spirit:displayName>
				<spirit:envIdentifier>verilogSource:vivado.xilinx.com:simulation</spirit:envIdentifier>
				<spirit:language>verilog</spirit:language>
				<spirit:modelName>arraycopy</spirit:modelName>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_verilogbehavioralsimulation_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_vhdlsynthesis</spirit:name>
				<spirit:displayName>VHDL Synthesis</spirit:displayName>
				<spirit:envIdentifier>vhdlSource:vivado.xilinx.com:synthesis</spirit:envIdentifier>
				<spirit:language>vhdl</spirit:language>
				<spirit:modelName>arraycopy</spirit:modelName>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_vhdlsynthesis_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_vhdlbehavioralsimulation</spirit:name>
				<spirit:displayName>VHDL Simulation</spirit:displayName>
				<spirit:envIdentifier>vhdlSource:vivado.xilinx.com:simulation</spirit:envIdentifier>
				<spirit:language>vhdl</spirit:language>
				<spirit:modelName>arraycopy</spirit:modelName>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_vhdlbehavioralsimulation_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_softwaredriver</spirit:name>
				<spirit:displayName>Software Driver</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:sw.driver</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_softwaredriver_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_miscfiles</spirit:name>
				<spirit:displayName>Miscellaneous</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:misc.files</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_miscfiles_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_xpgui</spirit:name>
				<spirit:displayName>UI Layout</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:xgui.ui</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_xpgui_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_utilityxitfiles</spirit:name>
				<spirit:displayName>Utility XIT/TTCL</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:xit.util</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_utilityxitfiles_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
		</spirit:views>
		<spirit:ports>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_AWADDR</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_S_AXI_AXILITES_ADDR_WIDTH')) - 1)">5</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_AWVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_AWREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_WDATA</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_S_AXI_AXILITES_DATA_WIDTH')) - 1)">31</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_WSTRB</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="((spirit:decode(id('MODELPARAM_VALUE.C_S_AXI_AXILITES_DATA_WIDTH')) div 8) - 1)">3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_WVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_WREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_BRESP</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_BVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_BREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_ARADDR</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_S_AXI_AXILITES_ADDR_WIDTH')) - 1)">5</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_ARVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_ARREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_RDATA</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_S_AXI_AXILITES_DATA_WIDTH')) - 1)">31</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_RRESP</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_RVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_AXILiteS_RREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>ap_clk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>ap_rst_n</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>interrupt</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ID_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWADDR</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ADDR_WIDTH')) - 1)">31</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWLEN</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>7</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWSIZE</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>2</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWBURST</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWLOCK</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWREGION</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWCACHE</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWPROT</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>2</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWQOS</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWUSER</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_AWUSER_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_AWREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_WID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ID_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_WDATA</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_DATA_WIDTH')) - 1)">31</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_WSTRB</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="((spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_DATA_WIDTH')) div 8) - 1)">3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_WLAST</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_WUSER</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_WUSER_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_WVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_WREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_BID</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ID_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_BRESP</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_BUSER</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_BUSER_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_BVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_BREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ID_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARADDR</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ADDR_WIDTH')) - 1)">31</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARLEN</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>7</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARSIZE</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>2</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARBURST</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARLOCK</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARREGION</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARCACHE</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARPROT</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>2</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARQOS</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left>3</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARUSER</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ARUSER_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_ARREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_RID</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_ID_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_RDATA</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_DATA_WIDTH')) - 1)">31</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_RRESP</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left>1</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_RLAST</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_RUSER</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id('MODELPARAM_VALUE.C_M_AXI_GMEM32_RUSER_WIDTH')) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_RVALID</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axi_gmem32_RREADY</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
		</spirit:ports>
		<spirit:modelParameters>
			<spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="integer">
				<spirit:name>C_S_AXI_AXILITES_ADDR_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_S_AXI_AXILITES_ADDR_WIDTH">6</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI_AXILITES_DATA_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="immediate" spirit:id="MODELPARAM_VALUE.C_S_AXI_AXILITES_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_ID_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_ID_WIDTH">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_ADDR_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="immediate" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_ADDR_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_DATA_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_AWUSER_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_AWUSER_WIDTH">1</spirit:value>
				<spirit:vendorExtensions>
					<xilinx:parameterInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:parameterInfo>
				</spirit:vendorExtensions>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_ARUSER_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_ARUSER_WIDTH">1</spirit:value>
				<spirit:vendorExtensions>
					<xilinx:parameterInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:parameterInfo>
				</spirit:vendorExtensions>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_WUSER_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_WUSER_WIDTH">1</spirit:value>
				<spirit:vendorExtensions>
					<xilinx:parameterInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:parameterInfo>
				</spirit:vendorExtensions>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_RUSER_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_RUSER_WIDTH">1</spirit:value>
				<spirit:vendorExtensions>
					<xilinx:parameterInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:parameterInfo>
				</spirit:vendorExtensions>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_M_AXI_GMEM32_BUSER_WIDTH</spirit:name>
				<spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_BUSER_WIDTH">1</spirit:value>
				<spirit:vendorExtensions>
					<xilinx:parameterInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:parameterInfo>
				</spirit:vendorExtensions>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="std_logic_vector">
				<spirit:name>C_M_AXI_GMEM32_USER_VALUE</spirit:name>
				<spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_USER_VALUE" spirit:bitStringLength="32">0x00000000</spirit:value>
				<spirit:vendorExtensions>
					<xilinx:parameterInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:parameterInfo>
				</spirit:vendorExtensions>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="std_logic_vector">
				<spirit:name>C_M_AXI_GMEM32_PROT_VALUE</spirit:name>
				<spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_PROT_VALUE" spirit:bitStringLength="3">"000"</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="std_logic_vector">
				<spirit:name>C_M_AXI_GMEM32_CACHE_VALUE</spirit:name>
				<spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_AXI_GMEM32_CACHE_VALUE" spirit:bitStringLength="4">"0011"</spirit:value>
			</spirit:modelParameter>
		</spirit:modelParameters>
	</spirit:model>
	<spirit:choices>
		<spirit:choice>
			<spirit:name>choices_0</spirit:name>
			<spirit:enumeration spirit:text="32">32</spirit:enumeration>
			<spirit:enumeration spirit:text="64">64</spirit:enumeration>
			<spirit:enumeration spirit:text="128">128</spirit:enumeration>
			<spirit:enumeration spirit:text="256">256</spirit:enumeration>
			<spirit:enumeration spirit:text="512">512</spirit:enumeration>
			<spirit:enumeration spirit:text="1024">1024</spirit:enumeration>
		</spirit:choice>
	</spirit:choices>
	<spirit:fileSets>
		<spirit:fileSet>
			<spirit:name>xilinx_verilogsynthesis_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>constraints/arraycopy_ooc.xdc</spirit:name>
				<spirit:userFileType>xdc</spirit:userFileType>
				<spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
				<spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
				<spirit:userFileType>USED_IN_implementation</spirit:userFileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/verilog/arraycopy_gmem32_m_axi.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/verilog/arraycopy_AXILiteS_s_axi.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/verilog/arraycopy.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_verilogbehavioralsimulation_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>hdl/verilog/arraycopy_gmem32_m_axi.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/verilog/arraycopy_AXILiteS_s_axi.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/verilog/arraycopy.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_vhdlsynthesis_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>constraints/arraycopy_ooc.xdc</spirit:name>
				<spirit:userFileType>xdc</spirit:userFileType>
				<spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
				<spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
				<spirit:userFileType>USED_IN_implementation</spirit:userFileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/vhdl/arraycopy.vhd</spirit:name>
				<spirit:fileType>vhdlSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/vhdl/arraycopy_gmem32_m_axi.vhd</spirit:name>
				<spirit:fileType>vhdlSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/vhdl/arraycopy_AXILiteS_s_axi.vhd</spirit:name>
				<spirit:fileType>vhdlSource</spirit:fileType>
				<spirit:userFileType>CHECKSUM_484f3977</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_vhdlbehavioralsimulation_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>hdl/vhdl/arraycopy.vhd</spirit:name>
				<spirit:fileType>vhdlSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/vhdl/arraycopy_gmem32_m_axi.vhd</spirit:name>
				<spirit:fileType>vhdlSource</spirit:fileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/vhdl/arraycopy_AXILiteS_s_axi.vhd</spirit:name>
				<spirit:fileType>vhdlSource</spirit:fileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_xpgui_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>xgui/arraycopy_v1_0.tcl</spirit:name>
				<spirit:userFileType>XGUI_VERSION_2</spirit:userFileType>
				<spirit:fileType>tclSource</spirit:fileType>
				<spirit:userFileType>CHECKSUM_d6275ac6</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
	</spirit:fileSets>
	<spirit:description>An example RTL IP</spirit:description>
	<spirit:parameters>
		<spirit:parameter>
			<spirit:name>C_S_AXI_AXILITES_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_S_AXI_AXILITES_ADDR_WIDTH" spirit:order="2" spirit:configGroups="1 s_axi_AXILiteS_(AXI4Lite_Slave_Interface)" spirit:minimum="6" spirit:maximum="32">6</spirit:value>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_ID_WIDTH</spirit:name>
			<spirit:displayName>ID width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_ID_WIDTH" spirit:order="3" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:minimum="1" spirit:maximum="32">1</spirit:value>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_DATA_WIDTH" spirit:choiceRef="choices_0" spirit:order="4" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)">32</spirit:value>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_ENABLE_USER_PORTS</spirit:name>
			<spirit:displayName>Enable USER ports</spirit:displayName>
			<spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS" spirit:order="5" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)">false</spirit:value>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_AWUSER_WIDTH</spirit:name>
			<spirit:displayName>AWUSER width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_AWUSER_WIDTH" spirit:order="6" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:minimum="1" spirit:maximum="1024">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_WUSER_WIDTH</spirit:name>
			<spirit:displayName>WUSER width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_WUSER_WIDTH" spirit:order="7" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:minimum="1" spirit:maximum="1024">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_BUSER_WIDTH</spirit:name>
			<spirit:displayName>BUSER width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_BUSER_WIDTH" spirit:order="8" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:minimum="1" spirit:maximum="1024">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_ARUSER_WIDTH</spirit:name>
			<spirit:displayName>ARUSER width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_ARUSER_WIDTH" spirit:order="9" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:minimum="1" spirit:maximum="1024">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_RUSER_WIDTH</spirit:name>
			<spirit:displayName>RUSER width</spirit:displayName>
			<spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_RUSER_WIDTH" spirit:order="10" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:minimum="1" spirit:maximum="1024">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_USER_VALUE</spirit:name>
			<spirit:displayName>USER value</spirit:displayName>
			<spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_USER_VALUE" spirit:order="11" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:bitStringLength="32">0x00000000</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id('PARAM_VALUE.C_M_AXI_GMEM32_ENABLE_USER_PORTS')) = 1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_PROT_VALUE</spirit:name>
			<spirit:displayName>PROT value</spirit:displayName>
			<spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_PROT_VALUE" spirit:order="12" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:bitStringLength="3">"000"</spirit:value>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_M_AXI_GMEM32_CACHE_VALUE</spirit:name>
			<spirit:displayName>CACHE value</spirit:displayName>
			<spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.C_M_AXI_GMEM32_CACHE_VALUE" spirit:order="13" spirit:configGroups="1 m_axi_gmem32_(AXI4_Master_Interface)" spirit:bitStringLength="4">"0011"</spirit:value>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>Component_Name</spirit:name>
			<spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="1">arraycopy_v1_0</spirit:value>
		</spirit:parameter>
	</spirit:parameters>
	<spirit:vendorExtensions>
		<xilinx:coreExtensions>
			<xilinx:supportedFamilies>
				<xilinx:family xilinx:lifeCycle="Pre-Production">zynq</xilinx:family>
			</xilinx:supportedFamilies>
			<xilinx:displayName>Arraycopy</xilinx:displayName>
			<xilinx:coreRevision>1411130939</xilinx:coreRevision>
			<xilinx:coreCreationDateTime>2014-11-13T17:39:41Z</xilinx:coreCreationDateTime>
		</xilinx:coreExtensions>
		<xilinx:packagingInfo>
			<xilinx:xilinxVersion>2014.2</xilinx:xilinxVersion>
		</xilinx:packagingInfo>
	</spirit:vendorExtensions>
</spirit:component>
