

================================================================
== Vivado HLS Report for 'mmult_accel'
================================================================
* Date:           Wed Jul 27 20:24:58 2016

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        mmult_accel
* Solution:       solution
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   5.95|      4.35|        0.74|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  526401|  526401|  526402|  526402|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+--------+--------+----------+-----------+-----------+------+----------+
        |                 |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  526400|  526400|     16450|          -|          -|    32|    no    |
        | + Loop 1.1      |   16448|   16448|       514|          -|          -|    32|    no    |
        |  ++ Loop 1.1.1  |     512|     512|        16|          -|          -|    32|    no    |
        +-----------------+--------+--------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 19
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
3 --> 
	2  / (exitcond1)
	4  / (!exitcond1)
4 --> 
	5  / (!exitcond)
	3  / (exitcond)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_20 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([1024 x float]* %in_A) nounwind, !map !0

ST_1: stg_21 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([1024 x float]* %in_B) nounwind, !map !6

ST_1: stg_22 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([1024 x float]* %out_C) nounwind, !map !10

ST_1: stg_23 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @str) nounwind

ST_1: stg_24 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecLatency(i32 1, i32 65535, [1 x i8]* @p_str) nounwind

ST_1: stg_25 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecInterface([1024 x float]* %in_A, [5 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: stg_26 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecMemCore([1024 x float]* %in_A, [1 x i8]* @p_str, [7 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: stg_27 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface([1024 x float]* %in_B, [5 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: stg_28 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecMemCore([1024 x float]* %in_B, [1 x i8]* @p_str, [7 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: stg_29 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface([1024 x float]* %out_C, [5 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: stg_30 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecMemCore([1024 x float]* %out_C, [1 x i8]* @p_str, [7 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: stg_31 [1/1] 1.57ns
:11  br label %.loopexit


 <State 2>: 1.94ns
ST_2: row [1/1] 0.00ns
.loopexit:0  %row = phi i6 [ 0, %0 ], [ %row_1, %.preheader3 ]

ST_2: exitcond2 [1/1] 1.94ns
.loopexit:1  %exitcond2 = icmp eq i6 %row, -32

ST_2: empty [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_2: row_1 [1/1] 1.72ns
.loopexit:3  %row_1 = add i6 %row, 1

ST_2: stg_36 [1/1] 0.00ns
.loopexit:4  br i1 %exitcond2, label %3, label %.preheader3.preheader

ST_2: tmp_1 [1/1] 0.00ns
.preheader3.preheader:0  %tmp_1 = trunc i6 %row to i5

ST_2: tmp [1/1] 0.00ns
.preheader3.preheader:1  %tmp = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp_1, i5 0)

ST_2: stg_39 [1/1] 1.57ns
.preheader3.preheader:2  br label %.preheader3

ST_2: stg_40 [1/1] 0.00ns
:0  ret void


 <State 3>: 3.51ns
ST_3: col [1/1] 0.00ns
.preheader3:0  %col = phi i6 [ %col_1, %2 ], [ 0, %.preheader3.preheader ]

ST_3: col_cast2 [1/1] 0.00ns
.preheader3:1  %col_cast2 = zext i6 %col to i10

ST_3: exitcond1 [1/1] 1.94ns
.preheader3:2  %exitcond1 = icmp eq i6 %col, -32

ST_3: empty_2 [1/1] 0.00ns
.preheader3:3  %empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_3: col_1 [1/1] 1.72ns
.preheader3:4  %col_1 = add i6 %col, 1

ST_3: stg_46 [1/1] 1.57ns
.preheader3:5  br i1 %exitcond1, label %.loopexit, label %.preheader


 <State 4>: 4.23ns
ST_4: result [1/1] 0.00ns
.preheader:0  %result = phi float [ %result_1, %1 ], [ 0.000000e+00, %.preheader3 ]

ST_4: k [1/1] 0.00ns
.preheader:1  %k = phi i6 [ %k_1, %1 ], [ 0, %.preheader3 ]

ST_4: k_cast1 [1/1] 0.00ns
.preheader:2  %k_cast1 = zext i6 %k to i10

ST_4: exitcond [1/1] 1.94ns
.preheader:3  %exitcond = icmp eq i6 %k, -32

ST_4: empty_3 [1/1] 0.00ns
.preheader:4  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_4: k_1 [1/1] 1.72ns
.preheader:5  %k_1 = add i6 %k, 1

ST_4: stg_53 [1/1] 0.00ns
.preheader:6  br i1 %exitcond, label %2, label %1

ST_4: tmp_5 [1/1] 1.84ns
:0  %tmp_5 = add i10 %k_cast1, %tmp

ST_4: tmp_6 [1/1] 0.00ns
:1  %tmp_6 = zext i10 %tmp_5 to i64

ST_4: in_A_addr [1/1] 0.00ns
:2  %in_A_addr = getelementptr [1024 x float]* %in_A, i64 0, i64 %tmp_6

ST_4: in_A_load [2/2] 2.39ns
:3  %in_A_load = load float* %in_A_addr, align 4

ST_4: tmp_4 [1/1] 0.00ns
:4  %tmp_4 = trunc i6 %k to i5

ST_4: tmp_7 [1/1] 0.00ns
:5  %tmp_7 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp_4, i5 0)

ST_4: tmp_8 [1/1] 1.84ns
:6  %tmp_8 = add i10 %tmp_7, %col_cast2

ST_4: tmp_9 [1/1] 0.00ns
:7  %tmp_9 = zext i10 %tmp_8 to i64

ST_4: in_B_addr [1/1] 0.00ns
:8  %in_B_addr = getelementptr [1024 x float]* %in_B, i64 0, i64 %tmp_9

ST_4: in_B_load [2/2] 2.39ns
:9  %in_B_load = load float* %in_B_addr, align 4

ST_4: tmp_2 [1/1] 1.84ns
:0  %tmp_2 = add i10 %col_cast2, %tmp

ST_4: tmp_3 [1/1] 0.00ns
:1  %tmp_3 = zext i10 %tmp_2 to i64

ST_4: out_C_addr [1/1] 0.00ns
:2  %out_C_addr = getelementptr [1024 x float]* %out_C, i64 0, i64 %tmp_3

ST_4: stg_67 [1/1] 2.39ns
:3  store float %result, float* %out_C_addr, align 4

ST_4: stg_68 [1/1] 0.00ns
:4  br label %.preheader3


 <State 5>: 2.39ns
ST_5: in_A_load [1/2] 2.39ns
:3  %in_A_load = load float* %in_A_addr, align 4

ST_5: in_B_load [1/2] 2.39ns
:9  %in_B_load = load float* %in_B_addr, align 4


 <State 6>: 4.35ns
ST_6: tmp_s [5/5] 4.35ns
:10  %tmp_s = fmul float %in_A_load, %in_B_load


 <State 7>: 4.35ns
ST_7: tmp_s [4/5] 4.35ns
:10  %tmp_s = fmul float %in_A_load, %in_B_load


 <State 8>: 4.35ns
ST_8: tmp_s [3/5] 4.35ns
:10  %tmp_s = fmul float %in_A_load, %in_B_load


 <State 9>: 4.35ns
ST_9: tmp_s [2/5] 4.35ns
:10  %tmp_s = fmul float %in_A_load, %in_B_load


 <State 10>: 4.35ns
ST_10: tmp_s [1/5] 4.35ns
:10  %tmp_s = fmul float %in_A_load, %in_B_load


 <State 11>: 4.35ns
ST_11: result_1 [9/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 12>: 4.35ns
ST_12: result_1 [8/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 13>: 4.35ns
ST_13: result_1 [7/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 14>: 4.35ns
ST_14: result_1 [6/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 15>: 4.35ns
ST_15: result_1 [5/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 16>: 4.35ns
ST_16: result_1 [4/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 17>: 4.35ns
ST_17: result_1 [3/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 18>: 4.35ns
ST_18: result_1 [2/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s


 <State 19>: 4.35ns
ST_19: result_1 [1/9] 4.35ns
:11  %result_1 = fadd float %result, %tmp_s

ST_19: stg_85 [1/1] 0.00ns
:12  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
