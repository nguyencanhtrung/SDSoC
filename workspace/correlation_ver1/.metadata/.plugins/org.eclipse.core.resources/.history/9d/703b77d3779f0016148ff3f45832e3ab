

================================================================
== Vivado HLS Report for 'mmult'
================================================================
* Date:           Mon Oct 31 15:24:01 2016

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        mmult
* Solution:       solution
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   5.95|      5.20|        0.74|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  5420|  5420|  5421|  5421|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  1024|  1024|         2|          1|          1|  1024|    yes   |
        |- Loop 2  |  1024|  1024|         2|          1|          1|  1024|    yes   |
        |- Loop 3  |  2342|  2342|       297|          2|          1|  1024|    yes   |
        |- Loop 4  |  1025|  1025|         3|          1|          1|  1024|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 2, depth = 297
  * Pipeline-3: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 306
* Pipeline: 4
  Pipeline-0: II = 1, D = 2, States = { 2 3 }
  Pipeline-1: II = 1, D = 2, States = { 4 5 }
  Pipeline-2: II = 2, D = 297, States = { 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 }
  Pipeline-3: II = 1, D = 3, States = { 303 304 305 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	2  / true
4 --> 
	6  / (exitcond_flatten9)
	5  / (!exitcond_flatten9)
5 --> 
	4  / true
6 --> 
	303  / (exitcond_flatten1)
	7  / (!exitcond_flatten1)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	163  / true
163 --> 
	164  / true
164 --> 
	165  / true
165 --> 
	166  / true
166 --> 
	167  / true
167 --> 
	168  / true
168 --> 
	169  / true
169 --> 
	170  / true
170 --> 
	171  / true
171 --> 
	172  / true
172 --> 
	173  / true
173 --> 
	174  / true
174 --> 
	175  / true
175 --> 
	176  / true
176 --> 
	177  / true
177 --> 
	178  / true
178 --> 
	179  / true
179 --> 
	180  / true
180 --> 
	181  / true
181 --> 
	182  / true
182 --> 
	183  / true
183 --> 
	184  / true
184 --> 
	185  / true
185 --> 
	186  / true
186 --> 
	187  / true
187 --> 
	188  / true
188 --> 
	189  / true
189 --> 
	190  / true
190 --> 
	191  / true
191 --> 
	192  / true
192 --> 
	193  / true
193 --> 
	194  / true
194 --> 
	195  / true
195 --> 
	196  / true
196 --> 
	197  / true
197 --> 
	198  / true
198 --> 
	199  / true
199 --> 
	200  / true
200 --> 
	201  / true
201 --> 
	202  / true
202 --> 
	203  / true
203 --> 
	204  / true
204 --> 
	205  / true
205 --> 
	206  / true
206 --> 
	207  / true
207 --> 
	208  / true
208 --> 
	209  / true
209 --> 
	210  / true
210 --> 
	211  / true
211 --> 
	212  / true
212 --> 
	213  / true
213 --> 
	214  / true
214 --> 
	215  / true
215 --> 
	216  / true
216 --> 
	217  / true
217 --> 
	218  / true
218 --> 
	219  / true
219 --> 
	220  / true
220 --> 
	221  / true
221 --> 
	222  / true
222 --> 
	223  / true
223 --> 
	224  / true
224 --> 
	225  / true
225 --> 
	226  / true
226 --> 
	227  / true
227 --> 
	228  / true
228 --> 
	229  / true
229 --> 
	230  / true
230 --> 
	231  / true
231 --> 
	232  / true
232 --> 
	233  / true
233 --> 
	234  / true
234 --> 
	235  / true
235 --> 
	236  / true
236 --> 
	237  / true
237 --> 
	238  / true
238 --> 
	239  / true
239 --> 
	240  / true
240 --> 
	241  / true
241 --> 
	242  / true
242 --> 
	243  / true
243 --> 
	244  / true
244 --> 
	245  / true
245 --> 
	246  / true
246 --> 
	247  / true
247 --> 
	248  / true
248 --> 
	249  / true
249 --> 
	250  / true
250 --> 
	251  / true
251 --> 
	252  / true
252 --> 
	253  / true
253 --> 
	254  / true
254 --> 
	255  / true
255 --> 
	256  / true
256 --> 
	257  / true
257 --> 
	258  / true
258 --> 
	259  / true
259 --> 
	260  / true
260 --> 
	261  / true
261 --> 
	262  / true
262 --> 
	263  / true
263 --> 
	264  / true
264 --> 
	265  / true
265 --> 
	266  / true
266 --> 
	267  / true
267 --> 
	268  / true
268 --> 
	269  / true
269 --> 
	270  / true
270 --> 
	271  / true
271 --> 
	272  / true
272 --> 
	273  / true
273 --> 
	274  / true
274 --> 
	275  / true
275 --> 
	276  / true
276 --> 
	277  / true
277 --> 
	278  / true
278 --> 
	279  / true
279 --> 
	280  / true
280 --> 
	281  / true
281 --> 
	282  / true
282 --> 
	283  / true
283 --> 
	284  / true
284 --> 
	285  / true
285 --> 
	286  / true
286 --> 
	287  / true
287 --> 
	288  / true
288 --> 
	289  / true
289 --> 
	290  / true
290 --> 
	291  / true
291 --> 
	292  / true
292 --> 
	293  / true
293 --> 
	294  / true
294 --> 
	295  / true
295 --> 
	296  / true
296 --> 
	297  / true
297 --> 
	298  / true
298 --> 
	299  / true
299 --> 
	300  / true
300 --> 
	301  / true
301 --> 
	302  / true
302 --> 
	6  / true
303 --> 
	306  / (exitcond_flatten2)
	304  / (!exitcond_flatten2)
304 --> 
	305  / true
305 --> 
	303  / true
306 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_307 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %A_data_V), !map !7

ST_1: stg_308 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i4* %A_keep_V), !map !13

ST_1: stg_309 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i4* %A_strb_V), !map !17

ST_1: stg_310 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i1* %A_user_V), !map !21

ST_1: stg_311 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %A_last_V), !map !25

ST_1: stg_312 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %A_id_V), !map !29

ST_1: stg_313 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %A_dest_V), !map !33

ST_1: stg_314 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %B_data_V), !map !37

ST_1: stg_315 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i4* %B_keep_V), !map !41

ST_1: stg_316 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i4* %B_strb_V), !map !45

ST_1: stg_317 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i1* %B_user_V), !map !49

ST_1: stg_318 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %B_last_V), !map !53

ST_1: stg_319 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i1* %B_id_V), !map !57

ST_1: stg_320 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i1* %B_dest_V), !map !61

ST_1: stg_321 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i32* %C_data_V), !map !65

ST_1: stg_322 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap(i4* %C_keep_V), !map !69

ST_1: stg_323 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap(i4* %C_strb_V), !map !73

ST_1: stg_324 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap(i1* %C_user_V), !map !77

ST_1: stg_325 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap(i1* %C_last_V), !map !81

ST_1: stg_326 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecBitsMap(i1* %C_id_V), !map !85

ST_1: stg_327 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap(i1* %C_dest_V), !map !89

ST_1: stg_328 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @str) nounwind

ST_1: A_buf_0 [1/1] 0.00ns
:22  %A_buf_0 = alloca [128 x float], align 4

ST_1: A_buf_1 [1/1] 0.00ns
:23  %A_buf_1 = alloca [128 x float], align 4

ST_1: A_buf_2 [1/1] 0.00ns
:24  %A_buf_2 = alloca [128 x float], align 4

ST_1: A_buf_3 [1/1] 0.00ns
:25  %A_buf_3 = alloca [128 x float], align 4

ST_1: A_buf_4 [1/1] 0.00ns
:26  %A_buf_4 = alloca [128 x float], align 4

ST_1: A_buf_5 [1/1] 0.00ns
:27  %A_buf_5 = alloca [128 x float], align 4

ST_1: A_buf_6 [1/1] 0.00ns
:28  %A_buf_6 = alloca [128 x float], align 4

ST_1: A_buf_7 [1/1] 0.00ns
:29  %A_buf_7 = alloca [128 x float], align 4

ST_1: B_buf_0 [1/1] 0.00ns
:30  %B_buf_0 = alloca [128 x float], align 4

ST_1: B_buf_1 [1/1] 0.00ns
:31  %B_buf_1 = alloca [128 x float], align 4

ST_1: B_buf_2 [1/1] 0.00ns
:32  %B_buf_2 = alloca [128 x float], align 4

ST_1: B_buf_3 [1/1] 0.00ns
:33  %B_buf_3 = alloca [128 x float], align 4

ST_1: B_buf_4 [1/1] 0.00ns
:34  %B_buf_4 = alloca [128 x float], align 4

ST_1: B_buf_5 [1/1] 0.00ns
:35  %B_buf_5 = alloca [128 x float], align 4

ST_1: B_buf_6 [1/1] 0.00ns
:36  %B_buf_6 = alloca [128 x float], align 4

ST_1: B_buf_7 [1/1] 0.00ns
:37  %B_buf_7 = alloca [128 x float], align 4

ST_1: C_buf [1/1] 0.00ns
:38  %C_buf = alloca [1024 x float], align 4

ST_1: stg_346 [1/1] 0.00ns
:39  call void (...)* @_ssdm_op_SpecLatency(i32 1, i32 65535, [1 x i8]* @p_str) nounwind

ST_1: stg_347 [1/1] 0.00ns
:40  call void (...)* @_ssdm_op_SpecInterface(i32* %A_data_V, i4* %A_keep_V, i4* %A_strb_V, i1* %A_user_V, i1* %A_last_V, i1* %A_id_V, i1* %A_dest_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_348 [1/1] 0.00ns
:41  call void (...)* @_ssdm_op_SpecInterface(i32* %B_data_V, i4* %B_keep_V, i4* %B_strb_V, i1* %B_user_V, i1* %B_last_V, i1* %B_id_V, i1* %B_dest_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_349 [1/1] 0.00ns
:42  call void (...)* @_ssdm_op_SpecInterface(i32* %C_data_V, i4* %C_keep_V, i4* %C_strb_V, i1* %C_user_V, i1* %C_last_V, i1* %C_id_V, i1* %C_dest_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_350 [1/1] 0.00ns
:43  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: stg_351 [1/1] 1.57ns
:44  br label %1


 <State 2>: 5.20ns
ST_2: indvar_flatten [1/1] 0.00ns
:0  %indvar_flatten = phi i11 [ 0, %0 ], [ %indvar_flatten_next, %2 ]

ST_2: indvars_iv1 [1/1] 0.00ns
:1  %indvars_iv1 = phi i11 [ 32, %0 ], [ %indvars_iv1_mid2, %2 ]

ST_2: i [1/1] 0.00ns
:2  %i = phi i6 [ 0, %0 ], [ %i_mid2, %2 ]

ST_2: k [1/1] 0.00ns
:3  %k = phi i11 [ 0, %0 ], [ %k_mid2, %2 ]

ST_2: k_1 [1/1] 0.00ns
:4  %k_1 = phi i11 [ 0, %0 ], [ %tmp_8, %2 ]

ST_2: j [1/1] 0.00ns
:5  %j = phi i6 [ 0, %0 ], [ %j_1, %2 ]

ST_2: tmp1_dest_V [1/1] 0.00ns
:6  %tmp1_dest_V = alloca i1, align 1

ST_2: tmp1_id_V [1/1] 0.00ns
:7  %tmp1_id_V = alloca i1, align 1

ST_2: tmp1_last_V [1/1] 0.00ns
:8  %tmp1_last_V = alloca i1, align 1

ST_2: tmp1_user_V [1/1] 0.00ns
:9  %tmp1_user_V = alloca i1, align 1

ST_2: tmp1_strb_V [1/1] 0.00ns
:10  %tmp1_strb_V = alloca i4, align 1

ST_2: tmp1_keep_V [1/1] 0.00ns
:11  %tmp1_keep_V = alloca i4, align 1

ST_2: exitcond_flatten [1/1] 2.11ns
:12  %exitcond_flatten = icmp eq i11 %indvar_flatten, -1024

ST_2: indvar_flatten_next [1/1] 1.84ns
:13  %indvar_flatten_next = add i11 %indvar_flatten, 1

ST_2: stg_366 [1/1] 1.57ns
:14  br i1 %exitcond_flatten, label %.preheader.preheader, label %.reset

ST_2: k_2_dup [1/1] 1.84ns
.reset:0  %k_2_dup = add i11 %k, 32

ST_2: exitcond [1/1] 2.11ns
.reset:2  %exitcond = icmp eq i11 %k_1, %indvars_iv1

ST_2: k_1_mid2 [1/1] 1.37ns
.reset:3  %k_1_mid2 = select i1 %exitcond, i11 %k_2_dup, i11 %k_1

ST_2: j_mid2 [1/1] 1.37ns
.reset:4  %j_mid2 = select i1 %exitcond, i6 0, i6 %j

ST_2: indvars_iv_next1_dup [1/1] 1.84ns
.reset:5  %indvars_iv_next1_dup = add i11 %indvars_iv1, 32

ST_2: indvars_iv1_mid2 [1/1] 1.37ns
.reset:6  %indvars_iv1_mid2 = select i1 %exitcond, i11 %indvars_iv_next1_dup, i11 %indvars_iv1

ST_2: i_s [1/1] 1.72ns
.reset:7  %i_s = add i6 %i, 1

ST_2: i_mid2 [1/1] 1.37ns
.reset:8  %i_mid2 = select i1 %exitcond, i6 %i_s, i6 %i

ST_2: k_mid2 [1/1] 1.37ns
.reset:9  %k_mid2 = select i1 %exitcond, i11 %k_2_dup, i11 %k

ST_2: empty_6 [1/1] 0.00ns
.reset:12  %empty_6 = call { i32, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %A_data_V, i4* %A_keep_V, i4* %A_strb_V, i1* %A_user_V, i1* %A_last_V, i1* %A_id_V, i1* %A_dest_V)

ST_2: A_data_V_tmp [1/1] 0.00ns
.reset:13  %A_data_V_tmp = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_6, 0

ST_2: tmp1_keep_V_1 [1/1] 0.00ns
.reset:14  %tmp1_keep_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_6, 1

ST_2: tmp1_strb_V_1 [1/1] 0.00ns
.reset:15  %tmp1_strb_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_6, 2

ST_2: tmp1_user_V_1 [1/1] 0.00ns
.reset:16  %tmp1_user_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_6, 3

ST_2: tmp1_last_V_1 [1/1] 0.00ns
.reset:17  %tmp1_last_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_6, 4

ST_2: tmp1_id_V_1 [1/1] 0.00ns
.reset:18  %tmp1_id_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_6, 5

ST_2: tmp1_dest_V_1 [1/1] 0.00ns
.reset:19  %tmp1_dest_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_6, 6

ST_2: arrayNo_cast [1/1] 0.00ns
.reset:21  %arrayNo_cast = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %j_mid2, i32 2, i32 5)

ST_2: tmp_6 [1/1] 0.00ns
.reset:22  %tmp_6 = trunc i6 %j_mid2 to i2

ST_2: stg_386 [1/1] 0.00ns
:0  store volatile i4 %tmp1_keep_V_1, i4* %tmp1_keep_V, align 4

ST_2: stg_387 [1/1] 0.00ns
:1  store volatile i4 %tmp1_strb_V_1, i4* %tmp1_strb_V, align 1

ST_2: stg_388 [1/1] 0.00ns
:2  store volatile i1 %tmp1_user_V_1, i1* %tmp1_user_V, align 2

ST_2: stg_389 [1/1] 0.00ns
:3  store volatile i1 %tmp1_last_V_1, i1* %tmp1_last_V, align 1

ST_2: stg_390 [1/1] 0.00ns
:4  store volatile i1 %tmp1_id_V_1, i1* %tmp1_id_V, align 4

ST_2: stg_391 [1/1] 0.00ns
:5  store volatile i1 %tmp1_dest_V_1, i1* %tmp1_dest_V, align 1

ST_2: j_1 [1/1] 1.72ns
:7  %j_1 = add i6 %j_mid2, 1


 <State 3>: 2.39ns
ST_3: empty_5 [1/1] 0.00ns
.reset:1  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_3: tmp_2 [1/1] 0.00ns
.reset:10  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)

ST_3: stg_395 [1/1] 0.00ns
.reset:11  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: tmp_5 [1/1] 0.00ns
.reset:20  %tmp_5 = bitcast i32 %A_data_V_tmp to float

ST_3: tmp [1/1] 0.00ns
.reset:23  %tmp = call i8 @_ssdm_op_BitConcatenate.i8.i6.i2(i6 %i_mid2, i2 %tmp_6)

ST_3: tmp_3 [1/1] 0.00ns
.reset:24  %tmp_3 = zext i8 %tmp to i64

ST_3: A_buf_0_addr [1/1] 0.00ns
.reset:25  %A_buf_0_addr = getelementptr [128 x float]* %A_buf_0, i64 0, i64 %tmp_3

ST_3: A_buf_1_addr [1/1] 0.00ns
.reset:26  %A_buf_1_addr = getelementptr [128 x float]* %A_buf_1, i64 0, i64 %tmp_3

ST_3: A_buf_2_addr [1/1] 0.00ns
.reset:27  %A_buf_2_addr = getelementptr [128 x float]* %A_buf_2, i64 0, i64 %tmp_3

ST_3: A_buf_3_addr [1/1] 0.00ns
.reset:28  %A_buf_3_addr = getelementptr [128 x float]* %A_buf_3, i64 0, i64 %tmp_3

ST_3: A_buf_4_addr [1/1] 0.00ns
.reset:29  %A_buf_4_addr = getelementptr [128 x float]* %A_buf_4, i64 0, i64 %tmp_3

ST_3: A_buf_5_addr [1/1] 0.00ns
.reset:30  %A_buf_5_addr = getelementptr [128 x float]* %A_buf_5, i64 0, i64 %tmp_3

ST_3: A_buf_6_addr [1/1] 0.00ns
.reset:31  %A_buf_6_addr = getelementptr [128 x float]* %A_buf_6, i64 0, i64 %tmp_3

ST_3: A_buf_7_addr [1/1] 0.00ns
.reset:32  %A_buf_7_addr = getelementptr [128 x float]* %A_buf_7, i64 0, i64 %tmp_3

ST_3: stg_407 [1/1] 1.91ns
.reset:33  switch i4 %arrayNo_cast, label %branch7 [
    i4 0, label %branch0
    i4 1, label %branch1
    i4 2, label %branch2
    i4 3, label %branch3
    i4 4, label %branch4
    i4 5, label %branch5
    i4 6, label %branch6
  ]

ST_3: stg_408 [1/1] 2.39ns
branch6:0  store float %tmp_5, float* %A_buf_6_addr, align 4

ST_3: stg_409 [1/1] 0.00ns
branch6:1  br label %2

ST_3: stg_410 [1/1] 2.39ns
branch5:0  store float %tmp_5, float* %A_buf_5_addr, align 4

ST_3: stg_411 [1/1] 0.00ns
branch5:1  br label %2

ST_3: stg_412 [1/1] 2.39ns
branch4:0  store float %tmp_5, float* %A_buf_4_addr, align 4

ST_3: stg_413 [1/1] 0.00ns
branch4:1  br label %2

ST_3: stg_414 [1/1] 2.39ns
branch3:0  store float %tmp_5, float* %A_buf_3_addr, align 4

ST_3: stg_415 [1/1] 0.00ns
branch3:1  br label %2

ST_3: stg_416 [1/1] 2.39ns
branch2:0  store float %tmp_5, float* %A_buf_2_addr, align 4

ST_3: stg_417 [1/1] 0.00ns
branch2:1  br label %2

ST_3: stg_418 [1/1] 2.39ns
branch1:0  store float %tmp_5, float* %A_buf_1_addr, align 4

ST_3: stg_419 [1/1] 0.00ns
branch1:1  br label %2

ST_3: stg_420 [1/1] 2.39ns
branch0:0  store float %tmp_5, float* %A_buf_0_addr, align 4

ST_3: stg_421 [1/1] 0.00ns
branch0:1  br label %2

ST_3: stg_422 [1/1] 2.39ns
branch7:0  store float %tmp_5, float* %A_buf_7_addr, align 4

ST_3: stg_423 [1/1] 0.00ns
branch7:1  br label %2

ST_3: empty [1/1] 0.00ns
:6  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_2)

ST_3: tmp_8 [1/1] 1.84ns
:8  %tmp_8 = add i11 %k_1_mid2, 1

ST_3: stg_426 [1/1] 0.00ns
:9  br label %1


 <State 4>: 5.20ns
ST_4: indvar_flatten7 [1/1] 0.00ns
.preheader.preheader:0  %indvar_flatten7 = phi i11 [ %indvar_flatten_next8, %3 ], [ 0, %1 ]

ST_4: indvars_iv2 [1/1] 0.00ns
.preheader.preheader:1  %indvars_iv2 = phi i11 [ %indvars_iv2_mid2, %3 ], [ 32, %1 ]

ST_4: l [1/1] 0.00ns
.preheader.preheader:2  %l = phi i6 [ %l_mid2, %3 ], [ 0, %1 ]

ST_4: n [1/1] 0.00ns
.preheader.preheader:3  %n = phi i11 [ %n_mid2, %3 ], [ 0, %1 ]

ST_4: n_1 [1/1] 0.00ns
.preheader.preheader:4  %n_1 = phi i11 [ %tmp_7, %3 ], [ 0, %1 ]

ST_4: m [1/1] 0.00ns
.preheader.preheader:5  %m = phi i6 [ %m_1, %3 ], [ 0, %1 ]

ST_4: tmp2_dest_V [1/1] 0.00ns
.preheader.preheader:6  %tmp2_dest_V = alloca i1, align 1

ST_4: tmp2_id_V [1/1] 0.00ns
.preheader.preheader:7  %tmp2_id_V = alloca i1, align 1

ST_4: tmp2_last_V [1/1] 0.00ns
.preheader.preheader:8  %tmp2_last_V = alloca i1, align 1

ST_4: tmp2_user_V [1/1] 0.00ns
.preheader.preheader:9  %tmp2_user_V = alloca i1, align 1

ST_4: tmp2_strb_V [1/1] 0.00ns
.preheader.preheader:10  %tmp2_strb_V = alloca i4, align 1

ST_4: tmp2_keep_V [1/1] 0.00ns
.preheader.preheader:11  %tmp2_keep_V = alloca i4, align 1

ST_4: exitcond_flatten9 [1/1] 2.11ns
.preheader.preheader:12  %exitcond_flatten9 = icmp eq i11 %indvar_flatten7, -1024

ST_4: indvar_flatten_next8 [1/1] 1.84ns
.preheader.preheader:13  %indvar_flatten_next8 = add i11 %indvar_flatten7, 1

ST_4: stg_441 [1/1] 1.57ns
.preheader.preheader:14  br i1 %exitcond_flatten9, label %.preheader.i, label %.preheader

ST_4: n_2_dup [1/1] 1.84ns
.preheader:0  %n_2_dup = add i11 %n, 32

ST_4: exitcond1 [1/1] 2.11ns
.preheader:2  %exitcond1 = icmp eq i11 %n_1, %indvars_iv2

ST_4: n_1_mid2 [1/1] 1.37ns
.preheader:3  %n_1_mid2 = select i1 %exitcond1, i11 %n_2_dup, i11 %n_1

ST_4: m_mid2 [1/1] 1.37ns
.preheader:4  %m_mid2 = select i1 %exitcond1, i6 0, i6 %m

ST_4: indvars_iv_next2_dup [1/1] 1.84ns
.preheader:5  %indvars_iv_next2_dup = add i11 %indvars_iv2, 32

ST_4: indvars_iv2_mid2 [1/1] 1.37ns
.preheader:6  %indvars_iv2_mid2 = select i1 %exitcond1, i11 %indvars_iv_next2_dup, i11 %indvars_iv2

ST_4: l_s [1/1] 1.72ns
.preheader:7  %l_s = add i6 %l, 1

ST_4: l_mid2 [1/1] 1.37ns
.preheader:8  %l_mid2 = select i1 %exitcond1, i6 %l_s, i6 %l

ST_4: n_mid2 [1/1] 1.37ns
.preheader:9  %n_mid2 = select i1 %exitcond1, i11 %n_2_dup, i11 %n

ST_4: arrayNo1_cast [1/1] 0.00ns
.preheader:10  %arrayNo1_cast = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %l_mid2, i32 2, i32 5)

ST_4: empty_9 [1/1] 0.00ns
.preheader:13  %empty_9 = call { i32, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %B_data_V, i4* %B_keep_V, i4* %B_strb_V, i1* %B_user_V, i1* %B_last_V, i1* %B_id_V, i1* %B_dest_V)

ST_4: B_data_V_tmp [1/1] 0.00ns
.preheader:14  %B_data_V_tmp = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_9, 0

ST_4: tmp2_keep_V_1 [1/1] 0.00ns
.preheader:15  %tmp2_keep_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_9, 1

ST_4: tmp2_strb_V_1 [1/1] 0.00ns
.preheader:16  %tmp2_strb_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_9, 2

ST_4: tmp2_user_V_1 [1/1] 0.00ns
.preheader:17  %tmp2_user_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_9, 3

ST_4: tmp2_last_V_1 [1/1] 0.00ns
.preheader:18  %tmp2_last_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_9, 4

ST_4: tmp2_id_V_1 [1/1] 0.00ns
.preheader:19  %tmp2_id_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_9, 5

ST_4: tmp2_dest_V_1 [1/1] 0.00ns
.preheader:20  %tmp2_dest_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty_9, 6

ST_4: tmp_30 [1/1] 0.00ns
.preheader:23  %tmp_30 = trunc i6 %l_mid2 to i2

ST_4: stg_461 [1/1] 0.00ns
:0  store volatile i4 %tmp2_keep_V_1, i4* %tmp2_keep_V, align 4

ST_4: stg_462 [1/1] 0.00ns
:1  store volatile i4 %tmp2_strb_V_1, i4* %tmp2_strb_V, align 1

ST_4: stg_463 [1/1] 0.00ns
:2  store volatile i1 %tmp2_user_V_1, i1* %tmp2_user_V, align 2

ST_4: stg_464 [1/1] 0.00ns
:3  store volatile i1 %tmp2_last_V_1, i1* %tmp2_last_V, align 1

ST_4: stg_465 [1/1] 0.00ns
:4  store volatile i1 %tmp2_id_V_1, i1* %tmp2_id_V, align 4

ST_4: stg_466 [1/1] 0.00ns
:5  store volatile i1 %tmp2_dest_V_1, i1* %tmp2_dest_V, align 1

ST_4: m_1 [1/1] 1.72ns
:7  %m_1 = add i6 %m_mid2, 1


 <State 5>: 4.11ns
ST_5: empty_8 [1/1] 0.00ns
.preheader:1  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_5: tmp_s [1/1] 0.00ns
.preheader:11  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_5: stg_470 [1/1] 0.00ns
.preheader:12  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_5: tmp_1 [1/1] 0.00ns
.preheader:21  %tmp_1 = bitcast i32 %B_data_V_tmp to float

ST_5: tmp_3_trn_cast [1/1] 0.00ns
.preheader:22  %tmp_3_trn_cast = zext i6 %m_mid2 to i8

ST_5: tmp_9 [1/1] 0.00ns
.preheader:24  %tmp_9 = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 %tmp_30, i5 0)

ST_5: p_addr_cast [1/1] 0.00ns
.preheader:25  %p_addr_cast = zext i7 %tmp_9 to i8

ST_5: p_addr1 [1/1] 1.72ns
.preheader:26  %p_addr1 = add i8 %p_addr_cast, %tmp_3_trn_cast

ST_5: tmp_10 [1/1] 0.00ns
.preheader:27  %tmp_10 = zext i8 %p_addr1 to i64

ST_5: B_buf_0_addr [1/1] 0.00ns
.preheader:28  %B_buf_0_addr = getelementptr [128 x float]* %B_buf_0, i64 0, i64 %tmp_10

ST_5: B_buf_1_addr [1/1] 0.00ns
.preheader:29  %B_buf_1_addr = getelementptr [128 x float]* %B_buf_1, i64 0, i64 %tmp_10

ST_5: B_buf_2_addr [1/1] 0.00ns
.preheader:30  %B_buf_2_addr = getelementptr [128 x float]* %B_buf_2, i64 0, i64 %tmp_10

ST_5: B_buf_3_addr [1/1] 0.00ns
.preheader:31  %B_buf_3_addr = getelementptr [128 x float]* %B_buf_3, i64 0, i64 %tmp_10

ST_5: B_buf_4_addr [1/1] 0.00ns
.preheader:32  %B_buf_4_addr = getelementptr [128 x float]* %B_buf_4, i64 0, i64 %tmp_10

ST_5: B_buf_5_addr [1/1] 0.00ns
.preheader:33  %B_buf_5_addr = getelementptr [128 x float]* %B_buf_5, i64 0, i64 %tmp_10

ST_5: B_buf_6_addr [1/1] 0.00ns
.preheader:34  %B_buf_6_addr = getelementptr [128 x float]* %B_buf_6, i64 0, i64 %tmp_10

ST_5: B_buf_7_addr [1/1] 0.00ns
.preheader:35  %B_buf_7_addr = getelementptr [128 x float]* %B_buf_7, i64 0, i64 %tmp_10

ST_5: stg_485 [1/1] 1.91ns
.preheader:36  switch i4 %arrayNo1_cast, label %branch15 [
    i4 0, label %branch8
    i4 1, label %branch9
    i4 2, label %branch10
    i4 3, label %branch11
    i4 4, label %branch12
    i4 5, label %branch13
    i4 6, label %branch14
  ]

ST_5: stg_486 [1/1] 2.39ns
branch14:0  store float %tmp_1, float* %B_buf_6_addr, align 4

ST_5: stg_487 [1/1] 0.00ns
branch14:1  br label %3

ST_5: stg_488 [1/1] 2.39ns
branch13:0  store float %tmp_1, float* %B_buf_5_addr, align 4

ST_5: stg_489 [1/1] 0.00ns
branch13:1  br label %3

ST_5: stg_490 [1/1] 2.39ns
branch12:0  store float %tmp_1, float* %B_buf_4_addr, align 4

ST_5: stg_491 [1/1] 0.00ns
branch12:1  br label %3

ST_5: stg_492 [1/1] 2.39ns
branch11:0  store float %tmp_1, float* %B_buf_3_addr, align 4

ST_5: stg_493 [1/1] 0.00ns
branch11:1  br label %3

ST_5: stg_494 [1/1] 2.39ns
branch10:0  store float %tmp_1, float* %B_buf_2_addr, align 4

ST_5: stg_495 [1/1] 0.00ns
branch10:1  br label %3

ST_5: stg_496 [1/1] 2.39ns
branch9:0  store float %tmp_1, float* %B_buf_1_addr, align 4

ST_5: stg_497 [1/1] 0.00ns
branch9:1  br label %3

ST_5: stg_498 [1/1] 2.39ns
branch8:0  store float %tmp_1, float* %B_buf_0_addr, align 4

ST_5: stg_499 [1/1] 0.00ns
branch8:1  br label %3

ST_5: stg_500 [1/1] 2.39ns
branch15:0  store float %tmp_1, float* %B_buf_7_addr, align 4

ST_5: stg_501 [1/1] 0.00ns
branch15:1  br label %3

ST_5: empty_7 [1/1] 0.00ns
:6  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_s)

ST_5: tmp_7 [1/1] 1.84ns
:8  %tmp_7 = add i11 %n_1_mid2, 1

ST_5: stg_504 [1/1] 0.00ns
:9  br label %.preheader.preheader


 <State 6>: 3.68ns
ST_6: indvar_flatten1 [1/1] 0.00ns
.preheader.i:0  %indvar_flatten1 = phi i11 [ %indvar_flatten_next1, %.preheader658 ], [ 0, %.preheader.preheader ]

ST_6: i_0_i [1/1] 0.00ns
.preheader.i:1  %i_0_i = phi i6 [ %i_0_i_mid2, %.preheader658 ], [ 0, %.preheader.preheader ]

ST_6: j_0_i [1/1] 0.00ns
.preheader.i:2  %j_0_i = phi i6 [ %j_3, %.preheader658 ], [ 0, %.preheader.preheader ]

ST_6: exitcond_flatten1 [1/1] 2.11ns
.preheader.i:3  %exitcond_flatten1 = icmp eq i11 %indvar_flatten1, -1024

ST_6: indvar_flatten_next1 [1/1] 1.84ns
.preheader.i:4  %indvar_flatten_next1 = add i11 %indvar_flatten1, 1

ST_6: stg_510 [1/1] 1.57ns
.preheader.i:5  br i1 %exitcond_flatten1, label %mmult_kernel.exit.preheader, label %.preheader658

ST_6: exitcond1_i [1/1] 1.94ns
.preheader658:1  %exitcond1_i = icmp eq i6 %j_0_i, -32

ST_6: j_0_i_mid2 [1/1] 1.37ns
.preheader658:2  %j_0_i_mid2 = select i1 %exitcond1_i, i6 0, i6 %j_0_i

ST_6: i_1 [1/1] 1.72ns
.preheader658:3  %i_1 = add i6 %i_0_i, 1

ST_6: i_0_i_mid2 [1/1] 1.37ns
.preheader658:4  %i_0_i_mid2 = select i1 %exitcond1_i, i6 %i_1, i6 %i_0_i


 <State 7>: 4.11ns
ST_7: tmp_12 [1/1] 0.00ns
.preheader658:5  %tmp_12 = call i8 @_ssdm_op_BitConcatenate.i8.i6.i2(i6 %i_0_i_mid2, i2 0)

ST_7: tmp_15 [1/1] 0.00ns
.preheader658:6  %tmp_15 = zext i8 %tmp_12 to i64

ST_7: A_buf_0_addr_1 [1/1] 0.00ns
.preheader658:7  %A_buf_0_addr_1 = getelementptr [128 x float]* %A_buf_0, i64 0, i64 %tmp_15

ST_7: A_buf_0_load [2/2] 2.39ns
.preheader658:8  %A_buf_0_load = load float* %A_buf_0_addr_1, align 16

ST_7: tmp_16 [1/1] 0.00ns
.preheader658:9  %tmp_16 = or i8 %tmp_12, 1

ST_7: p_addr2 [1/1] 0.00ns
.preheader658:10  %p_addr2 = call i32 @_ssdm_op_BitConcatenate.i32.i24.i8(i24 0, i8 %tmp_16)

ST_7: tmp_17 [1/1] 0.00ns
.preheader658:11  %tmp_17 = zext i32 %p_addr2 to i64

ST_7: A_buf_0_addr_2 [1/1] 0.00ns
.preheader658:12  %A_buf_0_addr_2 = getelementptr [128 x float]* %A_buf_0, i64 0, i64 %tmp_17

ST_7: A_buf_0_load_1 [2/2] 2.39ns
.preheader658:13  %A_buf_0_load_1 = load float* %A_buf_0_addr_2, align 4

ST_7: A_buf_1_addr_1 [1/1] 0.00ns
.preheader658:24  %A_buf_1_addr_1 = getelementptr [128 x float]* %A_buf_1, i64 0, i64 %tmp_15

ST_7: A_buf_1_load [2/2] 2.39ns
.preheader658:25  %A_buf_1_load = load float* %A_buf_1_addr_1, align 16

ST_7: A_buf_1_addr_2 [1/1] 0.00ns
.preheader658:26  %A_buf_1_addr_2 = getelementptr [128 x float]* %A_buf_1, i64 0, i64 %tmp_17

ST_7: A_buf_1_load_1 [2/2] 2.39ns
.preheader658:27  %A_buf_1_load_1 = load float* %A_buf_1_addr_2, align 4

ST_7: A_buf_2_addr_1 [1/1] 0.00ns
.preheader658:32  %A_buf_2_addr_1 = getelementptr [128 x float]* %A_buf_2, i64 0, i64 %tmp_15

ST_7: A_buf_2_load [2/2] 2.39ns
.preheader658:33  %A_buf_2_load = load float* %A_buf_2_addr_1, align 16

ST_7: A_buf_2_addr_2 [1/1] 0.00ns
.preheader658:34  %A_buf_2_addr_2 = getelementptr [128 x float]* %A_buf_2, i64 0, i64 %tmp_17

ST_7: A_buf_2_load_1 [2/2] 2.39ns
.preheader658:35  %A_buf_2_load_1 = load float* %A_buf_2_addr_2, align 4

ST_7: A_buf_3_addr_1 [1/1] 0.00ns
.preheader658:40  %A_buf_3_addr_1 = getelementptr [128 x float]* %A_buf_3, i64 0, i64 %tmp_15

ST_7: A_buf_3_load [2/2] 2.39ns
.preheader658:41  %A_buf_3_load = load float* %A_buf_3_addr_1, align 16

ST_7: A_buf_3_addr_2 [1/1] 0.00ns
.preheader658:42  %A_buf_3_addr_2 = getelementptr [128 x float]* %A_buf_3, i64 0, i64 %tmp_17

ST_7: A_buf_3_load_1 [2/2] 2.39ns
.preheader658:43  %A_buf_3_load_1 = load float* %A_buf_3_addr_2, align 4

ST_7: A_buf_4_addr_1 [1/1] 0.00ns
.preheader658:48  %A_buf_4_addr_1 = getelementptr [128 x float]* %A_buf_4, i64 0, i64 %tmp_15

ST_7: A_buf_4_load [2/2] 2.39ns
.preheader658:49  %A_buf_4_load = load float* %A_buf_4_addr_1, align 16

ST_7: A_buf_4_addr_2 [1/1] 0.00ns
.preheader658:50  %A_buf_4_addr_2 = getelementptr [128 x float]* %A_buf_4, i64 0, i64 %tmp_17

ST_7: A_buf_4_load_1 [2/2] 2.39ns
.preheader658:51  %A_buf_4_load_1 = load float* %A_buf_4_addr_2, align 4

ST_7: A_buf_5_addr_1 [1/1] 0.00ns
.preheader658:56  %A_buf_5_addr_1 = getelementptr [128 x float]* %A_buf_5, i64 0, i64 %tmp_15

ST_7: A_buf_5_load [2/2] 2.39ns
.preheader658:57  %A_buf_5_load = load float* %A_buf_5_addr_1, align 16

ST_7: A_buf_5_addr_2 [1/1] 0.00ns
.preheader658:58  %A_buf_5_addr_2 = getelementptr [128 x float]* %A_buf_5, i64 0, i64 %tmp_17

ST_7: A_buf_5_load_1 [2/2] 2.39ns
.preheader658:59  %A_buf_5_load_1 = load float* %A_buf_5_addr_2, align 4

ST_7: A_buf_6_addr_1 [1/1] 0.00ns
.preheader658:64  %A_buf_6_addr_1 = getelementptr [128 x float]* %A_buf_6, i64 0, i64 %tmp_15

ST_7: A_buf_6_load [2/2] 2.39ns
.preheader658:65  %A_buf_6_load = load float* %A_buf_6_addr_1, align 16

ST_7: A_buf_6_addr_2 [1/1] 0.00ns
.preheader658:66  %A_buf_6_addr_2 = getelementptr [128 x float]* %A_buf_6, i64 0, i64 %tmp_17

ST_7: A_buf_6_load_1 [2/2] 2.39ns
.preheader658:67  %A_buf_6_load_1 = load float* %A_buf_6_addr_2, align 4

ST_7: A_buf_7_addr_1 [1/1] 0.00ns
.preheader658:72  %A_buf_7_addr_1 = getelementptr [128 x float]* %A_buf_7, i64 0, i64 %tmp_15

ST_7: A_buf_7_load [2/2] 2.39ns
.preheader658:73  %A_buf_7_load = load float* %A_buf_7_addr_1, align 16

ST_7: A_buf_7_addr_2 [1/1] 0.00ns
.preheader658:74  %A_buf_7_addr_2 = getelementptr [128 x float]* %A_buf_7, i64 0, i64 %tmp_17

ST_7: A_buf_7_load_1 [2/2] 2.39ns
.preheader658:75  %A_buf_7_load_1 = load float* %A_buf_7_addr_2, align 4

ST_7: tmp_10_trn_cast [1/1] 0.00ns
.preheader658:84  %tmp_10_trn_cast = zext i6 %j_0_i_mid2 to i7

ST_7: tmp_22 [1/1] 0.00ns
.preheader658:85  %tmp_22 = zext i6 %j_0_i_mid2 to i64

ST_7: B_buf_0_addr_1 [1/1] 0.00ns
.preheader658:86  %B_buf_0_addr_1 = getelementptr [128 x float]* %B_buf_0, i64 0, i64 %tmp_22

ST_7: B_buf_0_load [2/2] 2.39ns
.preheader658:87  %B_buf_0_load = load float* %B_buf_0_addr_1, align 4

ST_7: p_addr5 [1/1] 1.72ns
.preheader658:90  %p_addr5 = add i7 %tmp_10_trn_cast, 32

ST_7: tmp_23 [1/1] 0.00ns
.preheader658:91  %tmp_23 = zext i7 %p_addr5 to i64

ST_7: B_buf_0_addr_2 [1/1] 0.00ns
.preheader658:92  %B_buf_0_addr_2 = getelementptr [128 x float]* %B_buf_0, i64 0, i64 %tmp_23

ST_7: B_buf_0_load_1 [2/2] 2.39ns
.preheader658:93  %B_buf_0_load_1 = load float* %B_buf_0_addr_2, align 4

ST_7: B_buf_1_addr_1 [1/1] 0.00ns
.preheader658:108  %B_buf_1_addr_1 = getelementptr [128 x float]* %B_buf_1, i64 0, i64 %tmp_22

ST_7: B_buf_1_load [2/2] 2.39ns
.preheader658:109  %B_buf_1_load = load float* %B_buf_1_addr_1, align 4

ST_7: B_buf_1_addr_2 [1/1] 0.00ns
.preheader658:112  %B_buf_1_addr_2 = getelementptr [128 x float]* %B_buf_1, i64 0, i64 %tmp_23

ST_7: B_buf_1_load_1 [2/2] 2.39ns
.preheader658:113  %B_buf_1_load_1 = load float* %B_buf_1_addr_2, align 4

ST_7: B_buf_2_addr_1 [1/1] 0.00ns
.preheader658:124  %B_buf_2_addr_1 = getelementptr [128 x float]* %B_buf_2, i64 0, i64 %tmp_22

ST_7: B_buf_2_load [2/2] 2.39ns
.preheader658:125  %B_buf_2_load = load float* %B_buf_2_addr_1, align 4

ST_7: B_buf_2_addr_2 [1/1] 0.00ns
.preheader658:128  %B_buf_2_addr_2 = getelementptr [128 x float]* %B_buf_2, i64 0, i64 %tmp_23

ST_7: B_buf_2_load_1 [2/2] 2.39ns
.preheader658:129  %B_buf_2_load_1 = load float* %B_buf_2_addr_2, align 4

ST_7: B_buf_3_addr_1 [1/1] 0.00ns
.preheader658:140  %B_buf_3_addr_1 = getelementptr [128 x float]* %B_buf_3, i64 0, i64 %tmp_22

ST_7: B_buf_3_load [2/2] 2.39ns
.preheader658:141  %B_buf_3_load = load float* %B_buf_3_addr_1, align 4

ST_7: B_buf_3_addr_2 [1/1] 0.00ns
.preheader658:144  %B_buf_3_addr_2 = getelementptr [128 x float]* %B_buf_3, i64 0, i64 %tmp_23

ST_7: B_buf_3_load_1 [2/2] 2.39ns
.preheader658:145  %B_buf_3_load_1 = load float* %B_buf_3_addr_2, align 4

ST_7: B_buf_4_addr_1 [1/1] 0.00ns
.preheader658:156  %B_buf_4_addr_1 = getelementptr [128 x float]* %B_buf_4, i64 0, i64 %tmp_22

ST_7: B_buf_4_load [2/2] 2.39ns
.preheader658:157  %B_buf_4_load = load float* %B_buf_4_addr_1, align 4

ST_7: B_buf_4_addr_2 [1/1] 0.00ns
.preheader658:160  %B_buf_4_addr_2 = getelementptr [128 x float]* %B_buf_4, i64 0, i64 %tmp_23

ST_7: B_buf_4_load_1 [2/2] 2.39ns
.preheader658:161  %B_buf_4_load_1 = load float* %B_buf_4_addr_2, align 4

ST_7: B_buf_5_addr_1 [1/1] 0.00ns
.preheader658:172  %B_buf_5_addr_1 = getelementptr [128 x float]* %B_buf_5, i64 0, i64 %tmp_22

ST_7: B_buf_5_load [2/2] 2.39ns
.preheader658:173  %B_buf_5_load = load float* %B_buf_5_addr_1, align 4

ST_7: B_buf_5_addr_2 [1/1] 0.00ns
.preheader658:176  %B_buf_5_addr_2 = getelementptr [128 x float]* %B_buf_5, i64 0, i64 %tmp_23

ST_7: B_buf_5_load_1 [2/2] 2.39ns
.preheader658:177  %B_buf_5_load_1 = load float* %B_buf_5_addr_2, align 4

ST_7: B_buf_6_addr_1 [1/1] 0.00ns
.preheader658:188  %B_buf_6_addr_1 = getelementptr [128 x float]* %B_buf_6, i64 0, i64 %tmp_22

ST_7: B_buf_6_load [2/2] 2.39ns
.preheader658:189  %B_buf_6_load = load float* %B_buf_6_addr_1, align 4

ST_7: B_buf_6_addr_2 [1/1] 0.00ns
.preheader658:192  %B_buf_6_addr_2 = getelementptr [128 x float]* %B_buf_6, i64 0, i64 %tmp_23

ST_7: B_buf_6_load_1 [2/2] 2.39ns
.preheader658:193  %B_buf_6_load_1 = load float* %B_buf_6_addr_2, align 4

ST_7: B_buf_7_addr_1 [1/1] 0.00ns
.preheader658:204  %B_buf_7_addr_1 = getelementptr [128 x float]* %B_buf_7, i64 0, i64 %tmp_22

ST_7: B_buf_7_load [2/2] 2.39ns
.preheader658:205  %B_buf_7_load = load float* %B_buf_7_addr_1, align 4

ST_7: B_buf_7_addr_2 [1/1] 0.00ns
.preheader658:208  %B_buf_7_addr_2 = getelementptr [128 x float]* %B_buf_7, i64 0, i64 %tmp_23

ST_7: B_buf_7_load_1 [2/2] 2.39ns
.preheader658:209  %B_buf_7_load_1 = load float* %B_buf_7_addr_2, align 4

ST_7: j_3 [1/1] 1.72ns
.preheader658:227  %j_3 = add i6 %j_0_i_mid2, 1


 <State 8>: 4.11ns
ST_8: A_buf_0_load [1/2] 2.39ns
.preheader658:8  %A_buf_0_load = load float* %A_buf_0_addr_1, align 16

ST_8: A_buf_0_load_1 [1/2] 2.39ns
.preheader658:13  %A_buf_0_load_1 = load float* %A_buf_0_addr_2, align 4

ST_8: tmp_18 [1/1] 0.00ns
.preheader658:14  %tmp_18 = or i8 %tmp_12, 2

ST_8: p_addr3 [1/1] 0.00ns
.preheader658:15  %p_addr3 = call i32 @_ssdm_op_BitConcatenate.i32.i24.i8(i24 0, i8 %tmp_18)

ST_8: tmp_19 [1/1] 0.00ns
.preheader658:16  %tmp_19 = zext i32 %p_addr3 to i64

ST_8: A_buf_0_addr_3 [1/1] 0.00ns
.preheader658:17  %A_buf_0_addr_3 = getelementptr [128 x float]* %A_buf_0, i64 0, i64 %tmp_19

ST_8: A_buf_0_load_2 [2/2] 2.39ns
.preheader658:18  %A_buf_0_load_2 = load float* %A_buf_0_addr_3, align 8

ST_8: tmp_20 [1/1] 0.00ns
.preheader658:19  %tmp_20 = or i8 %tmp_12, 3

ST_8: p_addr4 [1/1] 0.00ns
.preheader658:20  %p_addr4 = call i32 @_ssdm_op_BitConcatenate.i32.i24.i8(i24 0, i8 %tmp_20)

ST_8: tmp_21 [1/1] 0.00ns
.preheader658:21  %tmp_21 = zext i32 %p_addr4 to i64

ST_8: A_buf_0_addr_4 [1/1] 0.00ns
.preheader658:22  %A_buf_0_addr_4 = getelementptr [128 x float]* %A_buf_0, i64 0, i64 %tmp_21

ST_8: A_buf_0_load_3 [2/2] 2.39ns
.preheader658:23  %A_buf_0_load_3 = load float* %A_buf_0_addr_4, align 4

ST_8: A_buf_1_load [1/2] 2.39ns
.preheader658:25  %A_buf_1_load = load float* %A_buf_1_addr_1, align 16

ST_8: A_buf_1_load_1 [1/2] 2.39ns
.preheader658:27  %A_buf_1_load_1 = load float* %A_buf_1_addr_2, align 4

ST_8: A_buf_1_addr_3 [1/1] 0.00ns
.preheader658:28  %A_buf_1_addr_3 = getelementptr [128 x float]* %A_buf_1, i64 0, i64 %tmp_19

ST_8: A_buf_1_load_2 [2/2] 2.39ns
.preheader658:29  %A_buf_1_load_2 = load float* %A_buf_1_addr_3, align 8

ST_8: A_buf_1_addr_4 [1/1] 0.00ns
.preheader658:30  %A_buf_1_addr_4 = getelementptr [128 x float]* %A_buf_1, i64 0, i64 %tmp_21

ST_8: A_buf_1_load_3 [2/2] 2.39ns
.preheader658:31  %A_buf_1_load_3 = load float* %A_buf_1_addr_4, align 4

ST_8: A_buf_2_load [1/2] 2.39ns
.preheader658:33  %A_buf_2_load = load float* %A_buf_2_addr_1, align 16

ST_8: A_buf_2_load_1 [1/2] 2.39ns
.preheader658:35  %A_buf_2_load_1 = load float* %A_buf_2_addr_2, align 4

ST_8: A_buf_2_addr_3 [1/1] 0.00ns
.preheader658:36  %A_buf_2_addr_3 = getelementptr [128 x float]* %A_buf_2, i64 0, i64 %tmp_19

ST_8: A_buf_2_load_2 [2/2] 2.39ns
.preheader658:37  %A_buf_2_load_2 = load float* %A_buf_2_addr_3, align 8

ST_8: A_buf_2_addr_4 [1/1] 0.00ns
.preheader658:38  %A_buf_2_addr_4 = getelementptr [128 x float]* %A_buf_2, i64 0, i64 %tmp_21

ST_8: A_buf_2_load_3 [2/2] 2.39ns
.preheader658:39  %A_buf_2_load_3 = load float* %A_buf_2_addr_4, align 4

ST_8: A_buf_3_load [1/2] 2.39ns
.preheader658:41  %A_buf_3_load = load float* %A_buf_3_addr_1, align 16

ST_8: A_buf_3_load_1 [1/2] 2.39ns
.preheader658:43  %A_buf_3_load_1 = load float* %A_buf_3_addr_2, align 4

ST_8: A_buf_3_addr_3 [1/1] 0.00ns
.preheader658:44  %A_buf_3_addr_3 = getelementptr [128 x float]* %A_buf_3, i64 0, i64 %tmp_19

ST_8: A_buf_3_load_2 [2/2] 2.39ns
.preheader658:45  %A_buf_3_load_2 = load float* %A_buf_3_addr_3, align 8

ST_8: A_buf_3_addr_4 [1/1] 0.00ns
.preheader658:46  %A_buf_3_addr_4 = getelementptr [128 x float]* %A_buf_3, i64 0, i64 %tmp_21

ST_8: A_buf_3_load_3 [2/2] 2.39ns
.preheader658:47  %A_buf_3_load_3 = load float* %A_buf_3_addr_4, align 4

ST_8: A_buf_4_load [1/2] 2.39ns
.preheader658:49  %A_buf_4_load = load float* %A_buf_4_addr_1, align 16

ST_8: A_buf_4_load_1 [1/2] 2.39ns
.preheader658:51  %A_buf_4_load_1 = load float* %A_buf_4_addr_2, align 4

ST_8: A_buf_4_addr_3 [1/1] 0.00ns
.preheader658:52  %A_buf_4_addr_3 = getelementptr [128 x float]* %A_buf_4, i64 0, i64 %tmp_19

ST_8: A_buf_4_load_2 [2/2] 2.39ns
.preheader658:53  %A_buf_4_load_2 = load float* %A_buf_4_addr_3, align 8

ST_8: A_buf_4_addr_4 [1/1] 0.00ns
.preheader658:54  %A_buf_4_addr_4 = getelementptr [128 x float]* %A_buf_4, i64 0, i64 %tmp_21

ST_8: A_buf_4_load_3 [2/2] 2.39ns
.preheader658:55  %A_buf_4_load_3 = load float* %A_buf_4_addr_4, align 4

ST_8: A_buf_5_load [1/2] 2.39ns
.preheader658:57  %A_buf_5_load = load float* %A_buf_5_addr_1, align 16

ST_8: A_buf_5_load_1 [1/2] 2.39ns
.preheader658:59  %A_buf_5_load_1 = load float* %A_buf_5_addr_2, align 4

ST_8: A_buf_5_addr_3 [1/1] 0.00ns
.preheader658:60  %A_buf_5_addr_3 = getelementptr [128 x float]* %A_buf_5, i64 0, i64 %tmp_19

ST_8: A_buf_5_load_2 [2/2] 2.39ns
.preheader658:61  %A_buf_5_load_2 = load float* %A_buf_5_addr_3, align 8

ST_8: A_buf_5_addr_4 [1/1] 0.00ns
.preheader658:62  %A_buf_5_addr_4 = getelementptr [128 x float]* %A_buf_5, i64 0, i64 %tmp_21

ST_8: A_buf_5_load_3 [2/2] 2.39ns
.preheader658:63  %A_buf_5_load_3 = load float* %A_buf_5_addr_4, align 4

ST_8: A_buf_6_load [1/2] 2.39ns
.preheader658:65  %A_buf_6_load = load float* %A_buf_6_addr_1, align 16

ST_8: A_buf_6_load_1 [1/2] 2.39ns
.preheader658:67  %A_buf_6_load_1 = load float* %A_buf_6_addr_2, align 4

ST_8: A_buf_6_addr_3 [1/1] 0.00ns
.preheader658:68  %A_buf_6_addr_3 = getelementptr [128 x float]* %A_buf_6, i64 0, i64 %tmp_19

ST_8: A_buf_6_load_2 [2/2] 2.39ns
.preheader658:69  %A_buf_6_load_2 = load float* %A_buf_6_addr_3, align 8

ST_8: A_buf_6_addr_4 [1/1] 0.00ns
.preheader658:70  %A_buf_6_addr_4 = getelementptr [128 x float]* %A_buf_6, i64 0, i64 %tmp_21

ST_8: A_buf_6_load_3 [2/2] 2.39ns
.preheader658:71  %A_buf_6_load_3 = load float* %A_buf_6_addr_4, align 4

ST_8: A_buf_7_load [1/2] 2.39ns
.preheader658:73  %A_buf_7_load = load float* %A_buf_7_addr_1, align 16

ST_8: A_buf_7_load_1 [1/2] 2.39ns
.preheader658:75  %A_buf_7_load_1 = load float* %A_buf_7_addr_2, align 4

ST_8: A_buf_7_addr_3 [1/1] 0.00ns
.preheader658:76  %A_buf_7_addr_3 = getelementptr [128 x float]* %A_buf_7, i64 0, i64 %tmp_19

ST_8: A_buf_7_load_2 [2/2] 2.39ns
.preheader658:77  %A_buf_7_load_2 = load float* %A_buf_7_addr_3, align 8

ST_8: A_buf_7_addr_4 [1/1] 0.00ns
.preheader658:78  %A_buf_7_addr_4 = getelementptr [128 x float]* %A_buf_7, i64 0, i64 %tmp_21

ST_8: A_buf_7_load_3 [2/2] 2.39ns
.preheader658:79  %A_buf_7_load_3 = load float* %A_buf_7_addr_4, align 4

ST_8: tmp_10_trn_cast2 [1/1] 0.00ns
.preheader658:83  %tmp_10_trn_cast2 = zext i6 %j_0_i_mid2 to i8

ST_8: B_buf_0_load [1/2] 2.39ns
.preheader658:87  %B_buf_0_load = load float* %B_buf_0_addr_1, align 4

ST_8: B_buf_0_load_1 [1/2] 2.39ns
.preheader658:93  %B_buf_0_load_1 = load float* %B_buf_0_addr_2, align 4

ST_8: p_addr6 [1/1] 0.00ns
.preheader658:96  %p_addr6 = call i32 @_ssdm_op_BitConcatenate.i32.i26.i6(i26 1, i6 %j_0_i_mid2)

ST_8: tmp_24 [1/1] 0.00ns
.preheader658:97  %tmp_24 = zext i32 %p_addr6 to i64

ST_8: B_buf_0_addr_3 [1/1] 0.00ns
.preheader658:98  %B_buf_0_addr_3 = getelementptr [128 x float]* %B_buf_0, i64 0, i64 %tmp_24

ST_8: B_buf_0_load_2 [2/2] 2.39ns
.preheader658:99  %B_buf_0_load_2 = load float* %B_buf_0_addr_3, align 4

ST_8: p_addr7 [1/1] 1.72ns
.preheader658:102  %p_addr7 = add i8 %tmp_10_trn_cast2, 96

ST_8: tmp_25 [1/1] 0.00ns
.preheader658:103  %tmp_25 = zext i8 %p_addr7 to i64

ST_8: B_buf_0_addr_4 [1/1] 0.00ns
.preheader658:104  %B_buf_0_addr_4 = getelementptr [128 x float]* %B_buf_0, i64 0, i64 %tmp_25

ST_8: B_buf_0_load_3 [2/2] 2.39ns
.preheader658:105  %B_buf_0_load_3 = load float* %B_buf_0_addr_4, align 4

ST_8: B_buf_1_load [1/2] 2.39ns
.preheader658:109  %B_buf_1_load = load float* %B_buf_1_addr_1, align 4

ST_8: B_buf_1_load_1 [1/2] 2.39ns
.preheader658:113  %B_buf_1_load_1 = load float* %B_buf_1_addr_2, align 4

ST_8: B_buf_1_addr_3 [1/1] 0.00ns
.preheader658:116  %B_buf_1_addr_3 = getelementptr [128 x float]* %B_buf_1, i64 0, i64 %tmp_24

ST_8: B_buf_1_load_2 [2/2] 2.39ns
.preheader658:117  %B_buf_1_load_2 = load float* %B_buf_1_addr_3, align 4

ST_8: B_buf_1_addr_4 [1/1] 0.00ns
.preheader658:120  %B_buf_1_addr_4 = getelementptr [128 x float]* %B_buf_1, i64 0, i64 %tmp_25

ST_8: B_buf_1_load_3 [2/2] 2.39ns
.preheader658:121  %B_buf_1_load_3 = load float* %B_buf_1_addr_4, align 4

ST_8: B_buf_2_load [1/2] 2.39ns
.preheader658:125  %B_buf_2_load = load float* %B_buf_2_addr_1, align 4

ST_8: B_buf_2_load_1 [1/2] 2.39ns
.preheader658:129  %B_buf_2_load_1 = load float* %B_buf_2_addr_2, align 4

ST_8: B_buf_2_addr_3 [1/1] 0.00ns
.preheader658:132  %B_buf_2_addr_3 = getelementptr [128 x float]* %B_buf_2, i64 0, i64 %tmp_24

ST_8: B_buf_2_load_2 [2/2] 2.39ns
.preheader658:133  %B_buf_2_load_2 = load float* %B_buf_2_addr_3, align 4

ST_8: B_buf_2_addr_4 [1/1] 0.00ns
.preheader658:136  %B_buf_2_addr_4 = getelementptr [128 x float]* %B_buf_2, i64 0, i64 %tmp_25

ST_8: B_buf_2_load_3 [2/2] 2.39ns
.preheader658:137  %B_buf_2_load_3 = load float* %B_buf_2_addr_4, align 4

ST_8: B_buf_3_load [1/2] 2.39ns
.preheader658:141  %B_buf_3_load = load float* %B_buf_3_addr_1, align 4

ST_8: B_buf_3_load_1 [1/2] 2.39ns
.preheader658:145  %B_buf_3_load_1 = load float* %B_buf_3_addr_2, align 4

ST_8: B_buf_3_addr_3 [1/1] 0.00ns
.preheader658:148  %B_buf_3_addr_3 = getelementptr [128 x float]* %B_buf_3, i64 0, i64 %tmp_24

ST_8: B_buf_3_load_2 [2/2] 2.39ns
.preheader658:149  %B_buf_3_load_2 = load float* %B_buf_3_addr_3, align 4

ST_8: B_buf_3_addr_4 [1/1] 0.00ns
.preheader658:152  %B_buf_3_addr_4 = getelementptr [128 x float]* %B_buf_3, i64 0, i64 %tmp_25

ST_8: B_buf_3_load_3 [2/2] 2.39ns
.preheader658:153  %B_buf_3_load_3 = load float* %B_buf_3_addr_4, align 4

ST_8: B_buf_4_load [1/2] 2.39ns
.preheader658:157  %B_buf_4_load = load float* %B_buf_4_addr_1, align 4

ST_8: B_buf_4_load_1 [1/2] 2.39ns
.preheader658:161  %B_buf_4_load_1 = load float* %B_buf_4_addr_2, align 4

ST_8: B_buf_4_addr_3 [1/1] 0.00ns
.preheader658:164  %B_buf_4_addr_3 = getelementptr [128 x float]* %B_buf_4, i64 0, i64 %tmp_24

ST_8: B_buf_4_load_2 [2/2] 2.39ns
.preheader658:165  %B_buf_4_load_2 = load float* %B_buf_4_addr_3, align 4

ST_8: B_buf_4_addr_4 [1/1] 0.00ns
.preheader658:168  %B_buf_4_addr_4 = getelementptr [128 x float]* %B_buf_4, i64 0, i64 %tmp_25

ST_8: B_buf_4_load_3 [2/2] 2.39ns
.preheader658:169  %B_buf_4_load_3 = load float* %B_buf_4_addr_4, align 4

ST_8: B_buf_5_load [1/2] 2.39ns
.preheader658:173  %B_buf_5_load = load float* %B_buf_5_addr_1, align 4

ST_8: B_buf_5_load_1 [1/2] 2.39ns
.preheader658:177  %B_buf_5_load_1 = load float* %B_buf_5_addr_2, align 4

ST_8: B_buf_5_addr_3 [1/1] 0.00ns
.preheader658:180  %B_buf_5_addr_3 = getelementptr [128 x float]* %B_buf_5, i64 0, i64 %tmp_24

ST_8: B_buf_5_load_2 [2/2] 2.39ns
.preheader658:181  %B_buf_5_load_2 = load float* %B_buf_5_addr_3, align 4

ST_8: B_buf_5_addr_4 [1/1] 0.00ns
.preheader658:184  %B_buf_5_addr_4 = getelementptr [128 x float]* %B_buf_5, i64 0, i64 %tmp_25

ST_8: B_buf_5_load_3 [2/2] 2.39ns
.preheader658:185  %B_buf_5_load_3 = load float* %B_buf_5_addr_4, align 4

ST_8: B_buf_6_load [1/2] 2.39ns
.preheader658:189  %B_buf_6_load = load float* %B_buf_6_addr_1, align 4

ST_8: B_buf_6_load_1 [1/2] 2.39ns
.preheader658:193  %B_buf_6_load_1 = load float* %B_buf_6_addr_2, align 4

ST_8: B_buf_6_addr_3 [1/1] 0.00ns
.preheader658:196  %B_buf_6_addr_3 = getelementptr [128 x float]* %B_buf_6, i64 0, i64 %tmp_24

ST_8: B_buf_6_load_2 [2/2] 2.39ns
.preheader658:197  %B_buf_6_load_2 = load float* %B_buf_6_addr_3, align 4

ST_8: B_buf_6_addr_4 [1/1] 0.00ns
.preheader658:200  %B_buf_6_addr_4 = getelementptr [128 x float]* %B_buf_6, i64 0, i64 %tmp_25

ST_8: B_buf_6_load_3 [2/2] 2.39ns
.preheader658:201  %B_buf_6_load_3 = load float* %B_buf_6_addr_4, align 4

ST_8: B_buf_7_load [1/2] 2.39ns
.preheader658:205  %B_buf_7_load = load float* %B_buf_7_addr_1, align 4

ST_8: B_buf_7_load_1 [1/2] 2.39ns
.preheader658:209  %B_buf_7_load_1 = load float* %B_buf_7_addr_2, align 4

ST_8: B_buf_7_addr_3 [1/1] 0.00ns
.preheader658:212  %B_buf_7_addr_3 = getelementptr [128 x float]* %B_buf_7, i64 0, i64 %tmp_24

ST_8: B_buf_7_load_2 [2/2] 2.39ns
.preheader658:213  %B_buf_7_load_2 = load float* %B_buf_7_addr_3, align 4

ST_8: B_buf_7_addr_4 [1/1] 0.00ns
.preheader658:216  %B_buf_7_addr_4 = getelementptr [128 x float]* %B_buf_7, i64 0, i64 %tmp_25

ST_8: B_buf_7_load_3 [2/2] 2.39ns
.preheader658:217  %B_buf_7_load_3 = load float* %B_buf_7_addr_4, align 4


 <State 9>: 4.35ns
ST_9: A_buf_0_load_2 [1/2] 2.39ns
.preheader658:18  %A_buf_0_load_2 = load float* %A_buf_0_addr_3, align 8

ST_9: A_buf_0_load_3 [1/2] 2.39ns
.preheader658:23  %A_buf_0_load_3 = load float* %A_buf_0_addr_4, align 4

ST_9: A_buf_1_load_2 [1/2] 2.39ns
.preheader658:29  %A_buf_1_load_2 = load float* %A_buf_1_addr_3, align 8

ST_9: A_buf_1_load_3 [1/2] 2.39ns
.preheader658:31  %A_buf_1_load_3 = load float* %A_buf_1_addr_4, align 4

ST_9: A_buf_2_load_2 [1/2] 2.39ns
.preheader658:37  %A_buf_2_load_2 = load float* %A_buf_2_addr_3, align 8

ST_9: A_buf_2_load_3 [1/2] 2.39ns
.preheader658:39  %A_buf_2_load_3 = load float* %A_buf_2_addr_4, align 4

ST_9: A_buf_3_load_2 [1/2] 2.39ns
.preheader658:45  %A_buf_3_load_2 = load float* %A_buf_3_addr_3, align 8

ST_9: A_buf_3_load_3 [1/2] 2.39ns
.preheader658:47  %A_buf_3_load_3 = load float* %A_buf_3_addr_4, align 4

ST_9: A_buf_4_load_2 [1/2] 2.39ns
.preheader658:53  %A_buf_4_load_2 = load float* %A_buf_4_addr_3, align 8

ST_9: A_buf_4_load_3 [1/2] 2.39ns
.preheader658:55  %A_buf_4_load_3 = load float* %A_buf_4_addr_4, align 4

ST_9: A_buf_5_load_2 [1/2] 2.39ns
.preheader658:61  %A_buf_5_load_2 = load float* %A_buf_5_addr_3, align 8

ST_9: A_buf_5_load_3 [1/2] 2.39ns
.preheader658:63  %A_buf_5_load_3 = load float* %A_buf_5_addr_4, align 4

ST_9: A_buf_6_load_2 [1/2] 2.39ns
.preheader658:69  %A_buf_6_load_2 = load float* %A_buf_6_addr_3, align 8

ST_9: A_buf_6_load_3 [1/2] 2.39ns
.preheader658:71  %A_buf_6_load_3 = load float* %A_buf_6_addr_4, align 4

ST_9: A_buf_7_load_2 [1/2] 2.39ns
.preheader658:77  %A_buf_7_load_2 = load float* %A_buf_7_addr_3, align 8

ST_9: A_buf_7_load_3 [1/2] 2.39ns
.preheader658:79  %A_buf_7_load_3 = load float* %A_buf_7_addr_4, align 4

ST_9: prod [5/5] 4.35ns
.preheader658:88  %prod = fmul float %A_buf_0_load, %B_buf_0_load

ST_9: prod_1 [5/5] 4.35ns
.preheader658:94  %prod_1 = fmul float %A_buf_0_load_1, %B_buf_0_load_1

ST_9: B_buf_0_load_2 [1/2] 2.39ns
.preheader658:99  %B_buf_0_load_2 = load float* %B_buf_0_addr_3, align 4

ST_9: B_buf_0_load_3 [1/2] 2.39ns
.preheader658:105  %B_buf_0_load_3 = load float* %B_buf_0_addr_4, align 4

ST_9: prod_4 [5/5] 4.35ns
.preheader658:110  %prod_4 = fmul float %A_buf_1_load, %B_buf_1_load

ST_9: prod_5 [5/5] 4.35ns
.preheader658:114  %prod_5 = fmul float %A_buf_1_load_1, %B_buf_1_load_1

ST_9: B_buf_1_load_2 [1/2] 2.39ns
.preheader658:117  %B_buf_1_load_2 = load float* %B_buf_1_addr_3, align 4

ST_9: B_buf_1_load_3 [1/2] 2.39ns
.preheader658:121  %B_buf_1_load_3 = load float* %B_buf_1_addr_4, align 4

ST_9: prod_8 [5/5] 4.35ns
.preheader658:126  %prod_8 = fmul float %A_buf_2_load, %B_buf_2_load

ST_9: prod_9 [5/5] 4.35ns
.preheader658:130  %prod_9 = fmul float %A_buf_2_load_1, %B_buf_2_load_1

ST_9: B_buf_2_load_2 [1/2] 2.39ns
.preheader658:133  %B_buf_2_load_2 = load float* %B_buf_2_addr_3, align 4

ST_9: B_buf_2_load_3 [1/2] 2.39ns
.preheader658:137  %B_buf_2_load_3 = load float* %B_buf_2_addr_4, align 4

ST_9: prod_11 [5/5] 4.35ns
.preheader658:142  %prod_11 = fmul float %A_buf_3_load, %B_buf_3_load

ST_9: prod_12 [5/5] 4.35ns
.preheader658:146  %prod_12 = fmul float %A_buf_3_load_1, %B_buf_3_load_1

ST_9: B_buf_3_load_2 [1/2] 2.39ns
.preheader658:149  %B_buf_3_load_2 = load float* %B_buf_3_addr_3, align 4

ST_9: B_buf_3_load_3 [1/2] 2.39ns
.preheader658:153  %B_buf_3_load_3 = load float* %B_buf_3_addr_4, align 4

ST_9: prod_15 [5/5] 4.35ns
.preheader658:158  %prod_15 = fmul float %A_buf_4_load, %B_buf_4_load

ST_9: prod_16 [5/5] 4.35ns
.preheader658:162  %prod_16 = fmul float %A_buf_4_load_1, %B_buf_4_load_1

ST_9: B_buf_4_load_2 [1/2] 2.39ns
.preheader658:165  %B_buf_4_load_2 = load float* %B_buf_4_addr_3, align 4

ST_9: B_buf_4_load_3 [1/2] 2.39ns
.preheader658:169  %B_buf_4_load_3 = load float* %B_buf_4_addr_4, align 4

ST_9: prod_19 [5/5] 4.35ns
.preheader658:174  %prod_19 = fmul float %A_buf_5_load, %B_buf_5_load

ST_9: prod_20 [5/5] 4.35ns
.preheader658:178  %prod_20 = fmul float %A_buf_5_load_1, %B_buf_5_load_1

ST_9: B_buf_5_load_2 [1/2] 2.39ns
.preheader658:181  %B_buf_5_load_2 = load float* %B_buf_5_addr_3, align 4

ST_9: B_buf_5_load_3 [1/2] 2.39ns
.preheader658:185  %B_buf_5_load_3 = load float* %B_buf_5_addr_4, align 4

ST_9: prod_23 [5/5] 4.35ns
.preheader658:190  %prod_23 = fmul float %A_buf_6_load, %B_buf_6_load

ST_9: prod_24 [5/5] 4.35ns
.preheader658:194  %prod_24 = fmul float %A_buf_6_load_1, %B_buf_6_load_1

ST_9: B_buf_6_load_2 [1/2] 2.39ns
.preheader658:197  %B_buf_6_load_2 = load float* %B_buf_6_addr_3, align 4

ST_9: B_buf_6_load_3 [1/2] 2.39ns
.preheader658:201  %B_buf_6_load_3 = load float* %B_buf_6_addr_4, align 4

ST_9: prod_27 [5/5] 4.35ns
.preheader658:206  %prod_27 = fmul float %A_buf_7_load, %B_buf_7_load

ST_9: prod_28 [5/5] 4.35ns
.preheader658:210  %prod_28 = fmul float %A_buf_7_load_1, %B_buf_7_load_1

ST_9: B_buf_7_load_2 [1/2] 2.39ns
.preheader658:213  %B_buf_7_load_2 = load float* %B_buf_7_addr_3, align 4

ST_9: B_buf_7_load_3 [1/2] 2.39ns
.preheader658:217  %B_buf_7_load_3 = load float* %B_buf_7_addr_4, align 4


 <State 10>: 4.35ns
ST_10: prod [4/5] 4.35ns
.preheader658:88  %prod = fmul float %A_buf_0_load, %B_buf_0_load

ST_10: prod_1 [4/5] 4.35ns
.preheader658:94  %prod_1 = fmul float %A_buf_0_load_1, %B_buf_0_load_1

ST_10: prod_2 [5/5] 4.35ns
.preheader658:100  %prod_2 = fmul float %A_buf_0_load_2, %B_buf_0_load_2

ST_10: prod_3 [5/5] 4.35ns
.preheader658:106  %prod_3 = fmul float %A_buf_0_load_3, %B_buf_0_load_3

ST_10: prod_4 [4/5] 4.35ns
.preheader658:110  %prod_4 = fmul float %A_buf_1_load, %B_buf_1_load

ST_10: prod_5 [4/5] 4.35ns
.preheader658:114  %prod_5 = fmul float %A_buf_1_load_1, %B_buf_1_load_1

ST_10: prod_6 [5/5] 4.35ns
.preheader658:118  %prod_6 = fmul float %A_buf_1_load_2, %B_buf_1_load_2

ST_10: prod_7 [5/5] 4.35ns
.preheader658:122  %prod_7 = fmul float %A_buf_1_load_3, %B_buf_1_load_3

ST_10: prod_8 [4/5] 4.35ns
.preheader658:126  %prod_8 = fmul float %A_buf_2_load, %B_buf_2_load

ST_10: prod_9 [4/5] 4.35ns
.preheader658:130  %prod_9 = fmul float %A_buf_2_load_1, %B_buf_2_load_1

ST_10: prod_s [5/5] 4.35ns
.preheader658:134  %prod_s = fmul float %A_buf_2_load_2, %B_buf_2_load_2

ST_10: prod_10 [5/5] 4.35ns
.preheader658:138  %prod_10 = fmul float %A_buf_2_load_3, %B_buf_2_load_3

ST_10: prod_11 [4/5] 4.35ns
.preheader658:142  %prod_11 = fmul float %A_buf_3_load, %B_buf_3_load

ST_10: prod_12 [4/5] 4.35ns
.preheader658:146  %prod_12 = fmul float %A_buf_3_load_1, %B_buf_3_load_1

ST_10: prod_13 [5/5] 4.35ns
.preheader658:150  %prod_13 = fmul float %A_buf_3_load_2, %B_buf_3_load_2

ST_10: prod_14 [5/5] 4.35ns
.preheader658:154  %prod_14 = fmul float %A_buf_3_load_3, %B_buf_3_load_3

ST_10: prod_15 [4/5] 4.35ns
.preheader658:158  %prod_15 = fmul float %A_buf_4_load, %B_buf_4_load

ST_10: prod_16 [4/5] 4.35ns
.preheader658:162  %prod_16 = fmul float %A_buf_4_load_1, %B_buf_4_load_1

ST_10: prod_17 [5/5] 4.35ns
.preheader658:166  %prod_17 = fmul float %A_buf_4_load_2, %B_buf_4_load_2

ST_10: prod_18 [5/5] 4.35ns
.preheader658:170  %prod_18 = fmul float %A_buf_4_load_3, %B_buf_4_load_3

ST_10: prod_19 [4/5] 4.35ns
.preheader658:174  %prod_19 = fmul float %A_buf_5_load, %B_buf_5_load

ST_10: prod_20 [4/5] 4.35ns
.preheader658:178  %prod_20 = fmul float %A_buf_5_load_1, %B_buf_5_load_1

ST_10: prod_21 [5/5] 4.35ns
.preheader658:182  %prod_21 = fmul float %A_buf_5_load_2, %B_buf_5_load_2

ST_10: prod_22 [5/5] 4.35ns
.preheader658:186  %prod_22 = fmul float %A_buf_5_load_3, %B_buf_5_load_3

ST_10: prod_23 [4/5] 4.35ns
.preheader658:190  %prod_23 = fmul float %A_buf_6_load, %B_buf_6_load

ST_10: prod_24 [4/5] 4.35ns
.preheader658:194  %prod_24 = fmul float %A_buf_6_load_1, %B_buf_6_load_1

ST_10: prod_25 [5/5] 4.35ns
.preheader658:198  %prod_25 = fmul float %A_buf_6_load_2, %B_buf_6_load_2

ST_10: prod_26 [5/5] 4.35ns
.preheader658:202  %prod_26 = fmul float %A_buf_6_load_3, %B_buf_6_load_3

ST_10: prod_27 [4/5] 4.35ns
.preheader658:206  %prod_27 = fmul float %A_buf_7_load, %B_buf_7_load

ST_10: prod_28 [4/5] 4.35ns
.preheader658:210  %prod_28 = fmul float %A_buf_7_load_1, %B_buf_7_load_1

ST_10: prod_29 [5/5] 4.35ns
.preheader658:214  %prod_29 = fmul float %A_buf_7_load_2, %B_buf_7_load_2

ST_10: prod_30 [5/5] 4.35ns
.preheader658:218  %prod_30 = fmul float %A_buf_7_load_3, %B_buf_7_load_3


 <State 11>: 4.35ns
ST_11: prod [3/5] 4.35ns
.preheader658:88  %prod = fmul float %A_buf_0_load, %B_buf_0_load

ST_11: prod_1 [3/5] 4.35ns
.preheader658:94  %prod_1 = fmul float %A_buf_0_load_1, %B_buf_0_load_1

ST_11: prod_2 [4/5] 4.35ns
.preheader658:100  %prod_2 = fmul float %A_buf_0_load_2, %B_buf_0_load_2

ST_11: prod_3 [4/5] 4.35ns
.preheader658:106  %prod_3 = fmul float %A_buf_0_load_3, %B_buf_0_load_3

ST_11: prod_4 [3/5] 4.35ns
.preheader658:110  %prod_4 = fmul float %A_buf_1_load, %B_buf_1_load

ST_11: prod_5 [3/5] 4.35ns
.preheader658:114  %prod_5 = fmul float %A_buf_1_load_1, %B_buf_1_load_1

ST_11: prod_6 [4/5] 4.35ns
.preheader658:118  %prod_6 = fmul float %A_buf_1_load_2, %B_buf_1_load_2

ST_11: prod_7 [4/5] 4.35ns
.preheader658:122  %prod_7 = fmul float %A_buf_1_load_3, %B_buf_1_load_3

ST_11: prod_8 [3/5] 4.35ns
.preheader658:126  %prod_8 = fmul float %A_buf_2_load, %B_buf_2_load

ST_11: prod_9 [3/5] 4.35ns
.preheader658:130  %prod_9 = fmul float %A_buf_2_load_1, %B_buf_2_load_1

ST_11: prod_s [4/5] 4.35ns
.preheader658:134  %prod_s = fmul float %A_buf_2_load_2, %B_buf_2_load_2

ST_11: prod_10 [4/5] 4.35ns
.preheader658:138  %prod_10 = fmul float %A_buf_2_load_3, %B_buf_2_load_3

ST_11: prod_11 [3/5] 4.35ns
.preheader658:142  %prod_11 = fmul float %A_buf_3_load, %B_buf_3_load

ST_11: prod_12 [3/5] 4.35ns
.preheader658:146  %prod_12 = fmul float %A_buf_3_load_1, %B_buf_3_load_1

ST_11: prod_13 [4/5] 4.35ns
.preheader658:150  %prod_13 = fmul float %A_buf_3_load_2, %B_buf_3_load_2

ST_11: prod_14 [4/5] 4.35ns
.preheader658:154  %prod_14 = fmul float %A_buf_3_load_3, %B_buf_3_load_3

ST_11: prod_15 [3/5] 4.35ns
.preheader658:158  %prod_15 = fmul float %A_buf_4_load, %B_buf_4_load

ST_11: prod_16 [3/5] 4.35ns
.preheader658:162  %prod_16 = fmul float %A_buf_4_load_1, %B_buf_4_load_1

ST_11: prod_17 [4/5] 4.35ns
.preheader658:166  %prod_17 = fmul float %A_buf_4_load_2, %B_buf_4_load_2

ST_11: prod_18 [4/5] 4.35ns
.preheader658:170  %prod_18 = fmul float %A_buf_4_load_3, %B_buf_4_load_3

ST_11: prod_19 [3/5] 4.35ns
.preheader658:174  %prod_19 = fmul float %A_buf_5_load, %B_buf_5_load

ST_11: prod_20 [3/5] 4.35ns
.preheader658:178  %prod_20 = fmul float %A_buf_5_load_1, %B_buf_5_load_1

ST_11: prod_21 [4/5] 4.35ns
.preheader658:182  %prod_21 = fmul float %A_buf_5_load_2, %B_buf_5_load_2

ST_11: prod_22 [4/5] 4.35ns
.preheader658:186  %prod_22 = fmul float %A_buf_5_load_3, %B_buf_5_load_3

ST_11: prod_23 [3/5] 4.35ns
.preheader658:190  %prod_23 = fmul float %A_buf_6_load, %B_buf_6_load

ST_11: prod_24 [3/5] 4.35ns
.preheader658:194  %prod_24 = fmul float %A_buf_6_load_1, %B_buf_6_load_1

ST_11: prod_25 [4/5] 4.35ns
.preheader658:198  %prod_25 = fmul float %A_buf_6_load_2, %B_buf_6_load_2

ST_11: prod_26 [4/5] 4.35ns
.preheader658:202  %prod_26 = fmul float %A_buf_6_load_3, %B_buf_6_load_3

ST_11: prod_27 [3/5] 4.35ns
.preheader658:206  %prod_27 = fmul float %A_buf_7_load, %B_buf_7_load

ST_11: prod_28 [3/5] 4.35ns
.preheader658:210  %prod_28 = fmul float %A_buf_7_load_1, %B_buf_7_load_1

ST_11: prod_29 [4/5] 4.35ns
.preheader658:214  %prod_29 = fmul float %A_buf_7_load_2, %B_buf_7_load_2

ST_11: prod_30 [4/5] 4.35ns
.preheader658:218  %prod_30 = fmul float %A_buf_7_load_3, %B_buf_7_load_3


 <State 12>: 4.35ns
ST_12: prod [2/5] 4.35ns
.preheader658:88  %prod = fmul float %A_buf_0_load, %B_buf_0_load

ST_12: prod_1 [2/5] 4.35ns
.preheader658:94  %prod_1 = fmul float %A_buf_0_load_1, %B_buf_0_load_1

ST_12: prod_2 [3/5] 4.35ns
.preheader658:100  %prod_2 = fmul float %A_buf_0_load_2, %B_buf_0_load_2

ST_12: prod_3 [3/5] 4.35ns
.preheader658:106  %prod_3 = fmul float %A_buf_0_load_3, %B_buf_0_load_3

ST_12: prod_4 [2/5] 4.35ns
.preheader658:110  %prod_4 = fmul float %A_buf_1_load, %B_buf_1_load

ST_12: prod_5 [2/5] 4.35ns
.preheader658:114  %prod_5 = fmul float %A_buf_1_load_1, %B_buf_1_load_1

ST_12: prod_6 [3/5] 4.35ns
.preheader658:118  %prod_6 = fmul float %A_buf_1_load_2, %B_buf_1_load_2

ST_12: prod_7 [3/5] 4.35ns
.preheader658:122  %prod_7 = fmul float %A_buf_1_load_3, %B_buf_1_load_3

ST_12: prod_8 [2/5] 4.35ns
.preheader658:126  %prod_8 = fmul float %A_buf_2_load, %B_buf_2_load

ST_12: prod_9 [2/5] 4.35ns
.preheader658:130  %prod_9 = fmul float %A_buf_2_load_1, %B_buf_2_load_1

ST_12: prod_s [3/5] 4.35ns
.preheader658:134  %prod_s = fmul float %A_buf_2_load_2, %B_buf_2_load_2

ST_12: prod_10 [3/5] 4.35ns
.preheader658:138  %prod_10 = fmul float %A_buf_2_load_3, %B_buf_2_load_3

ST_12: prod_11 [2/5] 4.35ns
.preheader658:142  %prod_11 = fmul float %A_buf_3_load, %B_buf_3_load

ST_12: prod_12 [2/5] 4.35ns
.preheader658:146  %prod_12 = fmul float %A_buf_3_load_1, %B_buf_3_load_1

ST_12: prod_13 [3/5] 4.35ns
.preheader658:150  %prod_13 = fmul float %A_buf_3_load_2, %B_buf_3_load_2

ST_12: prod_14 [3/5] 4.35ns
.preheader658:154  %prod_14 = fmul float %A_buf_3_load_3, %B_buf_3_load_3

ST_12: prod_15 [2/5] 4.35ns
.preheader658:158  %prod_15 = fmul float %A_buf_4_load, %B_buf_4_load

ST_12: prod_16 [2/5] 4.35ns
.preheader658:162  %prod_16 = fmul float %A_buf_4_load_1, %B_buf_4_load_1

ST_12: prod_17 [3/5] 4.35ns
.preheader658:166  %prod_17 = fmul float %A_buf_4_load_2, %B_buf_4_load_2

ST_12: prod_18 [3/5] 4.35ns
.preheader658:170  %prod_18 = fmul float %A_buf_4_load_3, %B_buf_4_load_3

ST_12: prod_19 [2/5] 4.35ns
.preheader658:174  %prod_19 = fmul float %A_buf_5_load, %B_buf_5_load

ST_12: prod_20 [2/5] 4.35ns
.preheader658:178  %prod_20 = fmul float %A_buf_5_load_1, %B_buf_5_load_1

ST_12: prod_21 [3/5] 4.35ns
.preheader658:182  %prod_21 = fmul float %A_buf_5_load_2, %B_buf_5_load_2

ST_12: prod_22 [3/5] 4.35ns
.preheader658:186  %prod_22 = fmul float %A_buf_5_load_3, %B_buf_5_load_3

ST_12: prod_23 [2/5] 4.35ns
.preheader658:190  %prod_23 = fmul float %A_buf_6_load, %B_buf_6_load

ST_12: prod_24 [2/5] 4.35ns
.preheader658:194  %prod_24 = fmul float %A_buf_6_load_1, %B_buf_6_load_1

ST_12: prod_25 [3/5] 4.35ns
.preheader658:198  %prod_25 = fmul float %A_buf_6_load_2, %B_buf_6_load_2

ST_12: prod_26 [3/5] 4.35ns
.preheader658:202  %prod_26 = fmul float %A_buf_6_load_3, %B_buf_6_load_3

ST_12: prod_27 [2/5] 4.35ns
.preheader658:206  %prod_27 = fmul float %A_buf_7_load, %B_buf_7_load

ST_12: prod_28 [2/5] 4.35ns
.preheader658:210  %prod_28 = fmul float %A_buf_7_load_1, %B_buf_7_load_1

ST_12: prod_29 [3/5] 4.35ns
.preheader658:214  %prod_29 = fmul float %A_buf_7_load_2, %B_buf_7_load_2

ST_12: prod_30 [3/5] 4.35ns
.preheader658:218  %prod_30 = fmul float %A_buf_7_load_3, %B_buf_7_load_3


 <State 13>: 4.35ns
ST_13: prod [1/5] 4.35ns
.preheader658:88  %prod = fmul float %A_buf_0_load, %B_buf_0_load

ST_13: prod_1 [1/5] 4.35ns
.preheader658:94  %prod_1 = fmul float %A_buf_0_load_1, %B_buf_0_load_1

ST_13: prod_2 [2/5] 4.35ns
.preheader658:100  %prod_2 = fmul float %A_buf_0_load_2, %B_buf_0_load_2

ST_13: prod_3 [2/5] 4.35ns
.preheader658:106  %prod_3 = fmul float %A_buf_0_load_3, %B_buf_0_load_3

ST_13: prod_4 [1/5] 4.35ns
.preheader658:110  %prod_4 = fmul float %A_buf_1_load, %B_buf_1_load

ST_13: prod_5 [1/5] 4.35ns
.preheader658:114  %prod_5 = fmul float %A_buf_1_load_1, %B_buf_1_load_1

ST_13: prod_6 [2/5] 4.35ns
.preheader658:118  %prod_6 = fmul float %A_buf_1_load_2, %B_buf_1_load_2

ST_13: prod_7 [2/5] 4.35ns
.preheader658:122  %prod_7 = fmul float %A_buf_1_load_3, %B_buf_1_load_3

ST_13: prod_8 [1/5] 4.35ns
.preheader658:126  %prod_8 = fmul float %A_buf_2_load, %B_buf_2_load

ST_13: prod_9 [1/5] 4.35ns
.preheader658:130  %prod_9 = fmul float %A_buf_2_load_1, %B_buf_2_load_1

ST_13: prod_s [2/5] 4.35ns
.preheader658:134  %prod_s = fmul float %A_buf_2_load_2, %B_buf_2_load_2

ST_13: prod_10 [2/5] 4.35ns
.preheader658:138  %prod_10 = fmul float %A_buf_2_load_3, %B_buf_2_load_3

ST_13: prod_11 [1/5] 4.35ns
.preheader658:142  %prod_11 = fmul float %A_buf_3_load, %B_buf_3_load

ST_13: prod_12 [1/5] 4.35ns
.preheader658:146  %prod_12 = fmul float %A_buf_3_load_1, %B_buf_3_load_1

ST_13: prod_13 [2/5] 4.35ns
.preheader658:150  %prod_13 = fmul float %A_buf_3_load_2, %B_buf_3_load_2

ST_13: prod_14 [2/5] 4.35ns
.preheader658:154  %prod_14 = fmul float %A_buf_3_load_3, %B_buf_3_load_3

ST_13: prod_15 [1/5] 4.35ns
.preheader658:158  %prod_15 = fmul float %A_buf_4_load, %B_buf_4_load

ST_13: prod_16 [1/5] 4.35ns
.preheader658:162  %prod_16 = fmul float %A_buf_4_load_1, %B_buf_4_load_1

ST_13: prod_17 [2/5] 4.35ns
.preheader658:166  %prod_17 = fmul float %A_buf_4_load_2, %B_buf_4_load_2

ST_13: prod_18 [2/5] 4.35ns
.preheader658:170  %prod_18 = fmul float %A_buf_4_load_3, %B_buf_4_load_3

ST_13: prod_19 [1/5] 4.35ns
.preheader658:174  %prod_19 = fmul float %A_buf_5_load, %B_buf_5_load

ST_13: prod_20 [1/5] 4.35ns
.preheader658:178  %prod_20 = fmul float %A_buf_5_load_1, %B_buf_5_load_1

ST_13: prod_21 [2/5] 4.35ns
.preheader658:182  %prod_21 = fmul float %A_buf_5_load_2, %B_buf_5_load_2

ST_13: prod_22 [2/5] 4.35ns
.preheader658:186  %prod_22 = fmul float %A_buf_5_load_3, %B_buf_5_load_3

ST_13: prod_23 [1/5] 4.35ns
.preheader658:190  %prod_23 = fmul float %A_buf_6_load, %B_buf_6_load

ST_13: prod_24 [1/5] 4.35ns
.preheader658:194  %prod_24 = fmul float %A_buf_6_load_1, %B_buf_6_load_1

ST_13: prod_25 [2/5] 4.35ns
.preheader658:198  %prod_25 = fmul float %A_buf_6_load_2, %B_buf_6_load_2

ST_13: prod_26 [2/5] 4.35ns
.preheader658:202  %prod_26 = fmul float %A_buf_6_load_3, %B_buf_6_load_3

ST_13: prod_27 [1/5] 4.35ns
.preheader658:206  %prod_27 = fmul float %A_buf_7_load, %B_buf_7_load

ST_13: prod_28 [1/5] 4.35ns
.preheader658:210  %prod_28 = fmul float %A_buf_7_load_1, %B_buf_7_load_1

ST_13: prod_29 [2/5] 4.35ns
.preheader658:214  %prod_29 = fmul float %A_buf_7_load_2, %B_buf_7_load_2

ST_13: prod_30 [2/5] 4.35ns
.preheader658:218  %prod_30 = fmul float %A_buf_7_load_3, %B_buf_7_load_3


 <State 14>: 4.35ns
ST_14: sum [9/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00

ST_14: prod_2 [1/5] 4.35ns
.preheader658:100  %prod_2 = fmul float %A_buf_0_load_2, %B_buf_0_load_2

ST_14: prod_3 [1/5] 4.35ns
.preheader658:106  %prod_3 = fmul float %A_buf_0_load_3, %B_buf_0_load_3

ST_14: prod_6 [1/5] 4.35ns
.preheader658:118  %prod_6 = fmul float %A_buf_1_load_2, %B_buf_1_load_2

ST_14: prod_7 [1/5] 4.35ns
.preheader658:122  %prod_7 = fmul float %A_buf_1_load_3, %B_buf_1_load_3

ST_14: prod_s [1/5] 4.35ns
.preheader658:134  %prod_s = fmul float %A_buf_2_load_2, %B_buf_2_load_2

ST_14: prod_10 [1/5] 4.35ns
.preheader658:138  %prod_10 = fmul float %A_buf_2_load_3, %B_buf_2_load_3

ST_14: prod_13 [1/5] 4.35ns
.preheader658:150  %prod_13 = fmul float %A_buf_3_load_2, %B_buf_3_load_2

ST_14: prod_14 [1/5] 4.35ns
.preheader658:154  %prod_14 = fmul float %A_buf_3_load_3, %B_buf_3_load_3

ST_14: prod_17 [1/5] 4.35ns
.preheader658:166  %prod_17 = fmul float %A_buf_4_load_2, %B_buf_4_load_2

ST_14: prod_18 [1/5] 4.35ns
.preheader658:170  %prod_18 = fmul float %A_buf_4_load_3, %B_buf_4_load_3

ST_14: prod_21 [1/5] 4.35ns
.preheader658:182  %prod_21 = fmul float %A_buf_5_load_2, %B_buf_5_load_2

ST_14: prod_22 [1/5] 4.35ns
.preheader658:186  %prod_22 = fmul float %A_buf_5_load_3, %B_buf_5_load_3

ST_14: prod_25 [1/5] 4.35ns
.preheader658:198  %prod_25 = fmul float %A_buf_6_load_2, %B_buf_6_load_2

ST_14: prod_26 [1/5] 4.35ns
.preheader658:202  %prod_26 = fmul float %A_buf_6_load_3, %B_buf_6_load_3

ST_14: prod_29 [1/5] 4.35ns
.preheader658:214  %prod_29 = fmul float %A_buf_7_load_2, %B_buf_7_load_2

ST_14: prod_30 [1/5] 4.35ns
.preheader658:218  %prod_30 = fmul float %A_buf_7_load_3, %B_buf_7_load_3


 <State 15>: 4.35ns
ST_15: sum [8/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 16>: 4.35ns
ST_16: sum [7/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 17>: 4.35ns
ST_17: sum [6/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 18>: 4.35ns
ST_18: sum [5/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 19>: 4.35ns
ST_19: sum [4/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 20>: 4.35ns
ST_20: sum [3/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 21>: 4.35ns
ST_21: sum [2/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 22>: 4.35ns
ST_22: sum [1/9] 4.35ns
.preheader658:89  %sum = fadd float %prod, 0.000000e+00


 <State 23>: 4.35ns
ST_23: sum_1 [9/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 24>: 4.35ns
ST_24: sum_1 [8/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 25>: 4.35ns
ST_25: sum_1 [7/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 26>: 4.35ns
ST_26: sum_1 [6/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 27>: 4.35ns
ST_27: sum_1 [5/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 28>: 4.35ns
ST_28: sum_1 [4/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 29>: 4.35ns
ST_29: sum_1 [3/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 30>: 4.35ns
ST_30: sum_1 [2/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 31>: 4.35ns
ST_31: sum_1 [1/9] 4.35ns
.preheader658:95  %sum_1 = fadd float %sum, %prod_1


 <State 32>: 4.35ns
ST_32: sum_2 [9/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 33>: 4.35ns
ST_33: sum_2 [8/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 34>: 4.35ns
ST_34: sum_2 [7/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 35>: 4.35ns
ST_35: sum_2 [6/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 36>: 4.35ns
ST_36: sum_2 [5/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 37>: 4.35ns
ST_37: sum_2 [4/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 38>: 4.35ns
ST_38: sum_2 [3/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 39>: 4.35ns
ST_39: sum_2 [2/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 40>: 4.35ns
ST_40: sum_2 [1/9] 4.35ns
.preheader658:101  %sum_2 = fadd float %sum_1, %prod_2


 <State 41>: 4.35ns
ST_41: sum_3 [9/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 42>: 4.35ns
ST_42: sum_3 [8/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 43>: 4.35ns
ST_43: sum_3 [7/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 44>: 4.35ns
ST_44: sum_3 [6/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 45>: 4.35ns
ST_45: sum_3 [5/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 46>: 4.35ns
ST_46: sum_3 [4/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 47>: 4.35ns
ST_47: sum_3 [3/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 48>: 4.35ns
ST_48: sum_3 [2/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 49>: 4.35ns
ST_49: sum_3 [1/9] 4.35ns
.preheader658:107  %sum_3 = fadd float %sum_2, %prod_3


 <State 50>: 4.35ns
ST_50: sum_4 [9/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 51>: 4.35ns
ST_51: sum_4 [8/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 52>: 4.35ns
ST_52: sum_4 [7/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 53>: 4.35ns
ST_53: sum_4 [6/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 54>: 4.35ns
ST_54: sum_4 [5/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 55>: 4.35ns
ST_55: sum_4 [4/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 56>: 4.35ns
ST_56: sum_4 [3/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 57>: 4.35ns
ST_57: sum_4 [2/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 58>: 4.35ns
ST_58: sum_4 [1/9] 4.35ns
.preheader658:111  %sum_4 = fadd float %sum_3, %prod_4


 <State 59>: 4.35ns
ST_59: sum_5 [9/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 60>: 4.35ns
ST_60: sum_5 [8/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 61>: 4.35ns
ST_61: sum_5 [7/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 62>: 4.35ns
ST_62: sum_5 [6/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 63>: 4.35ns
ST_63: sum_5 [5/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 64>: 4.35ns
ST_64: sum_5 [4/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 65>: 4.35ns
ST_65: sum_5 [3/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 66>: 4.35ns
ST_66: sum_5 [2/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 67>: 4.35ns
ST_67: sum_5 [1/9] 4.35ns
.preheader658:115  %sum_5 = fadd float %sum_4, %prod_5


 <State 68>: 4.35ns
ST_68: sum_6 [9/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 69>: 4.35ns
ST_69: sum_6 [8/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 70>: 4.35ns
ST_70: sum_6 [7/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 71>: 4.35ns
ST_71: sum_6 [6/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 72>: 4.35ns
ST_72: sum_6 [5/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 73>: 4.35ns
ST_73: sum_6 [4/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 74>: 4.35ns
ST_74: sum_6 [3/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 75>: 4.35ns
ST_75: sum_6 [2/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 76>: 4.35ns
ST_76: sum_6 [1/9] 4.35ns
.preheader658:119  %sum_6 = fadd float %sum_5, %prod_6


 <State 77>: 4.35ns
ST_77: sum_7 [9/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 78>: 4.35ns
ST_78: sum_7 [8/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 79>: 4.35ns
ST_79: sum_7 [7/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 80>: 4.35ns
ST_80: sum_7 [6/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 81>: 4.35ns
ST_81: sum_7 [5/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 82>: 4.35ns
ST_82: sum_7 [4/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 83>: 4.35ns
ST_83: sum_7 [3/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 84>: 4.35ns
ST_84: sum_7 [2/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 85>: 4.35ns
ST_85: sum_7 [1/9] 4.35ns
.preheader658:123  %sum_7 = fadd float %sum_6, %prod_7


 <State 86>: 4.35ns
ST_86: sum_8 [9/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 87>: 4.35ns
ST_87: sum_8 [8/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 88>: 4.35ns
ST_88: sum_8 [7/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 89>: 4.35ns
ST_89: sum_8 [6/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 90>: 4.35ns
ST_90: sum_8 [5/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 91>: 4.35ns
ST_91: sum_8 [4/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 92>: 4.35ns
ST_92: sum_8 [3/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 93>: 4.35ns
ST_93: sum_8 [2/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 94>: 4.35ns
ST_94: sum_8 [1/9] 4.35ns
.preheader658:127  %sum_8 = fadd float %sum_7, %prod_8


 <State 95>: 4.35ns
ST_95: sum_9 [9/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 96>: 4.35ns
ST_96: sum_9 [8/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 97>: 4.35ns
ST_97: sum_9 [7/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 98>: 4.35ns
ST_98: sum_9 [6/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 99>: 4.35ns
ST_99: sum_9 [5/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 100>: 4.35ns
ST_100: sum_9 [4/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 101>: 4.35ns
ST_101: sum_9 [3/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 102>: 4.35ns
ST_102: sum_9 [2/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 103>: 4.35ns
ST_103: sum_9 [1/9] 4.35ns
.preheader658:131  %sum_9 = fadd float %sum_8, %prod_9


 <State 104>: 4.35ns
ST_104: sum_s [9/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 105>: 4.35ns
ST_105: sum_s [8/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 106>: 4.35ns
ST_106: sum_s [7/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 107>: 4.35ns
ST_107: sum_s [6/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 108>: 4.35ns
ST_108: sum_s [5/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 109>: 4.35ns
ST_109: sum_s [4/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 110>: 4.35ns
ST_110: sum_s [3/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 111>: 4.35ns
ST_111: sum_s [2/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 112>: 4.35ns
ST_112: sum_s [1/9] 4.35ns
.preheader658:135  %sum_s = fadd float %sum_9, %prod_s


 <State 113>: 4.35ns
ST_113: sum_10 [9/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 114>: 4.35ns
ST_114: sum_10 [8/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 115>: 4.35ns
ST_115: sum_10 [7/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 116>: 4.35ns
ST_116: sum_10 [6/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 117>: 4.35ns
ST_117: sum_10 [5/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 118>: 4.35ns
ST_118: sum_10 [4/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 119>: 4.35ns
ST_119: sum_10 [3/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 120>: 4.35ns
ST_120: sum_10 [2/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 121>: 4.35ns
ST_121: sum_10 [1/9] 4.35ns
.preheader658:139  %sum_10 = fadd float %sum_s, %prod_10


 <State 122>: 4.35ns
ST_122: sum_11 [9/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 123>: 4.35ns
ST_123: sum_11 [8/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 124>: 4.35ns
ST_124: sum_11 [7/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 125>: 4.35ns
ST_125: sum_11 [6/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 126>: 4.35ns
ST_126: sum_11 [5/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 127>: 4.35ns
ST_127: sum_11 [4/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 128>: 4.35ns
ST_128: sum_11 [3/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 129>: 4.35ns
ST_129: sum_11 [2/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 130>: 4.35ns
ST_130: sum_11 [1/9] 4.35ns
.preheader658:143  %sum_11 = fadd float %sum_10, %prod_11


 <State 131>: 4.35ns
ST_131: sum_12 [9/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 132>: 4.35ns
ST_132: sum_12 [8/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 133>: 4.35ns
ST_133: sum_12 [7/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 134>: 4.35ns
ST_134: sum_12 [6/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 135>: 4.35ns
ST_135: sum_12 [5/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 136>: 4.35ns
ST_136: sum_12 [4/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 137>: 4.35ns
ST_137: sum_12 [3/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 138>: 4.35ns
ST_138: sum_12 [2/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 139>: 4.35ns
ST_139: sum_12 [1/9] 4.35ns
.preheader658:147  %sum_12 = fadd float %sum_11, %prod_12


 <State 140>: 4.35ns
ST_140: sum_13 [9/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 141>: 4.35ns
ST_141: sum_13 [8/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 142>: 4.35ns
ST_142: sum_13 [7/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 143>: 4.35ns
ST_143: sum_13 [6/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 144>: 4.35ns
ST_144: sum_13 [5/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 145>: 4.35ns
ST_145: sum_13 [4/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 146>: 4.35ns
ST_146: sum_13 [3/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 147>: 4.35ns
ST_147: sum_13 [2/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 148>: 4.35ns
ST_148: sum_13 [1/9] 4.35ns
.preheader658:151  %sum_13 = fadd float %sum_12, %prod_13


 <State 149>: 4.35ns
ST_149: sum_14 [9/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 150>: 4.35ns
ST_150: sum_14 [8/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 151>: 4.35ns
ST_151: sum_14 [7/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 152>: 4.35ns
ST_152: sum_14 [6/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 153>: 4.35ns
ST_153: sum_14 [5/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 154>: 4.35ns
ST_154: sum_14 [4/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 155>: 4.35ns
ST_155: sum_14 [3/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 156>: 4.35ns
ST_156: sum_14 [2/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 157>: 4.35ns
ST_157: sum_14 [1/9] 4.35ns
.preheader658:155  %sum_14 = fadd float %sum_13, %prod_14


 <State 158>: 4.35ns
ST_158: sum_15 [9/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 159>: 4.35ns
ST_159: sum_15 [8/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 160>: 4.35ns
ST_160: sum_15 [7/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 161>: 4.35ns
ST_161: sum_15 [6/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 162>: 4.35ns
ST_162: sum_15 [5/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 163>: 4.35ns
ST_163: sum_15 [4/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 164>: 4.35ns
ST_164: sum_15 [3/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 165>: 4.35ns
ST_165: sum_15 [2/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 166>: 4.35ns
ST_166: sum_15 [1/9] 4.35ns
.preheader658:159  %sum_15 = fadd float %sum_14, %prod_15


 <State 167>: 4.35ns
ST_167: sum_16 [9/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 168>: 4.35ns
ST_168: sum_16 [8/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 169>: 4.35ns
ST_169: sum_16 [7/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 170>: 4.35ns
ST_170: sum_16 [6/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 171>: 4.35ns
ST_171: sum_16 [5/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 172>: 4.35ns
ST_172: sum_16 [4/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 173>: 4.35ns
ST_173: sum_16 [3/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 174>: 4.35ns
ST_174: sum_16 [2/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 175>: 4.35ns
ST_175: sum_16 [1/9] 4.35ns
.preheader658:163  %sum_16 = fadd float %sum_15, %prod_16


 <State 176>: 4.35ns
ST_176: sum_17 [9/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 177>: 4.35ns
ST_177: sum_17 [8/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 178>: 4.35ns
ST_178: sum_17 [7/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 179>: 4.35ns
ST_179: sum_17 [6/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 180>: 4.35ns
ST_180: sum_17 [5/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 181>: 4.35ns
ST_181: sum_17 [4/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 182>: 4.35ns
ST_182: sum_17 [3/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 183>: 4.35ns
ST_183: sum_17 [2/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 184>: 4.35ns
ST_184: sum_17 [1/9] 4.35ns
.preheader658:167  %sum_17 = fadd float %sum_16, %prod_17


 <State 185>: 4.35ns
ST_185: sum_18 [9/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 186>: 4.35ns
ST_186: sum_18 [8/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 187>: 4.35ns
ST_187: sum_18 [7/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 188>: 4.35ns
ST_188: sum_18 [6/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 189>: 4.35ns
ST_189: sum_18 [5/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 190>: 4.35ns
ST_190: sum_18 [4/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 191>: 4.35ns
ST_191: sum_18 [3/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 192>: 4.35ns
ST_192: sum_18 [2/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 193>: 4.35ns
ST_193: sum_18 [1/9] 4.35ns
.preheader658:171  %sum_18 = fadd float %sum_17, %prod_18


 <State 194>: 4.35ns
ST_194: sum_19 [9/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 195>: 4.35ns
ST_195: sum_19 [8/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 196>: 4.35ns
ST_196: sum_19 [7/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 197>: 4.35ns
ST_197: sum_19 [6/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 198>: 4.35ns
ST_198: sum_19 [5/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 199>: 4.35ns
ST_199: sum_19 [4/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 200>: 4.35ns
ST_200: sum_19 [3/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 201>: 4.35ns
ST_201: sum_19 [2/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 202>: 4.35ns
ST_202: sum_19 [1/9] 4.35ns
.preheader658:175  %sum_19 = fadd float %sum_18, %prod_19


 <State 203>: 4.35ns
ST_203: sum_20 [9/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 204>: 4.35ns
ST_204: sum_20 [8/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 205>: 4.35ns
ST_205: sum_20 [7/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 206>: 4.35ns
ST_206: sum_20 [6/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 207>: 4.35ns
ST_207: sum_20 [5/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 208>: 4.35ns
ST_208: sum_20 [4/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 209>: 4.35ns
ST_209: sum_20 [3/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 210>: 4.35ns
ST_210: sum_20 [2/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 211>: 4.35ns
ST_211: sum_20 [1/9] 4.35ns
.preheader658:179  %sum_20 = fadd float %sum_19, %prod_20


 <State 212>: 4.35ns
ST_212: sum_21 [9/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 213>: 4.35ns
ST_213: sum_21 [8/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 214>: 4.35ns
ST_214: sum_21 [7/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 215>: 4.35ns
ST_215: sum_21 [6/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 216>: 4.35ns
ST_216: sum_21 [5/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 217>: 4.35ns
ST_217: sum_21 [4/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 218>: 4.35ns
ST_218: sum_21 [3/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 219>: 4.35ns
ST_219: sum_21 [2/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 220>: 4.35ns
ST_220: sum_21 [1/9] 4.35ns
.preheader658:183  %sum_21 = fadd float %sum_20, %prod_21


 <State 221>: 4.35ns
ST_221: sum_22 [9/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 222>: 4.35ns
ST_222: sum_22 [8/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 223>: 4.35ns
ST_223: sum_22 [7/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 224>: 4.35ns
ST_224: sum_22 [6/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 225>: 4.35ns
ST_225: sum_22 [5/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 226>: 4.35ns
ST_226: sum_22 [4/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 227>: 4.35ns
ST_227: sum_22 [3/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 228>: 4.35ns
ST_228: sum_22 [2/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 229>: 4.35ns
ST_229: sum_22 [1/9] 4.35ns
.preheader658:187  %sum_22 = fadd float %sum_21, %prod_22


 <State 230>: 4.35ns
ST_230: sum_23 [9/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 231>: 4.35ns
ST_231: sum_23 [8/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 232>: 4.35ns
ST_232: sum_23 [7/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 233>: 4.35ns
ST_233: sum_23 [6/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 234>: 4.35ns
ST_234: sum_23 [5/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 235>: 4.35ns
ST_235: sum_23 [4/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 236>: 4.35ns
ST_236: sum_23 [3/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 237>: 4.35ns
ST_237: sum_23 [2/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 238>: 4.35ns
ST_238: sum_23 [1/9] 4.35ns
.preheader658:191  %sum_23 = fadd float %sum_22, %prod_23


 <State 239>: 4.35ns
ST_239: sum_24 [9/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 240>: 4.35ns
ST_240: sum_24 [8/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 241>: 4.35ns
ST_241: sum_24 [7/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 242>: 4.35ns
ST_242: sum_24 [6/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 243>: 4.35ns
ST_243: sum_24 [5/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 244>: 4.35ns
ST_244: sum_24 [4/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 245>: 4.35ns
ST_245: sum_24 [3/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 246>: 4.35ns
ST_246: sum_24 [2/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 247>: 4.35ns
ST_247: sum_24 [1/9] 4.35ns
.preheader658:195  %sum_24 = fadd float %sum_23, %prod_24


 <State 248>: 4.35ns
ST_248: sum_25 [9/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 249>: 4.35ns
ST_249: sum_25 [8/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 250>: 4.35ns
ST_250: sum_25 [7/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 251>: 4.35ns
ST_251: sum_25 [6/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 252>: 4.35ns
ST_252: sum_25 [5/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 253>: 4.35ns
ST_253: sum_25 [4/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 254>: 4.35ns
ST_254: sum_25 [3/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 255>: 4.35ns
ST_255: sum_25 [2/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 256>: 4.35ns
ST_256: sum_25 [1/9] 4.35ns
.preheader658:199  %sum_25 = fadd float %sum_24, %prod_25


 <State 257>: 4.35ns
ST_257: sum_26 [9/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 258>: 4.35ns
ST_258: sum_26 [8/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 259>: 4.35ns
ST_259: sum_26 [7/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 260>: 4.35ns
ST_260: sum_26 [6/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 261>: 4.35ns
ST_261: sum_26 [5/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 262>: 4.35ns
ST_262: sum_26 [4/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 263>: 4.35ns
ST_263: sum_26 [3/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 264>: 4.35ns
ST_264: sum_26 [2/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 265>: 4.35ns
ST_265: sum_26 [1/9] 4.35ns
.preheader658:203  %sum_26 = fadd float %sum_25, %prod_26


 <State 266>: 4.35ns
ST_266: sum_27 [9/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 267>: 4.35ns
ST_267: sum_27 [8/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 268>: 4.35ns
ST_268: sum_27 [7/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 269>: 4.35ns
ST_269: sum_27 [6/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 270>: 4.35ns
ST_270: sum_27 [5/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 271>: 4.35ns
ST_271: sum_27 [4/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 272>: 4.35ns
ST_272: sum_27 [3/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 273>: 4.35ns
ST_273: sum_27 [2/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 274>: 4.35ns
ST_274: sum_27 [1/9] 4.35ns
.preheader658:207  %sum_27 = fadd float %sum_26, %prod_27


 <State 275>: 4.35ns
ST_275: sum_28 [9/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 276>: 4.35ns
ST_276: sum_28 [8/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 277>: 4.35ns
ST_277: sum_28 [7/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 278>: 4.35ns
ST_278: sum_28 [6/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 279>: 4.35ns
ST_279: sum_28 [5/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 280>: 4.35ns
ST_280: sum_28 [4/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 281>: 4.35ns
ST_281: sum_28 [3/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 282>: 4.35ns
ST_282: sum_28 [2/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 283>: 4.35ns
ST_283: sum_28 [1/9] 4.35ns
.preheader658:211  %sum_28 = fadd float %sum_27, %prod_28


 <State 284>: 4.35ns
ST_284: sum_29 [9/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 285>: 4.35ns
ST_285: sum_29 [8/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 286>: 4.35ns
ST_286: sum_29 [7/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 287>: 4.35ns
ST_287: sum_29 [6/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 288>: 4.35ns
ST_288: sum_29 [5/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 289>: 4.35ns
ST_289: sum_29 [4/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 290>: 4.35ns
ST_290: sum_29 [3/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 291>: 4.35ns
ST_291: sum_29 [2/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 292>: 4.35ns
ST_292: sum_29 [1/9] 4.35ns
.preheader658:215  %sum_29 = fadd float %sum_28, %prod_29


 <State 293>: 4.35ns
ST_293: sum_30 [9/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 294>: 4.35ns
ST_294: sum_30 [8/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 295>: 4.35ns
ST_295: sum_30 [7/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 296>: 4.35ns
ST_296: sum_30 [6/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 297>: 4.35ns
ST_297: sum_30 [5/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 298>: 4.35ns
ST_298: sum_30 [4/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 299>: 4.35ns
ST_299: sum_30 [3/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 300>: 4.35ns
ST_300: sum_30 [2/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 301>: 4.35ns
ST_301: sum_30 [1/9] 4.35ns
.preheader658:219  %sum_30 = fadd float %sum_29, %prod_30


 <State 302>: 4.23ns
ST_302: empty_10 [1/1] 0.00ns
.preheader658:0  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_302: tmp_4 [1/1] 0.00ns
.preheader658:80  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2)

ST_302: stg_1178 [1/1] 0.00ns
.preheader658:81  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_302: tmp_10_trn_cast1 [1/1] 0.00ns
.preheader658:82  %tmp_10_trn_cast1 = zext i6 %j_0_i_mid2 to i12

ST_302: tmp_26 [1/1] 0.00ns
.preheader658:220  %tmp_26 = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %i_0_i_mid2, i5 0)

ST_302: p_addr8_cast [1/1] 0.00ns
.preheader658:221  %p_addr8_cast = zext i11 %tmp_26 to i12

ST_302: p_addr9 [1/1] 1.84ns
.preheader658:222  %p_addr9 = add i12 %p_addr8_cast, %tmp_10_trn_cast1

ST_302: tmp_27 [1/1] 0.00ns
.preheader658:223  %tmp_27 = zext i12 %p_addr9 to i64

ST_302: C_buf_addr_1 [1/1] 0.00ns
.preheader658:224  %C_buf_addr_1 = getelementptr [1024 x float]* %C_buf, i64 0, i64 %tmp_27

ST_302: stg_1185 [1/1] 2.39ns
.preheader658:225  store float %sum_30, float* %C_buf_addr_1, align 4

ST_302: empty_11 [1/1] 0.00ns
.preheader658:226  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp_4)

ST_302: stg_1187 [1/1] 0.00ns
.preheader658:228  br label %.preheader.i


 <State 303>: 5.20ns
ST_303: indvar_flatten2 [1/1] 0.00ns
mmult_kernel.exit.preheader:0  %indvar_flatten2 = phi i11 [ %indvar_flatten_next2, %mmult_kernel.exit ], [ 0, %.preheader.i ]

ST_303: indvars_iv [1/1] 0.00ns
mmult_kernel.exit.preheader:1  %indvars_iv = phi i11 [ %indvars_iv_mid2, %mmult_kernel.exit ], [ 32, %.preheader.i ]

ST_303: i1 [1/1] 0.00ns
mmult_kernel.exit.preheader:2  %i1 = phi i6 [ %i1_mid2, %mmult_kernel.exit ], [ 0, %.preheader.i ]

ST_303: k2 [1/1] 0.00ns
mmult_kernel.exit.preheader:3  %k2 = phi i11 [ %k2_mid2, %mmult_kernel.exit ], [ 0, %.preheader.i ]

ST_303: k2_1 [1/1] 0.00ns
mmult_kernel.exit.preheader:4  %k2_1 = phi i11 [ %tmp_14, %mmult_kernel.exit ], [ 0, %.preheader.i ]

ST_303: j3 [1/1] 0.00ns
mmult_kernel.exit.preheader:5  %j3 = phi i6 [ %j_2, %mmult_kernel.exit ], [ 0, %.preheader.i ]

ST_303: exitcond_flatten2 [1/1] 2.11ns
mmult_kernel.exit.preheader:6  %exitcond_flatten2 = icmp eq i11 %indvar_flatten2, -1024

ST_303: indvar_flatten_next2 [1/1] 1.84ns
mmult_kernel.exit.preheader:7  %indvar_flatten_next2 = add i11 %indvar_flatten2, 1

ST_303: stg_1196 [1/1] 0.00ns
mmult_kernel.exit.preheader:8  br i1 %exitcond_flatten2, label %4, label %mmult_kernel.exit

ST_303: k_3_dup [1/1] 1.84ns
mmult_kernel.exit:0  %k_3_dup = add i11 %k2, 32

ST_303: exitcond2 [1/1] 2.11ns
mmult_kernel.exit:2  %exitcond2 = icmp eq i11 %k2_1, %indvars_iv

ST_303: k2_1_mid2 [1/1] 1.37ns
mmult_kernel.exit:3  %k2_1_mid2 = select i1 %exitcond2, i11 %k_3_dup, i11 %k2_1

ST_303: j3_mid2 [1/1] 1.37ns
mmult_kernel.exit:4  %j3_mid2 = select i1 %exitcond2, i6 0, i6 %j3

ST_303: indvars_iv_next_dup [1/1] 1.84ns
mmult_kernel.exit:5  %indvars_iv_next_dup = add i11 %indvars_iv, 32

ST_303: indvars_iv_mid2 [1/1] 1.37ns
mmult_kernel.exit:6  %indvars_iv_mid2 = select i1 %exitcond2, i11 %indvars_iv_next_dup, i11 %indvars_iv

ST_303: i_2 [1/1] 1.72ns
mmult_kernel.exit:7  %i_2 = add i6 %i1, 1

ST_303: i1_mid2 [1/1] 1.37ns
mmult_kernel.exit:8  %i1_mid2 = select i1 %exitcond2, i6 %i_2, i6 %i1

ST_303: k2_mid2 [1/1] 1.37ns
mmult_kernel.exit:9  %k2_mid2 = select i1 %exitcond2, i11 %k_3_dup, i11 %k2

ST_303: j_2 [1/1] 1.72ns
mmult_kernel.exit:23  %j_2 = add i6 %j3_mid2, 1


 <State 304>: 4.23ns
ST_304: tmp_12_trn_cast [1/1] 0.00ns
mmult_kernel.exit:12  %tmp_12_trn_cast = zext i6 %j3_mid2 to i12

ST_304: tmp_28 [1/1] 0.00ns
mmult_kernel.exit:13  %tmp_28 = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %i1_mid2, i5 0)

ST_304: p_addr10_cast [1/1] 0.00ns
mmult_kernel.exit:14  %p_addr10_cast = zext i11 %tmp_28 to i12

ST_304: p_addr [1/1] 1.84ns
mmult_kernel.exit:15  %p_addr = add i12 %p_addr10_cast, %tmp_12_trn_cast

ST_304: tmp_29 [1/1] 0.00ns
mmult_kernel.exit:16  %tmp_29 = zext i12 %p_addr to i64

ST_304: C_buf_addr [1/1] 0.00ns
mmult_kernel.exit:17  %C_buf_addr = getelementptr [1024 x float]* %C_buf, i64 0, i64 %tmp_29

ST_304: C_buf_load [2/2] 2.39ns
mmult_kernel.exit:18  %C_buf_load = load float* %C_buf_addr, align 4

ST_304: tmp_13 [1/1] 2.11ns
mmult_kernel.exit:20  %tmp_13 = icmp eq i11 %k2_1_mid2, 1023

ST_304: tmp_14 [1/1] 1.84ns
mmult_kernel.exit:24  %tmp_14 = add i11 %k2_1_mid2, 1


 <State 305>: 2.39ns
ST_305: empty_12 [1/1] 0.00ns
mmult_kernel.exit:1  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)

ST_305: tmp_11 [1/1] 0.00ns
mmult_kernel.exit:10  %tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)

ST_305: stg_1218 [1/1] 0.00ns
mmult_kernel.exit:11  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_305: C_buf_load [1/2] 2.39ns
mmult_kernel.exit:18  %C_buf_load = load float* %C_buf_addr, align 4

ST_305: val_assign [1/1] 0.00ns
mmult_kernel.exit:19  %val_assign = bitcast float %C_buf_load to i32

ST_305: stg_1221 [1/1] 0.00ns
mmult_kernel.exit:21  call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %C_data_V, i4* %C_keep_V, i4* %C_strb_V, i1* %C_user_V, i1* %C_last_V, i1* %C_id_V, i1* %C_dest_V, i32 %val_assign, i4 -1, i4 1, i1 false, i1 %tmp_13, i1 false, i1 false)

ST_305: empty_13 [1/1] 0.00ns
mmult_kernel.exit:22  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_11)

ST_305: stg_1223 [1/1] 0.00ns
mmult_kernel.exit:25  br label %mmult_kernel.exit.preheader


 <State 306>: 0.00ns
ST_306: stg_1224 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173
	State 174
	State 175
	State 176
	State 177
	State 178
	State 179
	State 180
	State 181
	State 182
	State 183
	State 184
	State 185
	State 186
	State 187
	State 188
	State 189
	State 190
	State 191
	State 192
	State 193
	State 194
	State 195
	State 196
	State 197
	State 198
	State 199
	State 200
	State 201
	State 202
	State 203
	State 204
	State 205
	State 206
	State 207
	State 208
	State 209
	State 210
	State 211
	State 212
	State 213
	State 214
	State 215
	State 216
	State 217
	State 218
	State 219
	State 220
	State 221
	State 222
	State 223
	State 224
	State 225
	State 226
	State 227
	State 228
	State 229
	State 230
	State 231
	State 232
	State 233
	State 234
	State 235
	State 236
	State 237
	State 238
	State 239
	State 240
	State 241
	State 242
	State 243
	State 244
	State 245
	State 246
	State 247
	State 248
	State 249
	State 250
	State 251
	State 252
	State 253
	State 254
	State 255
	State 256
	State 257
	State 258
	State 259
	State 260
	State 261
	State 262
	State 263
	State 264
	State 265
	State 266
	State 267
	State 268
	State 269
	State 270
	State 271
	State 272
	State 273
	State 274
	State 275
	State 276
	State 277
	State 278
	State 279
	State 280
	State 281
	State 282
	State 283
	State 284
	State 285
	State 286
	State 287
	State 288
	State 289
	State 290
	State 291
	State 292
	State 293
	State 294
	State 295
	State 296
	State 297
	State 298
	State 299
	State 300
	State 301
	State 302
	State 303
	State 304
	State 305
	State 306


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
