// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module correlation_accel_v4_midEnd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        NUMBER_OF_DAYS_dout,
        NUMBER_OF_DAYS_empty_n,
        NUMBER_OF_DAYS_read,
        NUMBER_OF_INDICES_dout,
        NUMBER_OF_INDICES_empty_n,
        NUMBER_OF_INDICES_read,
        ln_returnA_in_V_dout,
        ln_returnA_in_V_empty_n,
        ln_returnA_in_V_read,
        weight_returnSquareA_in_V_dout,
        weight_returnSquareA_in_V_empty_n,
        weight_returnSquareA_in_V_read,
        weight_returnA_in_V_dout,
        weight_returnA_in_V_empty_n,
        weight_returnA_in_V_read,
        sum_weight_in_V_dout,
        sum_weight_in_V_empty_n,
        sum_weight_in_V_read,
        ln_returnB_in_V_dout,
        ln_returnB_in_V_empty_n,
        ln_returnB_in_V_read,
        weight_returnSquareB_in_V_dout,
        weight_returnSquareB_in_V_empty_n,
        weight_returnSquareB_in_V_read,
        weight_returnB_in_V_dout,
        weight_returnB_in_V_empty_n,
        weight_returnB_in_V_read,
        weight_returnA_returnB_in_V_dout,
        weight_returnA_returnB_in_V_empty_n,
        weight_returnA_returnB_in_V_read,
        sum_weight_out_V_din,
        sum_weight_out_V_full_n,
        sum_weight_out_V_write,
        sum_return_out_V_din,
        sum_return_out_V_full_n,
        sum_return_out_V_write,
        sum_weight_returnSquare_out_V_din,
        sum_weight_returnSquare_out_V_full_n,
        sum_weight_returnSquare_out_V_write,
        sum_weight_return_out_V_din,
        sum_weight_return_out_V_full_n,
        sum_weight_return_out_V_write,
        sum_weight_returnA_returnB_out_din,
        sum_weight_returnA_returnB_out_full_n,
        sum_weight_returnA_returnB_out_write,
        sum_returnA_out_V_din,
        sum_returnA_out_V_full_n,
        sum_returnA_out_V_write,
        sum_weight_returnSquareA_out_V_din,
        sum_weight_returnSquareA_out_V_full_n,
        sum_weight_returnSquareA_out_V_write,
        sum_weight_returnA_out_V_din,
        sum_weight_returnA_out_V_full_n,
        sum_weight_returnA_out_V_write,
        NUMBER_OF_DAYS_out_din,
        NUMBER_OF_DAYS_out_full_n,
        NUMBER_OF_DAYS_out_write,
        NUMBER_OF_INDICES_out_din,
        NUMBER_OF_INDICES_out_full_n,
        NUMBER_OF_INDICES_out_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 12'b1;
parameter    ap_ST_st2_fsm_1 = 12'b10;
parameter    ap_ST_st3_fsm_2 = 12'b100;
parameter    ap_ST_st4_fsm_3 = 12'b1000;
parameter    ap_ST_st5_fsm_4 = 12'b10000;
parameter    ap_ST_pp0_stg0_fsm_5 = 12'b100000;
parameter    ap_ST_pp1_stg0_fsm_6 = 12'b1000000;
parameter    ap_ST_pp1_stg1_fsm_7 = 12'b10000000;
parameter    ap_ST_pp1_stg2_fsm_8 = 12'b100000000;
parameter    ap_ST_pp1_stg3_fsm_9 = 12'b1000000000;
parameter    ap_ST_pp1_stg4_fsm_10 = 12'b10000000000;
parameter    ap_ST_st57_fsm_11 = 12'b100000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] NUMBER_OF_DAYS_dout;
input   NUMBER_OF_DAYS_empty_n;
output   NUMBER_OF_DAYS_read;
input  [31:0] NUMBER_OF_INDICES_dout;
input   NUMBER_OF_INDICES_empty_n;
output   NUMBER_OF_INDICES_read;
input  [31:0] ln_returnA_in_V_dout;
input   ln_returnA_in_V_empty_n;
output   ln_returnA_in_V_read;
input  [31:0] weight_returnSquareA_in_V_dout;
input   weight_returnSquareA_in_V_empty_n;
output   weight_returnSquareA_in_V_read;
input  [31:0] weight_returnA_in_V_dout;
input   weight_returnA_in_V_empty_n;
output   weight_returnA_in_V_read;
input  [31:0] sum_weight_in_V_dout;
input   sum_weight_in_V_empty_n;
output   sum_weight_in_V_read;
input  [31:0] ln_returnB_in_V_dout;
input   ln_returnB_in_V_empty_n;
output   ln_returnB_in_V_read;
input  [31:0] weight_returnSquareB_in_V_dout;
input   weight_returnSquareB_in_V_empty_n;
output   weight_returnSquareB_in_V_read;
input  [31:0] weight_returnB_in_V_dout;
input   weight_returnB_in_V_empty_n;
output   weight_returnB_in_V_read;
input  [31:0] weight_returnA_returnB_in_V_dout;
input   weight_returnA_returnB_in_V_empty_n;
output   weight_returnA_returnB_in_V_read;
output  [31:0] sum_weight_out_V_din;
input   sum_weight_out_V_full_n;
output   sum_weight_out_V_write;
output  [31:0] sum_return_out_V_din;
input   sum_return_out_V_full_n;
output   sum_return_out_V_write;
output  [31:0] sum_weight_returnSquare_out_V_din;
input   sum_weight_returnSquare_out_V_full_n;
output   sum_weight_returnSquare_out_V_write;
output  [31:0] sum_weight_return_out_V_din;
input   sum_weight_return_out_V_full_n;
output   sum_weight_return_out_V_write;
output  [31:0] sum_weight_returnA_returnB_out_din;
input   sum_weight_returnA_returnB_out_full_n;
output   sum_weight_returnA_returnB_out_write;
output  [31:0] sum_returnA_out_V_din;
input   sum_returnA_out_V_full_n;
output   sum_returnA_out_V_write;
output  [31:0] sum_weight_returnSquareA_out_V_din;
input   sum_weight_returnSquareA_out_V_full_n;
output   sum_weight_returnSquareA_out_V_write;
output  [31:0] sum_weight_returnA_out_V_din;
input   sum_weight_returnA_out_V_full_n;
output   sum_weight_returnA_out_V_write;
output  [31:0] NUMBER_OF_DAYS_out_din;
input   NUMBER_OF_DAYS_out_full_n;
output   NUMBER_OF_DAYS_out_write;
output  [31:0] NUMBER_OF_INDICES_out_din;
input   NUMBER_OF_INDICES_out_full_n;
output   NUMBER_OF_INDICES_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg NUMBER_OF_DAYS_read;
reg NUMBER_OF_INDICES_read;
reg ln_returnA_in_V_read;
reg weight_returnSquareA_in_V_read;
reg weight_returnA_in_V_read;
reg sum_weight_in_V_read;
reg ln_returnB_in_V_read;
reg weight_returnSquareB_in_V_read;
reg weight_returnB_in_V_read;
reg weight_returnA_returnB_in_V_read;
reg sum_weight_out_V_write;
reg sum_return_out_V_write;
reg sum_weight_returnSquare_out_V_write;
reg sum_weight_return_out_V_write;
reg sum_weight_returnA_returnB_out_write;
reg sum_returnA_out_V_write;
reg sum_weight_returnSquareA_out_V_write;
reg sum_weight_returnA_out_V_write;
reg NUMBER_OF_DAYS_out_write;
reg NUMBER_OF_INDICES_out_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm = 12'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_31;
reg   [31:0] tmp_9_reg_807;
reg   [31:0] i1_i_reg_820;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_5;
reg    ap_sig_bdd_128;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg   [0:0] tmp_9_i_reg_1384;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34;
reg    ap_sig_bdd_227;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg    ap_reg_ppiten_pp0_it37 = 1'b0;
reg    ap_reg_ppiten_pp0_it38 = 1'b0;
reg    ap_reg_ppiten_pp0_it39 = 1'b0;
reg    ap_reg_ppiten_pp0_it40 = 1'b0;
reg   [31:0] tmp_2_reg_832;
reg   [31:0] tmp_3_reg_845;
reg   [31:0] tmp_4_reg_858;
reg   [31:0] tmp_5_reg_871;
reg   [31:0] tmp_6_reg_884;
reg   [31:0] tmp_7_reg_897;
reg   [31:0] tmp_8_reg_910;
reg   [2:0] i2_i_reg_923;
wire   [31:0] acc_returnA_q0;
reg   [31:0] reg_984;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35;
reg    ap_sig_cseq_ST_pp1_stg1_fsm_7;
reg    ap_sig_bdd_306;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg   [0:0] exitcond_i_reg_1475;
wire   [31:0] acc_weight_returnSquareA_q0;
reg   [31:0] reg_990;
wire   [31:0] acc_weight_returnA_q0;
reg   [31:0] reg_996;
reg    ap_sig_cseq_ST_pp1_stg2_fsm_8;
reg    ap_sig_bdd_333;
wire   [31:0] acc_returnB_q0;
reg   [31:0] reg_1002;
wire   [31:0] acc_weight_returnSquareB_q0;
reg   [31:0] reg_1008;
reg    ap_sig_cseq_ST_pp1_stg3_fsm_9;
reg    ap_sig_bdd_354;
wire   [31:0] acc_weight_returnB_q0;
reg   [31:0] reg_1014;
wire   [31:0] acc_weight_returnA_returnB_q0;
reg   [31:0] reg_1020;
reg   [31:0] NUMBER_OF_DAYS_read_reg_1141;
reg    ap_sig_bdd_384;
reg   [0:0] tmp_reg_1146;
reg   [30:0] p_lshr_i_reg_1151;
reg   [30:0] p_lshr_f_i_reg_1156;
wire   [31:0] upper_bound_fu_1072_p3;
reg   [31:0] upper_bound_reg_1161;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_400;
wire   [31:0] tmp_i_fu_1079_p2;
reg   [31:0] tmp_i_reg_1166;
wire   [2:0] acc_returnB_addr_gep_fu_340_p3;
reg   [2:0] acc_returnB_addr_reg_1171;
wire   [2:0] acc_weight_returnSquareB_addr_gep_fu_347_p3;
reg   [2:0] acc_weight_returnSquareB_addr_reg_1176;
wire   [2:0] acc_weight_returnB_addr_gep_fu_354_p3;
reg   [2:0] acc_weight_returnB_addr_reg_1181;
wire   [2:0] acc_weight_returnA_returnB_add_gep_fu_361_p3;
reg   [2:0] acc_weight_returnA_returnB_add_reg_1186;
wire   [2:0] acc_returnA_addr_gep_fu_368_p3;
reg   [2:0] acc_returnA_addr_reg_1191;
wire   [2:0] acc_weight_returnSquareA_addr_gep_fu_375_p3;
reg   [2:0] acc_weight_returnSquareA_addr_reg_1196;
wire   [2:0] acc_weight_returnA_addr_gep_fu_382_p3;
reg   [2:0] acc_weight_returnA_addr_reg_1201;
wire   [2:0] acc_returnB_addr_1_gep_fu_389_p3;
reg   [2:0] acc_returnB_addr_1_reg_1206;
wire   [2:0] acc_weight_returnSquareB_addr_1_gep_fu_396_p3;
reg   [2:0] acc_weight_returnSquareB_addr_1_reg_1211;
wire   [2:0] acc_weight_returnB_addr_1_gep_fu_403_p3;
reg   [2:0] acc_weight_returnB_addr_1_reg_1216;
wire   [2:0] acc_weight_returnA_returnB_add_1_gep_fu_410_p3;
reg   [2:0] acc_weight_returnA_returnB_add_1_reg_1221;
wire   [2:0] acc_returnA_addr_1_gep_fu_417_p3;
reg   [2:0] acc_returnA_addr_1_reg_1226;
wire   [2:0] acc_weight_returnSquareA_addr_1_gep_fu_424_p3;
reg   [2:0] acc_weight_returnSquareA_addr_1_reg_1231;
wire   [2:0] acc_weight_returnA_addr_1_gep_fu_431_p3;
reg   [2:0] acc_weight_returnA_addr_1_reg_1236;
wire   [2:0] acc_returnB_addr_2_gep_fu_438_p3;
reg   [2:0] acc_returnB_addr_2_reg_1241;
wire   [2:0] acc_weight_returnSquareB_addr_2_gep_fu_445_p3;
reg   [2:0] acc_weight_returnSquareB_addr_2_reg_1246;
wire   [2:0] acc_weight_returnB_addr_2_gep_fu_452_p3;
reg   [2:0] acc_weight_returnB_addr_2_reg_1251;
wire   [2:0] acc_weight_returnA_returnB_add_2_gep_fu_459_p3;
reg   [2:0] acc_weight_returnA_returnB_add_2_reg_1256;
wire   [2:0] acc_returnA_addr_2_gep_fu_466_p3;
reg   [2:0] acc_returnA_addr_2_reg_1261;
wire   [2:0] acc_weight_returnSquareA_addr_2_gep_fu_473_p3;
reg   [2:0] acc_weight_returnSquareA_addr_2_reg_1266;
wire   [2:0] acc_weight_returnA_addr_2_gep_fu_480_p3;
reg   [2:0] acc_weight_returnA_addr_2_reg_1271;
wire   [2:0] acc_returnB_addr_3_gep_fu_487_p3;
reg   [2:0] acc_returnB_addr_3_reg_1276;
wire   [2:0] acc_weight_returnSquareB_addr_3_gep_fu_494_p3;
reg   [2:0] acc_weight_returnSquareB_addr_3_reg_1281;
wire   [2:0] acc_weight_returnB_addr_3_gep_fu_501_p3;
reg   [2:0] acc_weight_returnB_addr_3_reg_1286;
wire   [2:0] acc_weight_returnA_returnB_add_3_gep_fu_508_p3;
reg   [2:0] acc_weight_returnA_returnB_add_3_reg_1291;
wire   [2:0] acc_returnA_addr_3_gep_fu_515_p3;
reg   [2:0] acc_returnA_addr_3_reg_1296;
wire   [2:0] acc_weight_returnSquareA_addr_3_gep_fu_522_p3;
reg   [2:0] acc_weight_returnSquareA_addr_3_reg_1301;
wire   [2:0] acc_weight_returnA_addr_3_gep_fu_529_p3;
reg   [2:0] acc_weight_returnA_addr_3_reg_1306;
wire   [2:0] acc_returnB_addr_4_gep_fu_536_p3;
reg   [2:0] acc_returnB_addr_4_reg_1311;
wire   [2:0] acc_weight_returnSquareB_addr_4_gep_fu_543_p3;
reg   [2:0] acc_weight_returnSquareB_addr_4_reg_1316;
wire   [2:0] acc_weight_returnB_addr_4_gep_fu_550_p3;
reg   [2:0] acc_weight_returnB_addr_4_reg_1321;
wire   [2:0] acc_weight_returnA_returnB_add_4_gep_fu_557_p3;
reg   [2:0] acc_weight_returnA_returnB_add_4_reg_1326;
wire   [2:0] acc_returnA_addr_4_gep_fu_564_p3;
reg   [2:0] acc_returnA_addr_4_reg_1331;
wire   [2:0] acc_weight_returnSquareA_addr_4_gep_fu_571_p3;
reg   [2:0] acc_weight_returnSquareA_addr_4_reg_1336;
wire   [2:0] acc_weight_returnA_addr_4_gep_fu_578_p3;
reg   [2:0] acc_weight_returnA_addr_4_reg_1341;
wire   [2:0] acc_returnB_addr_5_gep_fu_585_p3;
reg   [2:0] acc_returnB_addr_5_reg_1346;
wire   [2:0] acc_weight_returnSquareB_addr_5_gep_fu_592_p3;
reg   [2:0] acc_weight_returnSquareB_addr_5_reg_1351;
wire   [2:0] acc_weight_returnB_addr_5_gep_fu_599_p3;
reg   [2:0] acc_weight_returnB_addr_5_reg_1356;
wire   [2:0] acc_weight_returnA_returnB_add_5_gep_fu_606_p3;
reg   [2:0] acc_weight_returnA_returnB_add_5_reg_1361;
wire   [2:0] acc_returnA_addr_5_gep_fu_613_p3;
reg   [2:0] acc_returnA_addr_5_reg_1366;
wire   [2:0] acc_weight_returnSquareA_addr_5_gep_fu_620_p3;
reg   [2:0] acc_weight_returnSquareA_addr_5_reg_1371;
wire   [2:0] acc_weight_returnA_addr_5_gep_fu_627_p3;
reg   [2:0] acc_weight_returnA_addr_5_reg_1376;
wire   [0:0] tmp_9_i_fu_1089_p2;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it13;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it14;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it15;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it16;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it17;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it18;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it19;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it20;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it21;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it22;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it23;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it24;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it25;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it26;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it27;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it28;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it29;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it30;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it31;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it32;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it33;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38;
reg   [0:0] ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39;
wire   [31:0] i_fu_1100_p2;
reg   [31:0] i_reg_1388;
reg   [31:0] tmp_18_reg_1393;
reg   [31:0] ap_reg_ppstg_tmp_18_reg_1393_pp0_it36;
reg   [31:0] ap_reg_ppstg_tmp_18_reg_1393_pp0_it37;
reg   [31:0] ap_reg_ppstg_tmp_18_reg_1393_pp0_it38;
reg   [31:0] ap_reg_ppstg_tmp_18_reg_1393_pp0_it39;
reg   [31:0] tmp_19_reg_1398;
reg   [31:0] tmp_20_reg_1403;
reg   [31:0] tmp_21_reg_1408;
reg   [31:0] tmp_22_reg_1413;
reg   [31:0] tmp_23_reg_1418;
reg   [31:0] tmp_24_reg_1423;
reg   [31:0] tmp_25_reg_1428;
reg   [2:0] acc_returnA_addr_6_reg_1433;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it36;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it37;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it38;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it39;
reg   [2:0] acc_weight_returnSquareA_addr_6_reg_1439;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it39;
reg   [2:0] acc_weight_returnA_addr_6_reg_1445;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it39;
reg   [2:0] acc_returnB_addr_6_reg_1451;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it36;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it37;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it38;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it39;
reg   [2:0] acc_weight_returnSquareB_addr_6_reg_1457;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it39;
reg   [2:0] acc_weight_returnB_addr_6_reg_1463;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it39;
reg   [2:0] acc_weight_returnA_returnB_add_6_reg_1469;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it36;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it37;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it38;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it39;
wire   [0:0] exitcond_i_fu_1117_p2;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_6;
reg    ap_sig_bdd_647;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1;
wire   [2:0] i_1_fu_1123_p2;
reg   [2:0] i_1_reg_1479;
wire   [63:0] tmp_43_i_fu_1129_p1;
reg   [63:0] tmp_43_i_reg_1484;
wire   [31:0] grp_fu_935_p2;
reg   [31:0] sum_returnA_reg_1528;
wire   [31:0] grp_fu_941_p2;
reg   [31:0] sum_weight_returnSquareA_reg_1533;
reg   [31:0] sum_weight_returnA_reg_1538;
reg   [31:0] sum_returnB_reg_1543;
reg   [31:0] sum_weight_returnSquareB_reg_1548;
reg   [31:0] sum_weight_returnB_reg_1553;
reg    ap_sig_cseq_ST_pp1_stg4_fsm_10;
reg    ap_sig_bdd_693;
wire   [31:0] column_index_fu_1135_p2;
reg    ap_sig_cseq_ST_st57_fsm_11;
reg    ap_sig_bdd_704;
reg    ap_sig_bdd_721;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_729;
reg   [2:0] acc_returnA_address0;
reg    acc_returnA_ce0;
reg    acc_returnA_we0;
wire   [31:0] acc_returnA_d0;
reg   [2:0] acc_returnA_address1;
reg    acc_returnA_ce1;
reg    acc_returnA_we1;
reg   [31:0] acc_returnA_d1;
reg   [2:0] acc_weight_returnSquareA_address0;
reg    acc_weight_returnSquareA_ce0;
reg    acc_weight_returnSquareA_we0;
wire   [31:0] acc_weight_returnSquareA_d0;
reg   [2:0] acc_weight_returnSquareA_address1;
reg    acc_weight_returnSquareA_ce1;
reg    acc_weight_returnSquareA_we1;
reg   [31:0] acc_weight_returnSquareA_d1;
reg   [2:0] acc_weight_returnA_address0;
reg    acc_weight_returnA_ce0;
reg    acc_weight_returnA_we0;
wire   [31:0] acc_weight_returnA_d0;
reg   [2:0] acc_weight_returnA_address1;
reg    acc_weight_returnA_ce1;
reg    acc_weight_returnA_we1;
reg   [31:0] acc_weight_returnA_d1;
reg   [2:0] acc_returnB_address0;
reg    acc_returnB_ce0;
reg    acc_returnB_we0;
wire   [31:0] acc_returnB_d0;
reg   [2:0] acc_returnB_address1;
reg    acc_returnB_ce1;
reg    acc_returnB_we1;
reg   [31:0] acc_returnB_d1;
reg   [2:0] acc_weight_returnSquareB_address0;
reg    acc_weight_returnSquareB_ce0;
reg    acc_weight_returnSquareB_we0;
wire   [31:0] acc_weight_returnSquareB_d0;
reg   [2:0] acc_weight_returnSquareB_address1;
reg    acc_weight_returnSquareB_ce1;
reg    acc_weight_returnSquareB_we1;
reg   [31:0] acc_weight_returnSquareB_d1;
reg   [2:0] acc_weight_returnB_address0;
reg    acc_weight_returnB_ce0;
reg    acc_weight_returnB_we0;
wire   [31:0] acc_weight_returnB_d0;
reg   [2:0] acc_weight_returnB_address1;
reg    acc_weight_returnB_ce1;
reg    acc_weight_returnB_we1;
reg   [31:0] acc_weight_returnB_d1;
reg   [2:0] acc_weight_returnA_returnB_address0;
reg    acc_weight_returnA_returnB_ce0;
reg    acc_weight_returnA_returnB_we0;
wire   [31:0] acc_weight_returnA_returnB_d0;
reg   [2:0] acc_weight_returnA_returnB_address1;
reg    acc_weight_returnA_returnB_ce1;
reg    acc_weight_returnA_returnB_we1;
reg   [31:0] acc_weight_returnA_returnB_d1;
reg   [31:0] column_index_i_reg_795;
reg   [31:0] i1_i_phi_fu_824_p4;
reg   [31:0] tmp_3_phi_fu_850_p4;
reg   [31:0] tmp_4_phi_fu_863_p4;
reg   [31:0] tmp_5_phi_fu_876_p4;
reg   [31:0] tmp_6_phi_fu_889_p4;
reg   [31:0] tmp_7_phi_fu_902_p4;
reg   [31:0] tmp_8_phi_fu_915_p4;
reg   [2:0] i2_i_phi_fu_927_p4;
wire   [63:0] tmp_26_i_fu_1106_p1;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_889;
wire   [0:0] tmp_1_i_fu_1084_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_899;
wire   [31:0] grp_fu_953_p2;
wire   [31:0] grp_fu_959_p2;
wire   [31:0] grp_fu_965_p2;
wire   [31:0] grp_fu_971_p2;
wire   [31:0] grp_fu_947_p2;
reg   [31:0] grp_fu_935_p0;
reg   [31:0] grp_fu_935_p1;
reg   [31:0] grp_fu_941_p0;
reg   [31:0] grp_fu_941_p1;
wire   [31:0] grp_fu_947_p0;
wire   [31:0] grp_fu_947_p1;
wire   [31:0] grp_fu_953_p0;
wire   [31:0] grp_fu_953_p1;
wire   [31:0] grp_fu_959_p0;
wire   [31:0] grp_fu_959_p1;
wire   [31:0] grp_fu_965_p0;
wire   [31:0] grp_fu_965_p1;
wire   [31:0] grp_fu_971_p0;
wire   [31:0] grp_fu_971_p1;
wire   [31:0] p_neg_i_fu_1034_p2;
wire   [31:0] tmp_s_fu_1060_p1;
wire   [31:0] p_neg_t_i_fu_1063_p2;
wire   [31:0] tmp_1_fu_1069_p1;
wire   [31:0] grp_fu_1094_p0;
wire   [3:0] grp_fu_1094_p1;
wire   [31:0] grp_fu_1094_p2;
reg    grp_fu_935_ce;
reg    grp_fu_941_ce;
reg    grp_fu_947_ce;
reg    grp_fu_953_ce;
reg    grp_fu_959_ce;
reg    grp_fu_965_ce;
reg    grp_fu_971_ce;
reg    grp_fu_1094_ce;
reg   [11:0] ap_NS_fsm;


correlation_accel_v4_midEnd_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( acc_returnA_address0 ),
    .ce0( acc_returnA_ce0 ),
    .we0( acc_returnA_we0 ),
    .d0( acc_returnA_d0 ),
    .q0( acc_returnA_q0 ),
    .address1( acc_returnA_address1 ),
    .ce1( acc_returnA_ce1 ),
    .we1( acc_returnA_we1 ),
    .d1( acc_returnA_d1 )
);

correlation_accel_v4_midEnd_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareA_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( acc_weight_returnSquareA_address0 ),
    .ce0( acc_weight_returnSquareA_ce0 ),
    .we0( acc_weight_returnSquareA_we0 ),
    .d0( acc_weight_returnSquareA_d0 ),
    .q0( acc_weight_returnSquareA_q0 ),
    .address1( acc_weight_returnSquareA_address1 ),
    .ce1( acc_weight_returnSquareA_ce1 ),
    .we1( acc_weight_returnSquareA_we1 ),
    .d1( acc_weight_returnSquareA_d1 )
);

correlation_accel_v4_midEnd_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( acc_weight_returnA_address0 ),
    .ce0( acc_weight_returnA_ce0 ),
    .we0( acc_weight_returnA_we0 ),
    .d0( acc_weight_returnA_d0 ),
    .q0( acc_weight_returnA_q0 ),
    .address1( acc_weight_returnA_address1 ),
    .ce1( acc_weight_returnA_ce1 ),
    .we1( acc_weight_returnA_we1 ),
    .d1( acc_weight_returnA_d1 )
);

correlation_accel_v4_midEnd_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( acc_returnB_address0 ),
    .ce0( acc_returnB_ce0 ),
    .we0( acc_returnB_we0 ),
    .d0( acc_returnB_d0 ),
    .q0( acc_returnB_q0 ),
    .address1( acc_returnB_address1 ),
    .ce1( acc_returnB_ce1 ),
    .we1( acc_returnB_we1 ),
    .d1( acc_returnB_d1 )
);

correlation_accel_v4_midEnd_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareB_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( acc_weight_returnSquareB_address0 ),
    .ce0( acc_weight_returnSquareB_ce0 ),
    .we0( acc_weight_returnSquareB_we0 ),
    .d0( acc_weight_returnSquareB_d0 ),
    .q0( acc_weight_returnSquareB_q0 ),
    .address1( acc_weight_returnSquareB_address1 ),
    .ce1( acc_weight_returnSquareB_ce1 ),
    .we1( acc_weight_returnSquareB_we1 ),
    .d1( acc_weight_returnSquareB_d1 )
);

correlation_accel_v4_midEnd_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( acc_weight_returnB_address0 ),
    .ce0( acc_weight_returnB_ce0 ),
    .we0( acc_weight_returnB_we0 ),
    .d0( acc_weight_returnB_d0 ),
    .q0( acc_weight_returnB_q0 ),
    .address1( acc_weight_returnB_address1 ),
    .ce1( acc_weight_returnB_ce1 ),
    .we1( acc_weight_returnB_we1 ),
    .d1( acc_weight_returnB_d1 )
);

correlation_accel_v4_midEnd_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( acc_weight_returnA_returnB_address0 ),
    .ce0( acc_weight_returnA_returnB_ce0 ),
    .we0( acc_weight_returnA_returnB_we0 ),
    .d0( acc_weight_returnA_returnB_d0 ),
    .q0( acc_weight_returnA_returnB_q0 ),
    .address1( acc_weight_returnA_returnB_address1 ),
    .ce1( acc_weight_returnA_returnB_ce1 ),
    .we1( acc_weight_returnA_returnB_we1 ),
    .d1( acc_weight_returnA_returnB_d1 )
);

correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U43(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_935_p0 ),
    .din1( grp_fu_935_p1 ),
    .ce( grp_fu_935_ce ),
    .dout( grp_fu_935_p2 )
);

correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U44(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_941_p0 ),
    .din1( grp_fu_941_p1 ),
    .ce( grp_fu_941_ce ),
    .dout( grp_fu_941_p2 )
);

correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U45(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_947_p0 ),
    .din1( grp_fu_947_p1 ),
    .ce( grp_fu_947_ce ),
    .dout( grp_fu_947_p2 )
);

correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U46(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_953_p0 ),
    .din1( grp_fu_953_p1 ),
    .ce( grp_fu_953_ce ),
    .dout( grp_fu_953_p2 )
);

correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U47(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_959_p0 ),
    .din1( grp_fu_959_p1 ),
    .ce( grp_fu_959_ce ),
    .dout( grp_fu_959_p2 )
);

correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U48(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_965_p0 ),
    .din1( grp_fu_965_p1 ),
    .ce( grp_fu_965_ce ),
    .dout( grp_fu_965_p2 )
);

correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U49(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_971_p0 ),
    .din1( grp_fu_971_p1 ),
    .ce( grp_fu_971_ce ),
    .dout( grp_fu_971_p2 )
);

correlation_accel_v4_srem_32ns_4ns_32_36 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_srem_32ns_4ns_32_36_U50(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1094_p0 ),
    .din1( grp_fu_1094_p1 ),
    .ce( grp_fu_1094_ce ),
    .dout( grp_fu_1094_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_1_i_fu_1084_p2))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end
    end
end

/// ap_reg_ppiten_pp0_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
        end
    end
end

/// ap_reg_ppiten_pp0_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
        end
    end
end

/// ap_reg_ppiten_pp0_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
        end
    end
end

/// ap_reg_ppiten_pp0_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
        end
    end
end

/// ap_reg_ppiten_pp0_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
        end
    end
end

/// ap_reg_ppiten_pp0_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
        end
    end
end

/// ap_reg_ppiten_pp0_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
        end
    end
end

/// ap_reg_ppiten_pp0_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
        end
    end
end

/// ap_reg_ppiten_pp0_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
        end
    end
end

/// ap_reg_ppiten_pp0_it37 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it37
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
        end
    end
end

/// ap_reg_ppiten_pp0_it38 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it38
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
        end
    end
end

/// ap_reg_ppiten_pp0_it39 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it39
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it40 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it40
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6) & ~(ap_const_lv1_0 == exitcond_i_fu_1117_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_lv1_0 == exitcond_i_reg_1475) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10) & ~(ap_const_lv1_0 == exitcond_i_reg_1475)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        column_index_i_reg_795 <= column_index_fu_1135_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        column_index_i_reg_795 <= ap_const_lv32_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i1_i_reg_820 <= ap_const_lv32_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (tmp_9_i_reg_1384 == ap_const_lv1_0))) begin
        i1_i_reg_820 <= i_reg_1388;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        i2_i_reg_923 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_i_reg_1475) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6))) begin
        i2_i_reg_923 <= i_1_reg_1479;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        tmp_2_reg_832 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        tmp_2_reg_832 <= grp_fu_935_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        tmp_3_reg_845 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        tmp_3_reg_845 <= sum_weight_returnB_reg_1553;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        tmp_4_reg_858 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        tmp_4_reg_858 <= sum_weight_returnSquareB_reg_1548;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        tmp_5_reg_871 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_5_reg_871 <= sum_returnB_reg_1543;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        tmp_6_reg_884 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_6_reg_884 <= sum_weight_returnA_reg_1538;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        tmp_7_reg_897 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_7_reg_897 <= sum_weight_returnSquareA_reg_1533;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        tmp_8_reg_910 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_8_reg_910 <= sum_returnA_reg_1528;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_9_reg_807 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39))) begin
        tmp_9_reg_807 <= ap_reg_ppstg_tmp_18_reg_1393_pp0_it39;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_384)) begin
        NUMBER_OF_DAYS_read_reg_1141 <= NUMBER_OF_DAYS_dout;
        p_lshr_f_i_reg_1156 <= {{NUMBER_OF_INDICES_dout[ap_const_lv32_1F : ap_const_lv32_1]}};
        p_lshr_i_reg_1151 <= {{p_neg_i_fu_1034_p2[ap_const_lv32_1F : ap_const_lv32_1]}};
        tmp_reg_1146 <= NUMBER_OF_INDICES_dout[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        acc_returnA_addr_6_reg_1433 <= tmp_26_i_fu_1106_p1;
        acc_returnB_addr_6_reg_1451 <= tmp_26_i_fu_1106_p1;
        acc_weight_returnA_addr_6_reg_1445 <= tmp_26_i_fu_1106_p1;
        acc_weight_returnA_returnB_add_6_reg_1469 <= tmp_26_i_fu_1106_p1;
        acc_weight_returnB_addr_6_reg_1463 <= tmp_26_i_fu_1106_p1;
        acc_weight_returnSquareA_addr_6_reg_1439 <= tmp_26_i_fu_1106_p1;
        acc_weight_returnSquareB_addr_6_reg_1457 <= tmp_26_i_fu_1106_p1;
        tmp_19_reg_1398 <= ln_returnA_in_V_dout;
        tmp_20_reg_1403 <= weight_returnA_in_V_dout;
        tmp_21_reg_1408 <= weight_returnSquareA_in_V_dout;
        tmp_22_reg_1413 <= ln_returnB_in_V_dout;
        tmp_23_reg_1418 <= weight_returnB_in_V_dout;
        tmp_24_reg_1423 <= weight_returnSquareB_in_V_dout;
        tmp_25_reg_1428 <= weight_returnA_returnB_in_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) begin
        ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it36 <= acc_returnA_addr_6_reg_1433;
        ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it37 <= ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it36;
        ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it38 <= ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it37;
        ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it39 <= ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it38;
        ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it36 <= acc_returnB_addr_6_reg_1451;
        ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it37 <= ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it36;
        ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it38 <= ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it37;
        ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it39 <= ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it38;
        ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it36 <= acc_weight_returnA_addr_6_reg_1445;
        ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it37 <= ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it36;
        ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it38 <= ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it37;
        ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it39 <= ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it38;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it36 <= acc_weight_returnA_returnB_add_6_reg_1469;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it37 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it36;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it38 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it37;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it39 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it38;
        ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it36 <= acc_weight_returnB_addr_6_reg_1463;
        ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it37 <= ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it36;
        ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it38 <= ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it37;
        ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it39 <= ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it38;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it36 <= acc_weight_returnSquareA_addr_6_reg_1439;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it37 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it36;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it38 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it37;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it39 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it38;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it36 <= acc_weight_returnSquareB_addr_6_reg_1457;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it37 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it36;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it38 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it37;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it39 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it38;
        ap_reg_ppstg_tmp_18_reg_1393_pp0_it36 <= tmp_18_reg_1393;
        ap_reg_ppstg_tmp_18_reg_1393_pp0_it37 <= ap_reg_ppstg_tmp_18_reg_1393_pp0_it36;
        ap_reg_ppstg_tmp_18_reg_1393_pp0_it38 <= ap_reg_ppstg_tmp_18_reg_1393_pp0_it37;
        ap_reg_ppstg_tmp_18_reg_1393_pp0_it39 <= ap_reg_ppstg_tmp_18_reg_1393_pp0_it38;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it10 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it9;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it11 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it10;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it12 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it11;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it13 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it12;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it14 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it13;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it15 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it14;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it16 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it15;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it17 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it16;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it18 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it17;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it19 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it18;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it2 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it1;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it20 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it19;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it21 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it20;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it22 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it21;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it23 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it22;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it24 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it23;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it25 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it24;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it26 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it25;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it27 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it26;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it28 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it27;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it29 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it28;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it3 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it2;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it30 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it29;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it31 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it30;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it32 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it31;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it33 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it32;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it33;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it4 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it3;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it5 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it4;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it6 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it5;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it7 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it6;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it8 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it7;
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it9 <= ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6)) begin
        ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 <= exitcond_i_reg_1475;
        exitcond_i_reg_1475 <= exitcond_i_fu_1117_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it1 <= tmp_9_i_reg_1384;
        tmp_9_i_reg_1384 <= tmp_9_i_fu_1089_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6))) begin
        i_1_reg_1479 <= i_1_fu_1123_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == tmp_9_i_fu_1089_p2))) begin
        i_reg_1388 <= i_fu_1100_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35)) | ((ap_const_lv1_0 == exitcond_i_reg_1475) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8)))) begin
        reg_1002 <= acc_returnB_q0;
        reg_996 <= acc_weight_returnA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35)) | ((ap_const_lv1_0 == exitcond_i_reg_1475) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9)))) begin
        reg_1008 <= acc_weight_returnSquareB_q0;
        reg_1014 <= acc_weight_returnB_q0;
        reg_1020 <= acc_weight_returnA_returnB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_lv1_0 == exitcond_i_reg_1475)))) begin
        reg_984 <= acc_returnA_q0;
        reg_990 <= acc_weight_returnSquareA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        sum_returnA_reg_1528 <= grp_fu_935_p2;
        sum_weight_returnSquareA_reg_1533 <= grp_fu_941_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        sum_returnB_reg_1543 <= grp_fu_941_p2;
        sum_weight_returnA_reg_1538 <= grp_fu_935_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        sum_weight_returnB_reg_1553 <= grp_fu_941_p2;
        sum_weight_returnSquareB_reg_1548 <= grp_fu_935_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        tmp_18_reg_1393 <= sum_weight_in_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6) & (ap_const_lv1_0 == exitcond_i_fu_1117_p2))) begin
        tmp_43_i_reg_1484[0] <= tmp_43_i_fu_1129_p1[0];
tmp_43_i_reg_1484[1] <= tmp_43_i_fu_1129_p1[1];
tmp_43_i_reg_1484[2] <= tmp_43_i_fu_1129_p1[2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tmp_i_reg_1166 <= tmp_i_fu_1079_p2;
        upper_bound_reg_1161 <= upper_bound_fu_1072_p3;
    end
end

/// NUMBER_OF_DAYS_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_384)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_384)) begin
        NUMBER_OF_DAYS_out_write = ap_const_logic_1;
    end else begin
        NUMBER_OF_DAYS_out_write = ap_const_logic_0;
    end
end

/// NUMBER_OF_DAYS_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_384)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_384)) begin
        NUMBER_OF_DAYS_read = ap_const_logic_1;
    end else begin
        NUMBER_OF_DAYS_read = ap_const_logic_0;
    end
end

/// NUMBER_OF_INDICES_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_384)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_384)) begin
        NUMBER_OF_INDICES_out_write = ap_const_logic_1;
    end else begin
        NUMBER_OF_INDICES_out_write = ap_const_logic_0;
    end
end

/// NUMBER_OF_INDICES_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_384)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_384)) begin
        NUMBER_OF_INDICES_read = ap_const_logic_1;
    end else begin
        NUMBER_OF_INDICES_read = ap_const_logic_0;
    end
end

/// acc_returnA_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or acc_returnA_addr_reg_1191 or acc_returnA_addr_2_reg_1261 or acc_returnA_addr_4_reg_1331 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or tmp_43_i_fu_1129_p1 or ap_sig_cseq_ST_st5_fsm_4 or tmp_26_i_fu_1106_p1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_returnA_address0 = acc_returnA_addr_4_reg_1331;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_returnA_address0 = acc_returnA_addr_2_reg_1261;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_returnA_address0 = acc_returnA_addr_reg_1191;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6))) begin
        acc_returnA_address0 = tmp_43_i_fu_1129_p1;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) begin
        acc_returnA_address0 = tmp_26_i_fu_1106_p1;
    end else begin
        acc_returnA_address0 = 'bx;
    end
end

/// acc_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or acc_returnA_addr_1_reg_1226 or acc_returnA_addr_3_reg_1296 or acc_returnA_addr_5_reg_1366 or ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_returnA_address1 = ap_reg_ppstg_acc_returnA_addr_6_reg_1433_pp0_it39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_returnA_address1 = acc_returnA_addr_5_reg_1366;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_returnA_address1 = acc_returnA_addr_3_reg_1296;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_returnA_address1 = acc_returnA_addr_1_reg_1226;
    end else begin
        acc_returnA_address1 = 'bx;
    end
end

/// acc_returnA_ce0 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6)) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_returnA_ce1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_returnA_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or grp_fu_935_p2 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_returnA_d1 = grp_fu_935_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnA_d1 = ap_const_lv32_0;
    end else begin
        acc_returnA_d1 = 'bx;
    end
end

/// acc_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_returnA_we1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_returnB_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it35 or ap_sig_cseq_ST_pp1_stg1_fsm_7 or ap_reg_ppiten_pp1_it0 or acc_returnB_addr_reg_1171 or acc_returnB_addr_2_reg_1241 or acc_returnB_addr_4_reg_1311 or tmp_43_i_reg_1484 or ap_sig_cseq_ST_st5_fsm_4 or tmp_26_i_fu_1106_p1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_returnB_address0 = acc_returnB_addr_4_reg_1311;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_returnB_address0 = acc_returnB_addr_2_reg_1241;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_returnB_address0 = acc_returnB_addr_reg_1171;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        acc_returnB_address0 = tmp_43_i_reg_1484;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) begin
        acc_returnB_address0 = tmp_26_i_fu_1106_p1;
    end else begin
        acc_returnB_address0 = 'bx;
    end
end

/// acc_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or acc_returnB_addr_1_reg_1206 or acc_returnB_addr_3_reg_1276 or acc_returnB_addr_5_reg_1346 or ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_returnB_address1 = ap_reg_ppstg_acc_returnB_addr_6_reg_1451_pp0_it39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_returnB_address1 = acc_returnB_addr_5_reg_1346;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_returnB_address1 = acc_returnB_addr_3_reg_1276;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_returnB_address1 = acc_returnB_addr_1_reg_1206;
    end else begin
        acc_returnB_address1 = 'bx;
    end
end

/// acc_returnB_ce0 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_sig_cseq_ST_pp1_stg1_fsm_7 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_returnB_ce1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or grp_fu_953_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_returnB_d1 = grp_fu_953_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_returnB_d1 = 'bx;
    end
end

/// acc_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_returnB_we1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it35 or ap_sig_cseq_ST_pp1_stg1_fsm_7 or ap_reg_ppiten_pp1_it0 or acc_weight_returnA_addr_reg_1201 or acc_weight_returnA_addr_2_reg_1271 or acc_weight_returnA_addr_4_reg_1341 or tmp_43_i_reg_1484 or ap_sig_cseq_ST_st5_fsm_4 or tmp_26_i_fu_1106_p1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_4_reg_1341;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_2_reg_1271;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_reg_1201;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        acc_weight_returnA_address0 = tmp_43_i_reg_1484;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) begin
        acc_weight_returnA_address0 = tmp_26_i_fu_1106_p1;
    end else begin
        acc_weight_returnA_address0 = 'bx;
    end
end

/// acc_weight_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or acc_weight_returnA_addr_1_reg_1236 or acc_weight_returnA_addr_3_reg_1306 or acc_weight_returnA_addr_5_reg_1376 or ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnA_address1 = ap_reg_ppstg_acc_weight_returnA_addr_6_reg_1445_pp0_it39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_5_reg_1376;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_3_reg_1306;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_1_reg_1236;
    end else begin
        acc_weight_returnA_address1 = 'bx;
    end
end

/// acc_weight_returnA_ce0 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_sig_cseq_ST_pp1_stg1_fsm_7 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_ce1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or grp_fu_947_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnA_d1 = grp_fu_947_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_d1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or acc_weight_returnA_returnB_add_reg_1186 or acc_weight_returnA_returnB_add_2_reg_1256 or acc_weight_returnA_returnB_add_4_reg_1326 or tmp_43_i_reg_1484 or ap_sig_cseq_ST_st5_fsm_4 or tmp_26_i_fu_1106_p1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_4_reg_1326;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_2_reg_1256;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_reg_1186;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8))) begin
        acc_weight_returnA_returnB_address0 = tmp_43_i_reg_1484;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) begin
        acc_weight_returnA_returnB_address0 = tmp_26_i_fu_1106_p1;
    end else begin
        acc_weight_returnA_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or acc_weight_returnA_returnB_add_1_reg_1221 or acc_weight_returnA_returnB_add_3_reg_1291 or acc_weight_returnA_returnB_add_5_reg_1361 or ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnA_returnB_address1 = ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1469_pp0_it39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_5_reg_1361;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_3_reg_1291;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_1_reg_1221;
    end else begin
        acc_weight_returnA_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_ce0 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_ce1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or grp_fu_971_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnA_returnB_d1 = grp_fu_971_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_returnB_d1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_we1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or acc_weight_returnB_addr_reg_1181 or acc_weight_returnB_addr_2_reg_1251 or acc_weight_returnB_addr_4_reg_1321 or tmp_43_i_reg_1484 or ap_sig_cseq_ST_st5_fsm_4 or tmp_26_i_fu_1106_p1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_4_reg_1321;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_2_reg_1251;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_reg_1181;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8))) begin
        acc_weight_returnB_address0 = tmp_43_i_reg_1484;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) begin
        acc_weight_returnB_address0 = tmp_26_i_fu_1106_p1;
    end else begin
        acc_weight_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or acc_weight_returnB_addr_1_reg_1216 or acc_weight_returnB_addr_3_reg_1286 or acc_weight_returnB_addr_5_reg_1356 or ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnB_address1 = ap_reg_ppstg_acc_weight_returnB_addr_6_reg_1463_pp0_it39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_5_reg_1356;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_3_reg_1286;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_1_reg_1216;
    end else begin
        acc_weight_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnB_ce0 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_ce1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or grp_fu_965_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnB_d1 = grp_fu_965_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnB_d1 = 'bx;
    end
end

/// acc_weight_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_we1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or acc_weight_returnSquareA_addr_reg_1196 or acc_weight_returnSquareA_addr_2_reg_1266 or acc_weight_returnSquareA_addr_4_reg_1336 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or tmp_43_i_fu_1129_p1 or ap_sig_cseq_ST_st5_fsm_4 or tmp_26_i_fu_1106_p1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_4_reg_1336;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_2_reg_1266;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_reg_1196;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6))) begin
        acc_weight_returnSquareA_address0 = tmp_43_i_fu_1129_p1;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) begin
        acc_weight_returnSquareA_address0 = tmp_26_i_fu_1106_p1;
    end else begin
        acc_weight_returnSquareA_address0 = 'bx;
    end
end

/// acc_weight_returnSquareA_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or acc_weight_returnSquareA_addr_1_reg_1231 or acc_weight_returnSquareA_addr_3_reg_1301 or acc_weight_returnSquareA_addr_5_reg_1371 or ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnSquareA_address1 = ap_reg_ppstg_acc_weight_returnSquareA_addr_6_reg_1439_pp0_it39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_5_reg_1371;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_3_reg_1301;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_1_reg_1231;
    end else begin
        acc_weight_returnSquareA_address1 = 'bx;
    end
end

/// acc_weight_returnSquareA_ce0 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6)) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_ce1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or grp_fu_941_p2 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnSquareA_d1 = grp_fu_941_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareA_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareA_d1 = 'bx;
    end
end

/// acc_weight_returnSquareA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_we1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or acc_weight_returnSquareB_addr_reg_1176 or acc_weight_returnSquareB_addr_2_reg_1246 or acc_weight_returnSquareB_addr_4_reg_1316 or tmp_43_i_reg_1484 or ap_sig_cseq_ST_st5_fsm_4 or tmp_26_i_fu_1106_p1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_4_reg_1316;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_2_reg_1246;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_reg_1176;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8))) begin
        acc_weight_returnSquareB_address0 = tmp_43_i_reg_1484;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) begin
        acc_weight_returnSquareB_address0 = tmp_26_i_fu_1106_p1;
    end else begin
        acc_weight_returnSquareB_address0 = 'bx;
    end
end

/// acc_weight_returnSquareB_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or acc_weight_returnSquareB_addr_1_reg_1211 or acc_weight_returnSquareB_addr_3_reg_1281 or acc_weight_returnSquareB_addr_5_reg_1351 or ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnSquareB_address1 = ap_reg_ppstg_acc_weight_returnSquareB_addr_6_reg_1457_pp0_it39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_5_reg_1351;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_3_reg_1281;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_1_reg_1211;
    end else begin
        acc_weight_returnSquareB_address1 = 'bx;
    end
end

/// acc_weight_returnSquareB_ce0 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_ce1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35))) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it40 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or grp_fu_959_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40)) begin
        acc_weight_returnSquareB_d1 = grp_fu_959_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareB_d1 = 'bx;
    end
end

/// acc_weight_returnSquareB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_we1 assign process. ///
always @ (ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it40 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        acc_weight_returnSquareB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_1_i_fu_1084_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_1_i_fu_1084_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_1_i_fu_1084_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_5 assign process. ///
always @ (ap_sig_bdd_128)
begin
    if (ap_sig_bdd_128) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_6 assign process. ///
always @ (ap_sig_bdd_647)
begin
    if (ap_sig_bdd_647) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg1_fsm_7 assign process. ///
always @ (ap_sig_bdd_306)
begin
    if (ap_sig_bdd_306) begin
        ap_sig_cseq_ST_pp1_stg1_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg1_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg2_fsm_8 assign process. ///
always @ (ap_sig_bdd_333)
begin
    if (ap_sig_bdd_333) begin
        ap_sig_cseq_ST_pp1_stg2_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg2_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg3_fsm_9 assign process. ///
always @ (ap_sig_bdd_354)
begin
    if (ap_sig_bdd_354) begin
        ap_sig_cseq_ST_pp1_stg3_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg3_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg4_fsm_10 assign process. ///
always @ (ap_sig_bdd_693)
begin
    if (ap_sig_bdd_693) begin
        ap_sig_cseq_ST_pp1_stg4_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg4_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_31)
begin
    if (ap_sig_bdd_31) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_400)
begin
    if (ap_sig_bdd_400) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_889)
begin
    if (ap_sig_bdd_889) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_899)
begin
    if (ap_sig_bdd_899) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_11 assign process. ///
always @ (ap_sig_bdd_704)
begin
    if (ap_sig_bdd_704) begin
        ap_sig_cseq_ST_st57_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_729)
begin
    if (ap_sig_bdd_729) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// grp_fu_1094_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or tmp_9_i_reg_1384 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or tmp_9_i_fu_1089_p2 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it1 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it2 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it3 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it4 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it5 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it6 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it7 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it8 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it9 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it10 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it11 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it12 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it13 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it14 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it15 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it16 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it17 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it18 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it19 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it20 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it21 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it22 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it23 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it24 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it25 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it26 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it27 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it28 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it29 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it30 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it31 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it32 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) | (ap_const_lv1_0 == tmp_9_i_fu_1089_p2) | (tmp_9_i_reg_1384 == ap_const_lv1_0) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it1) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it2) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it3) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it4) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it5) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it6) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it7) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it8) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it9) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it10) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it11) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it12) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it13) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it14) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it15) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it16) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it17) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it18) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it19) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it20) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it21) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it22) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it23) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it24) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it25) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it26) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it27) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it28) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it29) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it30) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it31) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it32) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it33)))) begin
        grp_fu_1094_ce = ap_const_logic_1;
    end else begin
        grp_fu_1094_ce = ap_const_logic_0;
    end
end

/// grp_fu_935_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 or ap_sig_cseq_ST_pp1_stg1_fsm_7 or exitcond_i_reg_1475 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or ap_sig_cseq_ST_pp1_stg4_fsm_10)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8) & ((ap_const_lv1_0 == exitcond_i_reg_1475) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9) & ((ap_const_lv1_0 == exitcond_i_reg_1475) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10) & ((ap_const_lv1_0 == exitcond_i_reg_1475) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6) & (ap_const_lv1_0 == exitcond_i_reg_1475)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1)))) begin
        grp_fu_935_ce = ap_const_logic_1;
    end else begin
        grp_fu_935_ce = ap_const_logic_0;
    end
end

/// grp_fu_935_p0 assign process. ///
always @ (ap_reg_ppiten_pp0_it36 or tmp_2_reg_832 or acc_returnA_q0 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or ap_sig_cseq_ST_pp1_stg4_fsm_10 or tmp_4_phi_fu_863_p4 or tmp_6_phi_fu_889_p4 or tmp_8_phi_fu_915_p4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6))) begin
        grp_fu_935_p0 = tmp_2_reg_832;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        grp_fu_935_p0 = tmp_4_phi_fu_863_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9))) begin
        grp_fu_935_p0 = tmp_6_phi_fu_889_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8))) begin
        grp_fu_935_p0 = tmp_8_phi_fu_915_p4;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it36)) begin
        grp_fu_935_p0 = acc_returnA_q0;
    end else begin
        grp_fu_935_p0 = 'bx;
    end
end

/// grp_fu_935_p1 assign process. ///
always @ (ap_reg_ppiten_pp0_it36 or reg_984 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or reg_996 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or reg_1008 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or reg_1020 or tmp_19_reg_1398 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or ap_sig_cseq_ST_pp1_stg4_fsm_10)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6))) begin
        grp_fu_935_p1 = reg_1020;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        grp_fu_935_p1 = reg_1008;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9))) begin
        grp_fu_935_p1 = reg_996;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8))) begin
        grp_fu_935_p1 = reg_984;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it36)) begin
        grp_fu_935_p1 = tmp_19_reg_1398;
    end else begin
        grp_fu_935_p1 = 'bx;
    end
end

/// grp_fu_941_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 or ap_sig_cseq_ST_pp1_stg1_fsm_7 or exitcond_i_reg_1475 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or ap_sig_cseq_ST_pp1_stg4_fsm_10)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8) & ((ap_const_lv1_0 == exitcond_i_reg_1475) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9) & ((ap_const_lv1_0 == exitcond_i_reg_1475) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6) & (ap_const_lv1_0 == exitcond_i_reg_1475)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10) & (ap_const_lv1_0 == exitcond_i_reg_1475)))) begin
        grp_fu_941_ce = ap_const_logic_1;
    end else begin
        grp_fu_941_ce = ap_const_logic_0;
    end
end

/// grp_fu_941_p0 assign process. ///
always @ (ap_reg_ppiten_pp0_it36 or ap_reg_ppiten_pp1_it0 or acc_weight_returnSquareA_q0 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or ap_sig_cseq_ST_pp1_stg4_fsm_10 or tmp_3_phi_fu_850_p4 or tmp_5_phi_fu_876_p4 or tmp_7_phi_fu_902_p4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        grp_fu_941_p0 = tmp_3_phi_fu_850_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9))) begin
        grp_fu_941_p0 = tmp_5_phi_fu_876_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8))) begin
        grp_fu_941_p0 = tmp_7_phi_fu_902_p4;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it36)) begin
        grp_fu_941_p0 = acc_weight_returnSquareA_q0;
    end else begin
        grp_fu_941_p0 = 'bx;
    end
end

/// grp_fu_941_p1 assign process. ///
always @ (ap_reg_ppiten_pp0_it36 or ap_reg_ppiten_pp1_it0 or reg_990 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or reg_1002 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or reg_1014 or tmp_21_reg_1408 or ap_sig_cseq_ST_pp1_stg4_fsm_10)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        grp_fu_941_p1 = reg_1014;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9))) begin
        grp_fu_941_p1 = reg_1002;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8))) begin
        grp_fu_941_p1 = reg_990;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it36)) begin
        grp_fu_941_p1 = tmp_21_reg_1408;
    end else begin
        grp_fu_941_p1 = 'bx;
    end
end

/// grp_fu_947_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38)))) begin
        grp_fu_947_ce = ap_const_logic_1;
    end else begin
        grp_fu_947_ce = ap_const_logic_0;
    end
end

/// grp_fu_953_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38)))) begin
        grp_fu_953_ce = ap_const_logic_1;
    end else begin
        grp_fu_953_ce = ap_const_logic_0;
    end
end

/// grp_fu_959_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38)))) begin
        grp_fu_959_ce = ap_const_logic_1;
    end else begin
        grp_fu_959_ce = ap_const_logic_0;
    end
end

/// grp_fu_965_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38)))) begin
        grp_fu_965_ce = ap_const_logic_1;
    end else begin
        grp_fu_965_ce = ap_const_logic_0;
    end
end

/// grp_fu_971_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38 or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ((ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it35) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it39) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it36) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it37) | (ap_const_lv1_0 == ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it38)))) begin
        grp_fu_971_ce = ap_const_logic_1;
    end else begin
        grp_fu_971_ce = ap_const_logic_0;
    end
end

/// i1_i_phi_fu_824_p4 assign process. ///
always @ (i1_i_reg_820 or ap_sig_cseq_ST_pp0_stg0_fsm_5 or ap_reg_ppiten_pp0_it1 or tmp_9_i_reg_1384 or i_reg_1388)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (tmp_9_i_reg_1384 == ap_const_lv1_0))) begin
        i1_i_phi_fu_824_p4 = i_reg_1388;
    end else begin
        i1_i_phi_fu_824_p4 = i1_i_reg_820;
    end
end

/// i2_i_phi_fu_927_p4 assign process. ///
always @ (i2_i_reg_923 or ap_reg_ppiten_pp1_it1 or exitcond_i_reg_1475 or ap_sig_cseq_ST_pp1_stg0_fsm_6 or i_1_reg_1479)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_i_reg_1475) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_6))) begin
        i2_i_phi_fu_927_p4 = i_1_reg_1479;
    end else begin
        i2_i_phi_fu_927_p4 = i2_i_reg_923;
    end
end

/// ln_returnA_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        ln_returnA_in_V_read = ap_const_logic_1;
    end else begin
        ln_returnA_in_V_read = ap_const_logic_0;
    end
end

/// ln_returnB_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        ln_returnB_in_V_read = ap_const_logic_1;
    end else begin
        ln_returnB_in_V_read = ap_const_logic_0;
    end
end

/// sum_returnA_out_V_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_returnA_out_V_write = ap_const_logic_1;
    end else begin
        sum_returnA_out_V_write = ap_const_logic_0;
    end
end

/// sum_return_out_V_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_return_out_V_write = ap_const_logic_1;
    end else begin
        sum_return_out_V_write = ap_const_logic_0;
    end
end

/// sum_weight_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        sum_weight_in_V_read = ap_const_logic_1;
    end else begin
        sum_weight_in_V_read = ap_const_logic_0;
    end
end

/// sum_weight_out_V_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_weight_out_V_write = ap_const_logic_1;
    end else begin
        sum_weight_out_V_write = ap_const_logic_0;
    end
end

/// sum_weight_returnA_out_V_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_weight_returnA_out_V_write = ap_const_logic_1;
    end else begin
        sum_weight_returnA_out_V_write = ap_const_logic_0;
    end
end

/// sum_weight_returnA_returnB_out_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_weight_returnA_returnB_out_write = ap_const_logic_1;
    end else begin
        sum_weight_returnA_returnB_out_write = ap_const_logic_0;
    end
end

/// sum_weight_returnSquareA_out_V_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_weight_returnSquareA_out_V_write = ap_const_logic_1;
    end else begin
        sum_weight_returnSquareA_out_V_write = ap_const_logic_0;
    end
end

/// sum_weight_returnSquare_out_V_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_weight_returnSquare_out_V_write = ap_const_logic_1;
    end else begin
        sum_weight_returnSquare_out_V_write = ap_const_logic_0;
    end
end

/// sum_weight_return_out_V_write assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_11 or ap_sig_bdd_721)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_11) & ~ap_sig_bdd_721)) begin
        sum_weight_return_out_V_write = ap_const_logic_1;
    end else begin
        sum_weight_return_out_V_write = ap_const_logic_0;
    end
end

/// tmp_3_phi_fu_850_p4 assign process. ///
always @ (tmp_3_reg_845 or ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or sum_weight_returnB_reg_1553 or ap_sig_cseq_ST_pp1_stg4_fsm_10)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        tmp_3_phi_fu_850_p4 = sum_weight_returnB_reg_1553;
    end else begin
        tmp_3_phi_fu_850_p4 = tmp_3_reg_845;
    end
end

/// tmp_4_phi_fu_863_p4 assign process. ///
always @ (tmp_4_reg_858 or ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or sum_weight_returnSquareB_reg_1548 or ap_sig_cseq_ST_pp1_stg4_fsm_10)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10))) begin
        tmp_4_phi_fu_863_p4 = sum_weight_returnSquareB_reg_1548;
    end else begin
        tmp_4_phi_fu_863_p4 = tmp_4_reg_858;
    end
end

/// tmp_5_phi_fu_876_p4 assign process. ///
always @ (tmp_5_reg_871 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or sum_returnB_reg_1543)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_5_phi_fu_876_p4 = sum_returnB_reg_1543;
    end else begin
        tmp_5_phi_fu_876_p4 = tmp_5_reg_871;
    end
end

/// tmp_6_phi_fu_889_p4 assign process. ///
always @ (tmp_6_reg_884 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg3_fsm_9 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or sum_weight_returnA_reg_1538)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_9) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_6_phi_fu_889_p4 = sum_weight_returnA_reg_1538;
    end else begin
        tmp_6_phi_fu_889_p4 = tmp_6_reg_884;
    end
end

/// tmp_7_phi_fu_902_p4 assign process. ///
always @ (tmp_7_reg_897 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or sum_weight_returnSquareA_reg_1533)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_7_phi_fu_902_p4 = sum_weight_returnSquareA_reg_1533;
    end else begin
        tmp_7_phi_fu_902_p4 = tmp_7_reg_897;
    end
end

/// tmp_8_phi_fu_915_p4 assign process. ///
always @ (tmp_8_reg_910 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg2_fsm_8 or ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1 or sum_returnA_reg_1528)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_8) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_1475_pp1_it1))) begin
        tmp_8_phi_fu_915_p4 = sum_returnA_reg_1528;
    end else begin
        tmp_8_phi_fu_915_p4 = tmp_8_reg_910;
    end
end

/// weight_returnA_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        weight_returnA_in_V_read = ap_const_logic_1;
    end else begin
        weight_returnA_in_V_read = ap_const_logic_0;
    end
end

/// weight_returnA_returnB_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        weight_returnA_returnB_in_V_read = ap_const_logic_1;
    end else begin
        weight_returnA_returnB_in_V_read = ap_const_logic_0;
    end
end

/// weight_returnB_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        weight_returnB_in_V_read = ap_const_logic_1;
    end else begin
        weight_returnB_in_V_read = ap_const_logic_0;
    end
end

/// weight_returnSquareA_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        weight_returnSquareA_in_V_read = ap_const_logic_1;
    end else begin
        weight_returnSquareA_in_V_read = ap_const_logic_0;
    end
end

/// weight_returnSquareB_in_V_read assign process. ///
always @ (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35)
begin
    if (((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)))) begin
        weight_returnSquareB_in_V_read = ap_const_logic_1;
    end else begin
        weight_returnSquareB_in_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_227 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it39 or ap_reg_ppiten_pp0_it40 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_sig_bdd_384 or tmp_9_i_fu_1089_p2 or exitcond_i_fu_1117_p2 or ap_sig_cseq_ST_pp1_stg4_fsm_10 or ap_sig_bdd_721 or tmp_1_i_fu_1084_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_384) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == tmp_1_i_fu_1084_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
        end
        ap_ST_pp0_stg0_fsm_5 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it39)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it40) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it39)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_227 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~(ap_const_lv1_0 == tmp_9_i_fu_1089_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end
        end
        ap_ST_pp1_stg0_fsm_6 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_i_fu_1117_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_pp1_stg1_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st57_fsm_11;
            end
        end
        ap_ST_pp1_stg1_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg2_fsm_8;
        end
        ap_ST_pp1_stg2_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg3_fsm_9;
        end
        ap_ST_pp1_stg3_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg4_fsm_10;
        end
        ap_ST_pp1_stg4_fsm_10 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_10) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st57_fsm_11;
            end
        end
        ap_ST_st57_fsm_11 : 
        begin
            if (~ap_sig_bdd_721) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st57_fsm_11;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign NUMBER_OF_DAYS_out_din = NUMBER_OF_DAYS_dout;
assign NUMBER_OF_INDICES_out_din = NUMBER_OF_INDICES_dout;
assign acc_returnA_addr_1_gep_fu_417_p3 = ap_const_lv64_1;
assign acc_returnA_addr_2_gep_fu_466_p3 = ap_const_lv64_2;
assign acc_returnA_addr_3_gep_fu_515_p3 = ap_const_lv64_3;
assign acc_returnA_addr_4_gep_fu_564_p3 = ap_const_lv64_4;
assign acc_returnA_addr_5_gep_fu_613_p3 = ap_const_lv64_5;
assign acc_returnA_addr_gep_fu_368_p3 = ap_const_lv64_0;
assign acc_returnA_d0 = ap_const_lv32_0;
assign acc_returnB_addr_1_gep_fu_389_p3 = ap_const_lv64_1;
assign acc_returnB_addr_2_gep_fu_438_p3 = ap_const_lv64_2;
assign acc_returnB_addr_3_gep_fu_487_p3 = ap_const_lv64_3;
assign acc_returnB_addr_4_gep_fu_536_p3 = ap_const_lv64_4;
assign acc_returnB_addr_5_gep_fu_585_p3 = ap_const_lv64_5;
assign acc_returnB_addr_gep_fu_340_p3 = ap_const_lv64_0;
assign acc_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnA_addr_1_gep_fu_431_p3 = ap_const_lv64_1;
assign acc_weight_returnA_addr_2_gep_fu_480_p3 = ap_const_lv64_2;
assign acc_weight_returnA_addr_3_gep_fu_529_p3 = ap_const_lv64_3;
assign acc_weight_returnA_addr_4_gep_fu_578_p3 = ap_const_lv64_4;
assign acc_weight_returnA_addr_5_gep_fu_627_p3 = ap_const_lv64_5;
assign acc_weight_returnA_addr_gep_fu_382_p3 = ap_const_lv64_0;
assign acc_weight_returnA_d0 = ap_const_lv32_0;
assign acc_weight_returnA_returnB_add_1_gep_fu_410_p3 = ap_const_lv64_1;
assign acc_weight_returnA_returnB_add_2_gep_fu_459_p3 = ap_const_lv64_2;
assign acc_weight_returnA_returnB_add_3_gep_fu_508_p3 = ap_const_lv64_3;
assign acc_weight_returnA_returnB_add_4_gep_fu_557_p3 = ap_const_lv64_4;
assign acc_weight_returnA_returnB_add_5_gep_fu_606_p3 = ap_const_lv64_5;
assign acc_weight_returnA_returnB_add_gep_fu_361_p3 = ap_const_lv64_0;
assign acc_weight_returnA_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnB_addr_1_gep_fu_403_p3 = ap_const_lv64_1;
assign acc_weight_returnB_addr_2_gep_fu_452_p3 = ap_const_lv64_2;
assign acc_weight_returnB_addr_3_gep_fu_501_p3 = ap_const_lv64_3;
assign acc_weight_returnB_addr_4_gep_fu_550_p3 = ap_const_lv64_4;
assign acc_weight_returnB_addr_5_gep_fu_599_p3 = ap_const_lv64_5;
assign acc_weight_returnB_addr_gep_fu_354_p3 = ap_const_lv64_0;
assign acc_weight_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareA_addr_1_gep_fu_424_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareA_addr_2_gep_fu_473_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareA_addr_3_gep_fu_522_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareA_addr_4_gep_fu_571_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareA_addr_5_gep_fu_620_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareA_addr_gep_fu_375_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareA_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareB_addr_1_gep_fu_396_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareB_addr_2_gep_fu_445_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareB_addr_3_gep_fu_494_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareB_addr_4_gep_fu_543_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareB_addr_5_gep_fu_592_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareB_addr_gep_fu_347_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareB_d0 = ap_const_lv32_0;

/// ap_sig_bdd_128 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_227 assign process. ///
always @ (ln_returnA_in_V_empty_n or weight_returnSquareA_in_V_empty_n or weight_returnA_in_V_empty_n or sum_weight_in_V_empty_n or ln_returnB_in_V_empty_n or weight_returnSquareB_in_V_empty_n or weight_returnB_in_V_empty_n or weight_returnA_returnB_in_V_empty_n or ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34)
begin
    ap_sig_bdd_227 = (((sum_weight_in_V_empty_n == ap_const_logic_0) & (ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0)) | ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ln_returnA_in_V_empty_n == ap_const_logic_0)) | ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (weight_returnA_in_V_empty_n == ap_const_logic_0)) | ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (weight_returnSquareA_in_V_empty_n == ap_const_logic_0)) | ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (ln_returnB_in_V_empty_n == ap_const_logic_0)) | ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (weight_returnB_in_V_empty_n == ap_const_logic_0)) | ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (weight_returnSquareB_in_V_empty_n == ap_const_logic_0)) | ((ap_reg_ppstg_tmp_9_i_reg_1384_pp0_it34 == ap_const_lv1_0) & (weight_returnA_returnB_in_V_empty_n == ap_const_logic_0)));
end

/// ap_sig_bdd_306 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_306 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_31 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_31 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_333 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_333 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_354 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_354 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_384 assign process. ///
always @ (ap_start or ap_done_reg or NUMBER_OF_DAYS_empty_n or NUMBER_OF_INDICES_empty_n or NUMBER_OF_DAYS_out_full_n or NUMBER_OF_INDICES_out_full_n)
begin
    ap_sig_bdd_384 = ((NUMBER_OF_INDICES_empty_n == ap_const_logic_0) | (NUMBER_OF_INDICES_out_full_n == ap_const_logic_0) | (NUMBER_OF_DAYS_empty_n == ap_const_logic_0) | (NUMBER_OF_DAYS_out_full_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_400 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_400 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_647 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_647 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_693 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_693 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_704 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_704 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_721 assign process. ///
always @ (sum_weight_out_V_full_n or sum_return_out_V_full_n or sum_weight_returnSquare_out_V_full_n or sum_weight_return_out_V_full_n or sum_weight_returnA_returnB_out_full_n or sum_returnA_out_V_full_n or sum_weight_returnSquareA_out_V_full_n or sum_weight_returnA_out_V_full_n)
begin
    ap_sig_bdd_721 = ((sum_weight_out_V_full_n == ap_const_logic_0) | (sum_return_out_V_full_n == ap_const_logic_0) | (sum_weight_returnSquare_out_V_full_n == ap_const_logic_0) | (sum_weight_return_out_V_full_n == ap_const_logic_0) | (sum_weight_returnA_returnB_out_full_n == ap_const_logic_0) | (sum_returnA_out_V_full_n == ap_const_logic_0) | (sum_weight_returnSquareA_out_V_full_n == ap_const_logic_0) | (sum_weight_returnA_out_V_full_n == ap_const_logic_0));
end

/// ap_sig_bdd_729 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_729 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_889 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_889 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_899 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_899 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign column_index_fu_1135_p2 = (column_index_i_reg_795 + ap_const_lv32_1);
assign exitcond_i_fu_1117_p2 = (i2_i_phi_fu_927_p4 == ap_const_lv3_6? 1'b1: 1'b0);
assign grp_fu_1094_p0 = i1_i_phi_fu_824_p4;
assign grp_fu_1094_p1 = ap_const_lv32_6;
assign grp_fu_947_p0 = acc_weight_returnA_q0;
assign grp_fu_947_p1 = tmp_20_reg_1403;
assign grp_fu_953_p0 = acc_returnB_q0;
assign grp_fu_953_p1 = tmp_22_reg_1413;
assign grp_fu_959_p0 = acc_weight_returnSquareB_q0;
assign grp_fu_959_p1 = tmp_24_reg_1423;
assign grp_fu_965_p0 = acc_weight_returnB_q0;
assign grp_fu_965_p1 = tmp_23_reg_1418;
assign grp_fu_971_p0 = acc_weight_returnA_returnB_q0;
assign grp_fu_971_p1 = tmp_25_reg_1428;
assign i_1_fu_1123_p2 = (i2_i_phi_fu_927_p4 + ap_const_lv3_1);
assign i_fu_1100_p2 = (i1_i_phi_fu_824_p4 + ap_const_lv32_1);
assign p_neg_i_fu_1034_p2 = (ap_const_lv32_0 - NUMBER_OF_INDICES_dout);
assign p_neg_t_i_fu_1063_p2 = (ap_const_lv32_0 - tmp_s_fu_1060_p1);
assign sum_returnA_out_V_din = tmp_8_reg_910;
assign sum_return_out_V_din = tmp_5_reg_871;
assign sum_weight_out_V_din = tmp_9_reg_807;
assign sum_weight_returnA_out_V_din = tmp_6_reg_884;
assign sum_weight_returnA_returnB_out_din = tmp_2_reg_832;
assign sum_weight_returnSquareA_out_V_din = tmp_7_reg_897;
assign sum_weight_returnSquare_out_V_din = tmp_4_reg_858;
assign sum_weight_return_out_V_din = tmp_3_reg_845;
assign tmp_1_fu_1069_p1 = p_lshr_f_i_reg_1156;
assign tmp_1_i_fu_1084_p2 = ($signed(column_index_i_reg_795) > $signed(upper_bound_reg_1161)? 1'b1: 1'b0);
assign tmp_26_i_fu_1106_p1 = grp_fu_1094_p2;
assign tmp_43_i_fu_1129_p1 = i2_i_phi_fu_927_p4;
assign tmp_9_i_fu_1089_p2 = ($signed(i1_i_phi_fu_824_p4) > $signed(tmp_i_reg_1166)? 1'b1: 1'b0);
assign tmp_i_fu_1079_p2 = ($signed(NUMBER_OF_DAYS_read_reg_1141) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_s_fu_1060_p1 = p_lshr_i_reg_1151;
assign upper_bound_fu_1072_p3 = ((tmp_reg_1146)? p_neg_t_i_fu_1063_p2: tmp_1_fu_1069_p1);
always @ (posedge ap_clk)
begin
    acc_returnB_addr_reg_1171[2:0] <= 3'b000;
    acc_weight_returnSquareB_addr_reg_1176[2:0] <= 3'b000;
    acc_weight_returnB_addr_reg_1181[2:0] <= 3'b000;
    acc_weight_returnA_returnB_add_reg_1186[2:0] <= 3'b000;
    acc_returnA_addr_reg_1191[2:0] <= 3'b000;
    acc_weight_returnSquareA_addr_reg_1196[2:0] <= 3'b000;
    acc_weight_returnA_addr_reg_1201[2:0] <= 3'b000;
    acc_returnB_addr_1_reg_1206[2:0] <= 3'b001;
    acc_weight_returnSquareB_addr_1_reg_1211[2:0] <= 3'b001;
    acc_weight_returnB_addr_1_reg_1216[2:0] <= 3'b001;
    acc_weight_returnA_returnB_add_1_reg_1221[2:0] <= 3'b001;
    acc_returnA_addr_1_reg_1226[2:0] <= 3'b001;
    acc_weight_returnSquareA_addr_1_reg_1231[2:0] <= 3'b001;
    acc_weight_returnA_addr_1_reg_1236[2:0] <= 3'b001;
    acc_returnB_addr_2_reg_1241[2:0] <= 3'b010;
    acc_weight_returnSquareB_addr_2_reg_1246[2:0] <= 3'b010;
    acc_weight_returnB_addr_2_reg_1251[2:0] <= 3'b010;
    acc_weight_returnA_returnB_add_2_reg_1256[2:0] <= 3'b010;
    acc_returnA_addr_2_reg_1261[2:0] <= 3'b010;
    acc_weight_returnSquareA_addr_2_reg_1266[2:0] <= 3'b010;
    acc_weight_returnA_addr_2_reg_1271[2:0] <= 3'b010;
    acc_returnB_addr_3_reg_1276[2:0] <= 3'b011;
    acc_weight_returnSquareB_addr_3_reg_1281[2:0] <= 3'b011;
    acc_weight_returnB_addr_3_reg_1286[2:0] <= 3'b011;
    acc_weight_returnA_returnB_add_3_reg_1291[2:0] <= 3'b011;
    acc_returnA_addr_3_reg_1296[2:0] <= 3'b011;
    acc_weight_returnSquareA_addr_3_reg_1301[2:0] <= 3'b011;
    acc_weight_returnA_addr_3_reg_1306[2:0] <= 3'b011;
    acc_returnB_addr_4_reg_1311[2:0] <= 3'b100;
    acc_weight_returnSquareB_addr_4_reg_1316[2:0] <= 3'b100;
    acc_weight_returnB_addr_4_reg_1321[2:0] <= 3'b100;
    acc_weight_returnA_returnB_add_4_reg_1326[2:0] <= 3'b100;
    acc_returnA_addr_4_reg_1331[2:0] <= 3'b100;
    acc_weight_returnSquareA_addr_4_reg_1336[2:0] <= 3'b100;
    acc_weight_returnA_addr_4_reg_1341[2:0] <= 3'b100;
    acc_returnB_addr_5_reg_1346[2:0] <= 3'b101;
    acc_weight_returnSquareB_addr_5_reg_1351[2:0] <= 3'b101;
    acc_weight_returnB_addr_5_reg_1356[2:0] <= 3'b101;
    acc_weight_returnA_returnB_add_5_reg_1361[2:0] <= 3'b101;
    acc_returnA_addr_5_reg_1366[2:0] <= 3'b101;
    acc_weight_returnSquareA_addr_5_reg_1371[2:0] <= 3'b101;
    acc_weight_returnA_addr_5_reg_1376[2:0] <= 3'b101;
    tmp_43_i_reg_1484[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end



endmodule //correlation_accel_v4_midEnd

