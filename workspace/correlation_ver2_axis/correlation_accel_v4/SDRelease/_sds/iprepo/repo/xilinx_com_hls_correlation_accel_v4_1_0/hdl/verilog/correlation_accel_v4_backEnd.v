// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module correlation_accel_v4_backEnd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        NUMBER_OF_DAYS_dout,
        NUMBER_OF_DAYS_empty_n,
        NUMBER_OF_DAYS_read,
        NUMBER_OF_INDICES_dout,
        NUMBER_OF_INDICES_empty_n,
        NUMBER_OF_INDICES_read,
        sum_weight_in_c1_V_dout,
        sum_weight_in_c1_V_empty_n,
        sum_weight_in_c1_V_read,
        sum_return_in_c1_V_dout,
        sum_return_in_c1_V_empty_n,
        sum_return_in_c1_V_read,
        sum_weight_returnSquare_in_c1_s_dout,
        sum_weight_returnSquare_in_c1_s_empty_n,
        sum_weight_returnSquare_in_c1_s_read,
        sum_weight_return_in_c1_V_dout,
        sum_weight_return_in_c1_V_empty_n,
        sum_weight_return_in_c1_V_read,
        sum_weight_returnA_returnB_in_s_dout,
        sum_weight_returnA_returnB_in_s_empty_n,
        sum_weight_returnA_returnB_in_s_read,
        sum_returnA_in_c1_V_dout,
        sum_returnA_in_c1_V_empty_n,
        sum_returnA_in_c1_V_read,
        sum_weight_returnSquareA_in_c1_dout,
        sum_weight_returnSquareA_in_c1_empty_n,
        sum_weight_returnSquareA_in_c1_read,
        sum_weight_returnA_in_c1_V_dout,
        sum_weight_returnA_in_c1_V_empty_n,
        sum_weight_returnA_in_c1_V_read,
        sum_weight_in_c2_V_dout,
        sum_weight_in_c2_V_empty_n,
        sum_weight_in_c2_V_read,
        sum_return_in_c2_V_dout,
        sum_return_in_c2_V_empty_n,
        sum_return_in_c2_V_read,
        sum_weight_returnSquare_in_c2_s_dout,
        sum_weight_returnSquare_in_c2_s_empty_n,
        sum_weight_returnSquare_in_c2_s_read,
        sum_weight_return_in_c2_V_dout,
        sum_weight_return_in_c2_V_empty_n,
        sum_weight_return_in_c2_V_read,
        sum_weight_returnA_returnB_in_2_dout,
        sum_weight_returnA_returnB_in_2_empty_n,
        sum_weight_returnA_returnB_in_2_read,
        sum_returnA_in_c2_V_dout,
        sum_returnA_in_c2_V_empty_n,
        sum_returnA_in_c2_V_read,
        sum_weight_returnSquareA_in_c2_dout,
        sum_weight_returnSquareA_in_c2_empty_n,
        sum_weight_returnSquareA_in_c2_read,
        sum_weight_returnA_in_c2_V_dout,
        sum_weight_returnA_in_c2_V_empty_n,
        sum_weight_returnA_in_c2_V_read,
        out_correlation_TDATA,
        out_correlation_TVALID,
        out_correlation_TREADY,
        out_correlation_TKEEP,
        out_correlation_TSTRB,
        out_correlation_TUSER,
        out_correlation_TLAST,
        out_correlation_TID,
        out_correlation_TDEST
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 94'b1;
parameter    ap_ST_st2_fsm_1 = 94'b10;
parameter    ap_ST_st3_fsm_2 = 94'b100;
parameter    ap_ST_st4_fsm_3 = 94'b1000;
parameter    ap_ST_st5_fsm_4 = 94'b10000;
parameter    ap_ST_st6_fsm_5 = 94'b100000;
parameter    ap_ST_st7_fsm_6 = 94'b1000000;
parameter    ap_ST_st8_fsm_7 = 94'b10000000;
parameter    ap_ST_st9_fsm_8 = 94'b100000000;
parameter    ap_ST_st10_fsm_9 = 94'b1000000000;
parameter    ap_ST_st11_fsm_10 = 94'b10000000000;
parameter    ap_ST_st12_fsm_11 = 94'b100000000000;
parameter    ap_ST_st13_fsm_12 = 94'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 94'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 94'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 94'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 94'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 94'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 94'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 94'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 94'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 94'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 94'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 94'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 94'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 94'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 94'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 94'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 94'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 94'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 94'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 94'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 94'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 94'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 94'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 94'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 94'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 94'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 94'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 94'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 94'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 94'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 94'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 94'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 94'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 94'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 94'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 94'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 94'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 94'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 94'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 94'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 94'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 94'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 94'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 94'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 94'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 94'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 94'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 94'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 94'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 94'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 94'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 94'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 94'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 94'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 94'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 94'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 94'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 94'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 94'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 94'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] NUMBER_OF_DAYS_dout;
input   NUMBER_OF_DAYS_empty_n;
output   NUMBER_OF_DAYS_read;
input  [31:0] NUMBER_OF_INDICES_dout;
input   NUMBER_OF_INDICES_empty_n;
output   NUMBER_OF_INDICES_read;
input  [31:0] sum_weight_in_c1_V_dout;
input   sum_weight_in_c1_V_empty_n;
output   sum_weight_in_c1_V_read;
input  [31:0] sum_return_in_c1_V_dout;
input   sum_return_in_c1_V_empty_n;
output   sum_return_in_c1_V_read;
input  [31:0] sum_weight_returnSquare_in_c1_s_dout;
input   sum_weight_returnSquare_in_c1_s_empty_n;
output   sum_weight_returnSquare_in_c1_s_read;
input  [31:0] sum_weight_return_in_c1_V_dout;
input   sum_weight_return_in_c1_V_empty_n;
output   sum_weight_return_in_c1_V_read;
input  [31:0] sum_weight_returnA_returnB_in_s_dout;
input   sum_weight_returnA_returnB_in_s_empty_n;
output   sum_weight_returnA_returnB_in_s_read;
input  [31:0] sum_returnA_in_c1_V_dout;
input   sum_returnA_in_c1_V_empty_n;
output   sum_returnA_in_c1_V_read;
input  [31:0] sum_weight_returnSquareA_in_c1_dout;
input   sum_weight_returnSquareA_in_c1_empty_n;
output   sum_weight_returnSquareA_in_c1_read;
input  [31:0] sum_weight_returnA_in_c1_V_dout;
input   sum_weight_returnA_in_c1_V_empty_n;
output   sum_weight_returnA_in_c1_V_read;
input  [31:0] sum_weight_in_c2_V_dout;
input   sum_weight_in_c2_V_empty_n;
output   sum_weight_in_c2_V_read;
input  [31:0] sum_return_in_c2_V_dout;
input   sum_return_in_c2_V_empty_n;
output   sum_return_in_c2_V_read;
input  [31:0] sum_weight_returnSquare_in_c2_s_dout;
input   sum_weight_returnSquare_in_c2_s_empty_n;
output   sum_weight_returnSquare_in_c2_s_read;
input  [31:0] sum_weight_return_in_c2_V_dout;
input   sum_weight_return_in_c2_V_empty_n;
output   sum_weight_return_in_c2_V_read;
input  [31:0] sum_weight_returnA_returnB_in_2_dout;
input   sum_weight_returnA_returnB_in_2_empty_n;
output   sum_weight_returnA_returnB_in_2_read;
input  [31:0] sum_returnA_in_c2_V_dout;
input   sum_returnA_in_c2_V_empty_n;
output   sum_returnA_in_c2_V_read;
input  [31:0] sum_weight_returnSquareA_in_c2_dout;
input   sum_weight_returnSquareA_in_c2_empty_n;
output   sum_weight_returnSquareA_in_c2_read;
input  [31:0] sum_weight_returnA_in_c2_V_dout;
input   sum_weight_returnA_in_c2_V_empty_n;
output   sum_weight_returnA_in_c2_V_read;
output  [31:0] out_correlation_TDATA;
output   out_correlation_TVALID;
input   out_correlation_TREADY;
output  [3:0] out_correlation_TKEEP;
output  [3:0] out_correlation_TSTRB;
output  [0:0] out_correlation_TUSER;
output  [0:0] out_correlation_TLAST;
output  [0:0] out_correlation_TID;
output  [0:0] out_correlation_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg NUMBER_OF_DAYS_read;
reg NUMBER_OF_INDICES_read;
reg sum_weight_in_c1_V_read;
reg sum_return_in_c1_V_read;
reg sum_weight_returnSquare_in_c1_s_read;
reg sum_weight_return_in_c1_V_read;
reg sum_weight_returnA_returnB_in_s_read;
reg sum_returnA_in_c1_V_read;
reg sum_weight_returnSquareA_in_c1_read;
reg sum_weight_returnA_in_c1_V_read;
reg sum_weight_in_c2_V_read;
reg sum_return_in_c2_V_read;
reg sum_weight_returnSquare_in_c2_s_read;
reg sum_weight_return_in_c2_V_read;
reg sum_weight_returnA_returnB_in_2_read;
reg sum_returnA_in_c2_V_read;
reg sum_weight_returnSquareA_in_c2_read;
reg sum_weight_returnA_in_c2_V_read;
reg out_correlation_TVALID;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [93:0] ap_CS_fsm = 94'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_113;
wire   [31:0] grp_fu_438_p2;
reg   [31:0] reg_463;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_208;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_bdd_215;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] reg_471;
wire   [31:0] grp_fu_421_p2;
reg   [31:0] reg_480;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_227;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_234;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_243;
wire   [31:0] grp_fu_426_p2;
reg   [31:0] reg_487;
wire   [31:0] grp_fu_431_p2;
reg   [31:0] reg_493;
wire   [31:0] grp_fu_410_p2;
reg   [31:0] reg_498;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_258;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_265;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_bdd_273;
reg   [31:0] reg_505;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_282;
reg    ap_sig_cseq_ST_st59_fsm_58;
reg    ap_sig_bdd_289;
wire   [31:0] grp_fu_416_p2;
reg   [31:0] reg_510;
reg   [31:0] NUMBER_OF_INDICES_read_reg_556;
reg    ap_sig_bdd_304;
wire   [31:0] tmp_i_fu_516_p2;
reg   [31:0] tmp_i_reg_562;
wire   [31:0] grp_fu_450_p1;
reg   [31:0] tmp_i_54_reg_567;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_316;
wire   [31:0] tmp_44_i_fu_522_p2;
reg   [31:0] tmp_44_i_reg_573;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_327;
wire   [0:0] tmp_45_i_fu_531_p2;
wire   [0:0] tmp_fu_536_p1;
reg    ap_sig_bdd_385;
wire   [0:0] tmp_84_i_fu_540_p2;
reg   [0:0] tmp_84_i_reg_664;
wire   [30:0] column_index_fu_545_p2;
reg   [30:0] column_index_reg_669;
reg   [31:0] tmp_72_i_reg_674;
reg   [31:0] tmp_74_i_reg_679;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_432;
wire   [31:0] grp_fu_453_p2;
reg   [31:0] volatilityA_reg_684;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_bdd_441;
wire   [31:0] grp_fu_458_p2;
reg   [31:0] volatilityB_reg_689;
reg   [30:0] column_index_i_reg_318;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_453;
reg    ap_sig_ioackin_out_correlation_TREADY;
reg   [31:0] sum_weight2_i_reg_329;
reg   [31:0] sum_return2_i_reg_339;
reg   [31:0] sum_weight_returnSquare2_i_reg_349;
reg   [31:0] sum_weight_return2_i_reg_359;
reg   [31:0] sum_weight_returnA_returnB2_i_reg_369;
reg   [31:0] sum_returnA2_i_reg_379;
reg   [31:0] sum_weight_returnSquareA2_i_reg_389;
reg   [31:0] sum_weight_returnA2_i_reg_399;
reg    ap_reg_ioackin_out_correlation_TREADY = 1'b0;
reg   [31:0] grp_fu_410_p0;
reg   [31:0] grp_fu_410_p1;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_514;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_521;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_528;
reg   [31:0] grp_fu_416_p0;
wire   [31:0] grp_fu_416_p1;
reg   [31:0] grp_fu_421_p0;
reg   [31:0] grp_fu_421_p1;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_542;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_549;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_556;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_564;
reg   [31:0] grp_fu_426_p0;
reg   [31:0] grp_fu_426_p1;
wire   [31:0] grp_fu_431_p0;
reg   [31:0] grp_fu_431_p1;
reg   [31:0] grp_fu_438_p0;
reg   [31:0] grp_fu_438_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_578;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_585;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_592;
reg   [31:0] grp_fu_443_p0;
reg   [31:0] grp_fu_443_p1;
wire   [31:0] grp_fu_450_p0;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_604;
wire   [31:0] grp_fu_453_p1;
wire   [31:0] grp_fu_458_p1;
wire   [31:0] column_index_cast_i_fu_527_p1;
reg   [1:0] grp_fu_410_opcode;
wire    grp_fu_410_ce;
reg   [1:0] grp_fu_416_opcode;
wire    grp_fu_416_ce;
wire    grp_fu_421_ce;
wire    grp_fu_426_ce;
wire    grp_fu_431_ce;
reg    grp_fu_438_ce;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_933;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_941;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_949;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_957;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_968;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_976;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_987;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_998;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_1006;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_bdd_1016;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_bdd_1024;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_bdd_1034;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_1042;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_bdd_1050;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_bdd_1058;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_1066;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_bdd_1074;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_bdd_1082;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_bdd_1090;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_bdd_1098;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_1106;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_1114;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_bdd_1122;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_bdd_1130;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_bdd_1138;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_1148;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_1156;
wire    grp_fu_443_ce;
wire    grp_fu_450_ce;
wire   [31:0] grp_fu_453_p0;
wire    grp_fu_453_ce;
wire   [31:0] grp_fu_458_p0;
wire    grp_fu_458_ce;
reg   [93:0] ap_NS_fsm;
reg    ap_sig_bdd_423;


correlation_accel_v4_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_faddfsub_32ns_32ns_32_5_full_dsp_U98(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_410_p0 ),
    .din1( grp_fu_410_p1 ),
    .opcode( grp_fu_410_opcode ),
    .ce( grp_fu_410_ce ),
    .dout( grp_fu_410_p2 )
);

correlation_accel_v4_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_faddfsub_32ns_32ns_32_5_full_dsp_U99(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_416_p0 ),
    .din1( grp_fu_416_p1 ),
    .opcode( grp_fu_416_opcode ),
    .ce( grp_fu_416_ce ),
    .dout( grp_fu_416_p2 )
);

correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U100(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_421_p0 ),
    .din1( grp_fu_421_p1 ),
    .ce( grp_fu_421_ce ),
    .dout( grp_fu_421_p2 )
);

correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U101(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_426_p0 ),
    .din1( grp_fu_426_p1 ),
    .ce( grp_fu_426_ce ),
    .dout( grp_fu_426_p2 )
);

correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U102(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_431_p0 ),
    .din1( grp_fu_431_p1 ),
    .ce( grp_fu_431_ce ),
    .dout( grp_fu_431_p2 )
);

correlation_accel_v4_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fdiv_32ns_32ns_32_16_U103(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_438_p0 ),
    .din1( grp_fu_438_p1 ),
    .ce( grp_fu_438_ce ),
    .dout( grp_fu_438_p2 )
);

correlation_accel_v4_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fdiv_32ns_32ns_32_16_U104(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_443_p0 ),
    .din1( grp_fu_443_p1 ),
    .ce( grp_fu_443_ce ),
    .dout( grp_fu_443_p2 )
);

correlation_accel_v4_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_sitofp_32ns_32_6_U105(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_450_p0 ),
    .ce( grp_fu_450_ce ),
    .dout( grp_fu_450_p1 )
);

correlation_accel_v4_fsqrt_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fsqrt_32ns_32ns_32_16_U106(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_453_p0 ),
    .din1( grp_fu_453_p1 ),
    .ce( grp_fu_453_ce ),
    .dout( grp_fu_453_p2 )
);

correlation_accel_v4_fsqrt_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v4_fsqrt_32ns_32ns_32_16_U107(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_458_p0 ),
    .din1( grp_fu_458_p1 ),
    .ce( grp_fu_458_ce ),
    .dout( grp_fu_458_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~ap_sig_bdd_385)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_out_correlation_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_out_correlation_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_out_correlation_TREADY <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & ~(ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY))) begin
            ap_reg_ioackin_out_correlation_TREADY <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & (ap_const_logic_1 == out_correlation_TREADY))) begin
            ap_reg_ioackin_out_correlation_TREADY <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & ~(ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY))) begin
        column_index_i_reg_318 <= column_index_reg_669;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        column_index_i_reg_318 <= ap_const_lv31_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_return2_i_reg_339 <= sum_return_in_c2_V_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_return2_i_reg_339 <= sum_return_in_c1_V_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_returnA2_i_reg_379 <= sum_returnA_in_c2_V_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_returnA2_i_reg_379 <= sum_returnA_in_c1_V_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight2_i_reg_329 <= sum_weight_in_c2_V_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight2_i_reg_329 <= sum_weight_in_c1_V_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_return2_i_reg_359 <= sum_weight_return_in_c2_V_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_return2_i_reg_359 <= sum_weight_return_in_c1_V_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnA2_i_reg_399 <= sum_weight_returnA_in_c2_V_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnA2_i_reg_399 <= sum_weight_returnA_in_c1_V_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnA_returnB2_i_reg_369 <= sum_weight_returnA_returnB_in_2_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnA_returnB2_i_reg_369 <= sum_weight_returnA_returnB_in_s_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnSquare2_i_reg_349 <= sum_weight_returnSquare_in_c2_s_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnSquare2_i_reg_349 <= sum_weight_returnSquare_in_c1_s_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_423) begin
        if ((ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnSquareA2_i_reg_389 <= sum_weight_returnSquareA_in_c2_dout;
        end else if (~(ap_const_lv1_0 == tmp_fu_536_p1)) begin
            sum_weight_returnSquareA2_i_reg_389 <= sum_weight_returnSquareA_in_c1_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_304)) begin
        NUMBER_OF_INDICES_read_reg_556 <= NUMBER_OF_INDICES_dout;
        tmp_i_reg_562 <= tmp_i_fu_516_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~ap_sig_bdd_385)) begin
        column_index_reg_669 <= column_index_fu_545_p2;
        tmp_84_i_reg_664 <= tmp_84_i_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52))) begin
        reg_463 <= grp_fu_438_p2;
        reg_471 <= grp_fu_443_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77))) begin
        reg_480 <= grp_fu_421_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        reg_487 <= grp_fu_426_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        reg_493 <= grp_fu_431_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57))) begin
        reg_498 <= grp_fu_410_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58))) begin
        reg_505 <= grp_fu_410_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        reg_510 <= grp_fu_416_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_44_i_reg_573 <= tmp_44_i_fu_522_p2;
        tmp_i_54_reg_567 <= grp_fu_450_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        tmp_72_i_reg_674 <= grp_fu_421_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        tmp_74_i_reg_679 <= grp_fu_438_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73)) begin
        volatilityA_reg_684 <= grp_fu_453_p2;
        volatilityB_reg_689 <= grp_fu_458_p2;
    end
end

/// NUMBER_OF_DAYS_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_304)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_304)) begin
        NUMBER_OF_DAYS_read = ap_const_logic_1;
    end else begin
        NUMBER_OF_DAYS_read = ap_const_logic_0;
    end
end

/// NUMBER_OF_INDICES_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_304)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_304)) begin
        NUMBER_OF_INDICES_read = ap_const_logic_1;
    end else begin
        NUMBER_OF_INDICES_read = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~ap_sig_bdd_385))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~ap_sig_bdd_385)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_113)
begin
    if (ap_sig_bdd_113) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_208)
begin
    if (ap_sig_bdd_208) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_542)
begin
    if (ap_sig_bdd_542) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_968)
begin
    if (ap_sig_bdd_968) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_976)
begin
    if (ap_sig_bdd_976) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_227)
begin
    if (ap_sig_bdd_227) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_514)
begin
    if (ap_sig_bdd_514) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_604)
begin
    if (ap_sig_bdd_604) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_549)
begin
    if (ap_sig_bdd_549) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_987)
begin
    if (ap_sig_bdd_987) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_234)
begin
    if (ap_sig_bdd_234) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_258)
begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_521)
begin
    if (ap_sig_bdd_521) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_998)
begin
    if (ap_sig_bdd_998) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_1006)
begin
    if (ap_sig_bdd_1006) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_282)
begin
    if (ap_sig_bdd_282) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_585)
begin
    if (ap_sig_bdd_585) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_933)
begin
    if (ap_sig_bdd_933) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_941)
begin
    if (ap_sig_bdd_941) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_556)
begin
    if (ap_sig_bdd_556) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st53_fsm_52 assign process. ///
always @ (ap_sig_bdd_215)
begin
    if (ap_sig_bdd_215) begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_53 assign process. ///
always @ (ap_sig_bdd_432)
begin
    if (ap_sig_bdd_432) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_54 assign process. ///
always @ (ap_sig_bdd_528)
begin
    if (ap_sig_bdd_528) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_55 assign process. ///
always @ (ap_sig_bdd_1016)
begin
    if (ap_sig_bdd_1016) begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_56 assign process. ///
always @ (ap_sig_bdd_1024)
begin
    if (ap_sig_bdd_1024) begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_57 assign process. ///
always @ (ap_sig_bdd_273)
begin
    if (ap_sig_bdd_273) begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st59_fsm_58 assign process. ///
always @ (ap_sig_bdd_289)
begin
    if (ap_sig_bdd_289) begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_949)
begin
    if (ap_sig_bdd_949) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_59 assign process. ///
always @ (ap_sig_bdd_1034)
begin
    if (ap_sig_bdd_1034) begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_60 assign process. ///
always @ (ap_sig_bdd_1042)
begin
    if (ap_sig_bdd_1042) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st62_fsm_61 assign process. ///
always @ (ap_sig_bdd_1050)
begin
    if (ap_sig_bdd_1050) begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_62 assign process. ///
always @ (ap_sig_bdd_1058)
begin
    if (ap_sig_bdd_1058) begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_63 assign process. ///
always @ (ap_sig_bdd_1066)
begin
    if (ap_sig_bdd_1066) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_64 assign process. ///
always @ (ap_sig_bdd_1074)
begin
    if (ap_sig_bdd_1074) begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st66_fsm_65 assign process. ///
always @ (ap_sig_bdd_1082)
begin
    if (ap_sig_bdd_1082) begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st67_fsm_66 assign process. ///
always @ (ap_sig_bdd_1090)
begin
    if (ap_sig_bdd_1090) begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st68_fsm_67 assign process. ///
always @ (ap_sig_bdd_1098)
begin
    if (ap_sig_bdd_1098) begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_68 assign process. ///
always @ (ap_sig_bdd_1106)
begin
    if (ap_sig_bdd_1106) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_957)
begin
    if (ap_sig_bdd_957) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_1114)
begin
    if (ap_sig_bdd_1114) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_70 assign process. ///
always @ (ap_sig_bdd_1122)
begin
    if (ap_sig_bdd_1122) begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st72_fsm_71 assign process. ///
always @ (ap_sig_bdd_1130)
begin
    if (ap_sig_bdd_1130) begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st73_fsm_72 assign process. ///
always @ (ap_sig_bdd_1138)
begin
    if (ap_sig_bdd_1138) begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_73 assign process. ///
always @ (ap_sig_bdd_441)
begin
    if (ap_sig_bdd_441) begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st75_fsm_74 assign process. ///
always @ (ap_sig_bdd_564)
begin
    if (ap_sig_bdd_564) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st76_fsm_75 assign process. ///
always @ (ap_sig_bdd_1148)
begin
    if (ap_sig_bdd_1148) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_1156)
begin
    if (ap_sig_bdd_1156) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_77 assign process. ///
always @ (ap_sig_bdd_243)
begin
    if (ap_sig_bdd_243) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st79_fsm_78 assign process. ///
always @ (ap_sig_bdd_592)
begin
    if (ap_sig_bdd_592) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_316)
begin
    if (ap_sig_bdd_316) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_327)
begin
    if (ap_sig_bdd_327) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st94_fsm_93 assign process. ///
always @ (ap_sig_bdd_453)
begin
    if (ap_sig_bdd_453) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_578)
begin
    if (ap_sig_bdd_578) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_out_correlation_TREADY assign process. ///
always @ (out_correlation_TREADY or ap_reg_ioackin_out_correlation_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_out_correlation_TREADY)) begin
        ap_sig_ioackin_out_correlation_TREADY = out_correlation_TREADY;
    end else begin
        ap_sig_ioackin_out_correlation_TREADY = ap_const_logic_1;
    end
end

/// grp_fu_410_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_410_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        grp_fu_410_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_410_opcode = 'bx;
    end
end

/// grp_fu_410_p0 assign process. ///
always @ (reg_463 or reg_498 or ap_sig_cseq_ST_st33_fsm_32 or tmp_74_i_reg_679 or ap_sig_cseq_ST_st54_fsm_53 or sum_weight_returnA_returnB2_i_reg_369 or sum_weight_returnSquareA2_i_reg_389 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        grp_fu_410_p0 = tmp_74_i_reg_679;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_410_p0 = reg_463;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_410_p0 = reg_498;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_410_p0 = sum_weight_returnSquareA2_i_reg_389;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_410_p0 = sum_weight_returnA_returnB2_i_reg_369;
    end else begin
        grp_fu_410_p0 = 'bx;
    end
end

/// grp_fu_410_p1 assign process. ///
always @ (reg_480 or reg_493 or ap_sig_cseq_ST_st33_fsm_32 or tmp_72_i_reg_674 or ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_410_p1 = tmp_72_i_reg_674;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53))) begin
        grp_fu_410_p1 = reg_480;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        grp_fu_410_p1 = reg_493;
    end else begin
        grp_fu_410_p1 = 'bx;
    end
end

/// grp_fu_416_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st54_fsm_53)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_416_opcode = ap_const_lv2_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_416_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_416_opcode = 'bx;
    end
end

/// grp_fu_416_p0 assign process. ///
always @ (reg_471 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st54_fsm_53 or sum_weight_returnSquare2_i_reg_349)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_416_p0 = reg_471;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_416_p0 = sum_weight_returnSquare2_i_reg_349;
    end else begin
        grp_fu_416_p0 = 'bx;
    end
end

/// grp_fu_421_p0 assign process. ///
always @ (reg_463 or reg_471 or reg_480 or volatilityA_reg_684 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        grp_fu_421_p0 = volatilityA_reg_684;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        grp_fu_421_p0 = reg_471;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_421_p0 = reg_480;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49))) begin
        grp_fu_421_p0 = reg_463;
    end else begin
        grp_fu_421_p0 = 'bx;
    end
end

/// grp_fu_421_p1 assign process. ///
always @ (reg_463 or volatilityB_reg_689 or sum_weight_returnA2_i_reg_399 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        grp_fu_421_p1 = volatilityB_reg_689;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_421_p1 = reg_463;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29))) begin
        grp_fu_421_p1 = sum_weight_returnA2_i_reg_399;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_421_p1 = ap_const_lv32_40000000;
    end else begin
        grp_fu_421_p1 = 'bx;
    end
end

/// grp_fu_426_p0 assign process. ///
always @ (reg_471 or reg_487 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_426_p0 = reg_487;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49))) begin
        grp_fu_426_p0 = reg_471;
    end else begin
        grp_fu_426_p0 = 'bx;
    end
end

/// grp_fu_426_p1 assign process. ///
always @ (reg_471 or sum_weight_return2_i_reg_359 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_426_p1 = reg_471;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_426_p1 = sum_weight_return2_i_reg_359;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_426_p1 = ap_const_lv32_40000000;
    end else begin
        grp_fu_426_p1 = 'bx;
    end
end

/// grp_fu_431_p1 assign process. ///
always @ (reg_471 or sum_weight_return2_i_reg_359 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_431_p1 = reg_471;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_431_p1 = sum_weight_return2_i_reg_359;
    end else begin
        grp_fu_431_p1 = 'bx;
    end
end

/// grp_fu_438_ce assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st78_fsm_77 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st58_fsm_57 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st59_fsm_58 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st74_fsm_73 or ap_sig_cseq_ST_st94_fsm_93 or ap_sig_ioackin_out_correlation_TREADY or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st55_fsm_54 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st75_fsm_74 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st36_fsm_35 or ap_sig_cseq_ST_st56_fsm_55 or ap_sig_cseq_ST_st57_fsm_56 or ap_sig_cseq_ST_st60_fsm_59 or ap_sig_cseq_ST_st61_fsm_60 or ap_sig_cseq_ST_st62_fsm_61 or ap_sig_cseq_ST_st63_fsm_62 or ap_sig_cseq_ST_st64_fsm_63 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st66_fsm_65 or ap_sig_cseq_ST_st67_fsm_66 or ap_sig_cseq_ST_st68_fsm_67 or ap_sig_cseq_ST_st69_fsm_68 or ap_sig_cseq_ST_st70_fsm_69 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st76_fsm_75 or ap_sig_cseq_ST_st77_fsm_76)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | ((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & (ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) | (ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63) | (ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64) | (ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65) | (ap_const_logic_1 == ap_sig_cseq_ST_st67_fsm_66) | (ap_const_logic_1 == ap_sig_cseq_ST_st68_fsm_67) | (ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68) | (ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76))) begin
        grp_fu_438_ce = ap_const_logic_0;
    end else begin
        grp_fu_438_ce = ap_const_logic_1;
    end
end

/// grp_fu_438_p0 assign process. ///
always @ (reg_498 or ap_sig_cseq_ST_st38_fsm_37 or reg_505 or sum_returnA2_i_reg_379 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st39_fsm_38 or ap_sig_cseq_ST_st79_fsm_78)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        grp_fu_438_p0 = reg_498;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78))) begin
        grp_fu_438_p0 = reg_505;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_438_p0 = sum_returnA2_i_reg_379;
    end else begin
        grp_fu_438_p0 = 'bx;
    end
end

/// grp_fu_438_p1 assign process. ///
always @ (reg_480 or ap_sig_cseq_ST_st38_fsm_37 or tmp_i_54_reg_567 or sum_weight2_i_reg_329 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st39_fsm_38 or ap_sig_cseq_ST_st79_fsm_78)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        grp_fu_438_p1 = reg_480;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        grp_fu_438_p1 = sum_weight2_i_reg_329;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_438_p1 = tmp_i_54_reg_567;
    end else begin
        grp_fu_438_p1 = 'bx;
    end
end

/// grp_fu_443_p0 assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or reg_510 or sum_return2_i_reg_339 or ap_sig_cseq_ST_st9_fsm_8)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_443_p0 = reg_510;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_443_p0 = sum_return2_i_reg_339;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

/// grp_fu_443_p1 assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or tmp_i_54_reg_567 or sum_weight2_i_reg_329 or ap_sig_cseq_ST_st9_fsm_8)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_443_p1 = sum_weight2_i_reg_329;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_443_p1 = tmp_i_54_reg_567;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

/// out_correlation_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st94_fsm_93 or ap_reg_ioackin_out_correlation_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) & (ap_const_logic_0 == ap_reg_ioackin_out_correlation_TREADY))) begin
        out_correlation_TVALID = ap_const_logic_1;
    end else begin
        out_correlation_TVALID = ap_const_logic_0;
    end
end

/// sum_returnA_in_c1_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_returnA_in_c1_V_read = ap_const_logic_1;
    end else begin
        sum_returnA_in_c1_V_read = ap_const_logic_0;
    end
end

/// sum_returnA_in_c2_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_returnA_in_c2_V_read = ap_const_logic_1;
    end else begin
        sum_returnA_in_c2_V_read = ap_const_logic_0;
    end
end

/// sum_return_in_c1_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_return_in_c1_V_read = ap_const_logic_1;
    end else begin
        sum_return_in_c1_V_read = ap_const_logic_0;
    end
end

/// sum_return_in_c2_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_return_in_c2_V_read = ap_const_logic_1;
    end else begin
        sum_return_in_c2_V_read = ap_const_logic_0;
    end
end

/// sum_weight_in_c1_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_in_c1_V_read = ap_const_logic_1;
    end else begin
        sum_weight_in_c1_V_read = ap_const_logic_0;
    end
end

/// sum_weight_in_c2_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_in_c2_V_read = ap_const_logic_1;
    end else begin
        sum_weight_in_c2_V_read = ap_const_logic_0;
    end
end

/// sum_weight_returnA_in_c1_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnA_in_c1_V_read = ap_const_logic_1;
    end else begin
        sum_weight_returnA_in_c1_V_read = ap_const_logic_0;
    end
end

/// sum_weight_returnA_in_c2_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnA_in_c2_V_read = ap_const_logic_1;
    end else begin
        sum_weight_returnA_in_c2_V_read = ap_const_logic_0;
    end
end

/// sum_weight_returnA_returnB_in_2_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnA_returnB_in_2_read = ap_const_logic_1;
    end else begin
        sum_weight_returnA_returnB_in_2_read = ap_const_logic_0;
    end
end

/// sum_weight_returnA_returnB_in_s_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnA_returnB_in_s_read = ap_const_logic_1;
    end else begin
        sum_weight_returnA_returnB_in_s_read = ap_const_logic_0;
    end
end

/// sum_weight_returnSquareA_in_c1_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnSquareA_in_c1_read = ap_const_logic_1;
    end else begin
        sum_weight_returnSquareA_in_c1_read = ap_const_logic_0;
    end
end

/// sum_weight_returnSquareA_in_c2_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnSquareA_in_c2_read = ap_const_logic_1;
    end else begin
        sum_weight_returnSquareA_in_c2_read = ap_const_logic_0;
    end
end

/// sum_weight_returnSquare_in_c1_s_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnSquare_in_c1_s_read = ap_const_logic_1;
    end else begin
        sum_weight_returnSquare_in_c1_s_read = ap_const_logic_0;
    end
end

/// sum_weight_returnSquare_in_c2_s_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_returnSquare_in_c2_s_read = ap_const_logic_1;
    end else begin
        sum_weight_returnSquare_in_c2_s_read = ap_const_logic_0;
    end
end

/// sum_weight_return_in_c1_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_return_in_c1_V_read = ap_const_logic_1;
    end else begin
        sum_weight_return_in_c1_V_read = ap_const_logic_0;
    end
end

/// sum_weight_return_in_c2_V_read assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or tmp_fu_536_p1 or ap_sig_bdd_385)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & ~ap_sig_bdd_385)) begin
        sum_weight_return_in_c2_V_read = ap_const_logic_1;
    end else begin
        sum_weight_return_in_c2_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_304 or tmp_45_i_fu_531_p2 or ap_sig_bdd_385 or ap_sig_ioackin_out_correlation_TREADY)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_304) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (((tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~ap_sig_bdd_385)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if ((~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~ap_sig_bdd_385)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_out_correlation_TREADY)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st94_fsm_93;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_1006 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1006 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_1016 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1016 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_1024 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1024 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_1034 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1034 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_1042 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1042 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_1050 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1050 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_1058 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1058 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_1066 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1066 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_1074 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1074 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_1082 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1082 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_1090 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1090 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_1098 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1098 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end

/// ap_sig_bdd_1106 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1106 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_1114 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1114 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_1122 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_113 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_113 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_1130 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1130 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_1138 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1138 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_1148 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1148 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_1156 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_208 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_208 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_215 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_215 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_227 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_227 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_234 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_234 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_243 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_243 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_258 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_273 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_273 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_282 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_282 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_289 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_289 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_304 assign process. ///
always @ (ap_start or ap_done_reg or NUMBER_OF_DAYS_empty_n or NUMBER_OF_INDICES_empty_n)
begin
    ap_sig_bdd_304 = ((NUMBER_OF_INDICES_empty_n == ap_const_logic_0) | (NUMBER_OF_DAYS_empty_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_316 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_316 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_327 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_327 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_385 assign process. ///
always @ (sum_weight_in_c1_V_empty_n or sum_return_in_c1_V_empty_n or sum_weight_returnSquare_in_c1_s_empty_n or sum_weight_return_in_c1_V_empty_n or sum_weight_returnA_returnB_in_s_empty_n or sum_returnA_in_c1_V_empty_n or sum_weight_returnSquareA_in_c1_empty_n or sum_weight_returnA_in_c1_V_empty_n or sum_weight_in_c2_V_empty_n or sum_return_in_c2_V_empty_n or sum_weight_returnSquare_in_c2_s_empty_n or sum_weight_return_in_c2_V_empty_n or sum_weight_returnA_returnB_in_2_empty_n or sum_returnA_in_c2_V_empty_n or sum_weight_returnSquareA_in_c2_empty_n or sum_weight_returnA_in_c2_V_empty_n or tmp_45_i_fu_531_p2 or tmp_fu_536_p1)
begin
    ap_sig_bdd_385 = (((sum_weight_in_c2_V_empty_n == ap_const_logic_0) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & (sum_return_in_c2_V_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnSquare_in_c2_s_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_return_in_c2_V_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnA_returnB_in_2_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & (sum_returnA_in_c2_V_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnSquareA_in_c2_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnA_in_c2_V_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & (sum_weight_in_c1_V_empty_n == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & (sum_return_in_c1_V_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnSquare_in_c1_s_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_return_in_c1_V_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnA_returnB_in_s_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & (sum_returnA_in_c1_V_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnSquareA_in_c1_empty_n == ap_const_logic_0)) | (~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_536_p1) & (sum_weight_returnA_in_c1_V_empty_n == ap_const_logic_0)));
end

/// ap_sig_bdd_423 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or tmp_45_i_fu_531_p2 or ap_sig_bdd_385)
begin
    ap_sig_bdd_423 = ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_45_i_fu_531_p2 == ap_const_lv1_0) & ~ap_sig_bdd_385);
end

/// ap_sig_bdd_432 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_432 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_441 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_441 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_453 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_453 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_514 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_514 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_521 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_521 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_528 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_528 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_542 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_542 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_549 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_549 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_556 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_556 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_564 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_564 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_578 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_578 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_585 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_585 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_592 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_592 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_604 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_604 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_933 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_933 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_941 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_941 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_949 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_949 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_957 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_957 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_968 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_968 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_976 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_976 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_987 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_987 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_998 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_998 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end
assign column_index_cast_i_fu_527_p1 = column_index_i_reg_318;
assign column_index_fu_545_p2 = (column_index_i_reg_318 + ap_const_lv31_1);
assign grp_fu_410_ce = ap_const_logic_1;
assign grp_fu_416_ce = ap_const_logic_1;
assign grp_fu_416_p1 = reg_487;
assign grp_fu_421_ce = ap_const_logic_1;
assign grp_fu_426_ce = ap_const_logic_1;
assign grp_fu_431_ce = ap_const_logic_1;
assign grp_fu_431_p0 = reg_463;
assign grp_fu_443_ce = ap_const_logic_1;
assign grp_fu_450_ce = ap_const_logic_1;
assign grp_fu_450_p0 = tmp_i_reg_562;
assign grp_fu_453_ce = ap_const_logic_1;
assign grp_fu_453_p0 = ap_const_lv32_0;
assign grp_fu_453_p1 = reg_498;
assign grp_fu_458_ce = ap_const_logic_1;
assign grp_fu_458_p0 = ap_const_lv32_0;
assign grp_fu_458_p1 = reg_510;
assign out_correlation_TDATA = grp_fu_438_p2;
assign out_correlation_TDEST = ap_const_lv1_0;
assign out_correlation_TID = ap_const_lv1_0;
assign out_correlation_TKEEP = ap_const_lv4_F;
assign out_correlation_TLAST = tmp_84_i_reg_664;
assign out_correlation_TSTRB = ap_const_lv4_1;
assign out_correlation_TUSER = ap_const_lv1_0;
assign tmp_44_i_fu_522_p2 = ($signed(NUMBER_OF_INDICES_read_reg_556) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_45_i_fu_531_p2 = ($signed(column_index_cast_i_fu_527_p1) < $signed(NUMBER_OF_INDICES_read_reg_556)? 1'b1: 1'b0);
assign tmp_84_i_fu_540_p2 = (column_index_cast_i_fu_527_p1 == tmp_44_i_reg_573? 1'b1: 1'b0);
assign tmp_fu_536_p1 = column_index_i_reg_318[0:0];
assign tmp_i_fu_516_p2 = ($signed(NUMBER_OF_DAYS_dout) + $signed(ap_const_lv32_FFFFFFFF));


endmodule //correlation_accel_v4_backEnd

