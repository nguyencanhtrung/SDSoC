// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="correlation_accel_v1,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.950000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.338000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=37,HLS_SYN_FF=12517,HLS_SYN_LUT=12846}" *)

module correlation_accel_v1 (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem32_AWVALID,
        m_axi_gmem32_AWREADY,
        m_axi_gmem32_AWADDR,
        m_axi_gmem32_AWID,
        m_axi_gmem32_AWLEN,
        m_axi_gmem32_AWSIZE,
        m_axi_gmem32_AWBURST,
        m_axi_gmem32_AWLOCK,
        m_axi_gmem32_AWCACHE,
        m_axi_gmem32_AWPROT,
        m_axi_gmem32_AWQOS,
        m_axi_gmem32_AWREGION,
        m_axi_gmem32_AWUSER,
        m_axi_gmem32_WVALID,
        m_axi_gmem32_WREADY,
        m_axi_gmem32_WDATA,
        m_axi_gmem32_WSTRB,
        m_axi_gmem32_WLAST,
        m_axi_gmem32_WID,
        m_axi_gmem32_WUSER,
        m_axi_gmem32_ARVALID,
        m_axi_gmem32_ARREADY,
        m_axi_gmem32_ARADDR,
        m_axi_gmem32_ARID,
        m_axi_gmem32_ARLEN,
        m_axi_gmem32_ARSIZE,
        m_axi_gmem32_ARBURST,
        m_axi_gmem32_ARLOCK,
        m_axi_gmem32_ARCACHE,
        m_axi_gmem32_ARPROT,
        m_axi_gmem32_ARQOS,
        m_axi_gmem32_ARREGION,
        m_axi_gmem32_ARUSER,
        m_axi_gmem32_RVALID,
        m_axi_gmem32_RREADY,
        m_axi_gmem32_RDATA,
        m_axi_gmem32_RLAST,
        m_axi_gmem32_RID,
        m_axi_gmem32_RUSER,
        m_axi_gmem32_RRESP,
        m_axi_gmem32_BVALID,
        m_axi_gmem32_BREADY,
        m_axi_gmem32_BRESP,
        m_axi_gmem32_BID,
        m_axi_gmem32_BUSER,
        number_of_days,
        number_of_indices,
        in_indices,
        out_correlation,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 220'b1;
parameter    ap_ST_st2_fsm_1 = 220'b10;
parameter    ap_ST_st3_fsm_2 = 220'b100;
parameter    ap_ST_st4_fsm_3 = 220'b1000;
parameter    ap_ST_st5_fsm_4 = 220'b10000;
parameter    ap_ST_st6_fsm_5 = 220'b100000;
parameter    ap_ST_st7_fsm_6 = 220'b1000000;
parameter    ap_ST_st8_fsm_7 = 220'b10000000;
parameter    ap_ST_st9_fsm_8 = 220'b100000000;
parameter    ap_ST_st10_fsm_9 = 220'b1000000000;
parameter    ap_ST_st11_fsm_10 = 220'b10000000000;
parameter    ap_ST_st12_fsm_11 = 220'b100000000000;
parameter    ap_ST_st13_fsm_12 = 220'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 220'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 220'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 220'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 220'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 220'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 220'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 220'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 220'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 220'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 220'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 220'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 220'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 220'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 220'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 220'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 220'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 220'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 220'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 220'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 220'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 220'b1000000000000000000000000000000000;
parameter    ap_ST_pp0_stg0_fsm_34 = 220'b10000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_35 = 220'b100000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_36 = 220'b1000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_37 = 220'b10000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_38 = 220'b100000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_39 = 220'b1000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_40 = 220'b10000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_41 = 220'b100000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_42 = 220'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_43 = 220'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_44 = 220'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_45 = 220'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_46 = 220'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_47 = 220'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_pp1_stg0_fsm_48 = 220'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_49 = 220'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_50 = 220'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_51 = 220'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp2_stg0_fsm_52 = 220'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp2_stg1_fsm_53 = 220'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_54 = 220'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_55 = 220'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg0_fsm_56 = 220'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg1_fsm_57 = 220'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg2_fsm_58 = 220'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg3_fsm_59 = 220'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg4_fsm_60 = 220'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg5_fsm_61 = 220'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg6_fsm_62 = 220'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg7_fsm_63 = 220'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg8_fsm_64 = 220'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st147_fsm_65 = 220'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st148_fsm_66 = 220'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_67 = 220'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st150_fsm_68 = 220'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st151_fsm_69 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st152_fsm_70 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st153_fsm_71 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st154_fsm_72 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st155_fsm_73 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st156_fsm_74 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st157_fsm_75 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st158_fsm_76 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st159_fsm_77 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st160_fsm_78 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st161_fsm_79 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st162_fsm_80 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st163_fsm_81 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st164_fsm_82 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st165_fsm_83 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st166_fsm_84 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st167_fsm_85 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st168_fsm_86 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st169_fsm_87 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st170_fsm_88 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st171_fsm_89 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st172_fsm_90 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st173_fsm_91 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st174_fsm_92 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st175_fsm_93 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st176_fsm_94 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st177_fsm_95 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st178_fsm_96 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st179_fsm_97 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st180_fsm_98 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st181_fsm_99 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st182_fsm_100 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st183_fsm_101 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st184_fsm_102 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st185_fsm_103 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st186_fsm_104 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st187_fsm_105 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st188_fsm_106 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st189_fsm_107 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st190_fsm_108 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st191_fsm_109 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st192_fsm_110 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st193_fsm_111 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st194_fsm_112 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st195_fsm_113 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st196_fsm_114 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st197_fsm_115 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st198_fsm_116 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st199_fsm_117 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st200_fsm_118 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st201_fsm_119 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st202_fsm_120 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st203_fsm_121 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st204_fsm_122 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st205_fsm_123 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st206_fsm_124 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st207_fsm_125 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st208_fsm_126 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st209_fsm_127 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st210_fsm_128 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st211_fsm_129 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st212_fsm_130 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st213_fsm_131 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st214_fsm_132 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st215_fsm_133 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st216_fsm_134 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st217_fsm_135 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st218_fsm_136 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st219_fsm_137 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st220_fsm_138 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st221_fsm_139 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st222_fsm_140 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st223_fsm_141 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st224_fsm_142 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st225_fsm_143 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st226_fsm_144 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st227_fsm_145 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st228_fsm_146 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st229_fsm_147 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st230_fsm_148 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st231_fsm_149 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st232_fsm_150 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st233_fsm_151 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st234_fsm_152 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st235_fsm_153 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st236_fsm_154 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st237_fsm_155 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st238_fsm_156 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st239_fsm_157 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st240_fsm_158 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st241_fsm_159 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st242_fsm_160 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st243_fsm_161 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st244_fsm_162 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st245_fsm_163 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st246_fsm_164 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st247_fsm_165 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st248_fsm_166 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st249_fsm_167 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st250_fsm_168 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st251_fsm_169 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st252_fsm_170 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st253_fsm_171 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st254_fsm_172 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st255_fsm_173 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st256_fsm_174 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st257_fsm_175 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st258_fsm_176 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st259_fsm_177 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st260_fsm_178 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st261_fsm_179 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st262_fsm_180 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st263_fsm_181 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st264_fsm_182 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st265_fsm_183 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st266_fsm_184 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st267_fsm_185 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st268_fsm_186 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st269_fsm_187 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st270_fsm_188 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st271_fsm_189 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st272_fsm_190 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st273_fsm_191 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st274_fsm_192 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st275_fsm_193 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st276_fsm_194 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st277_fsm_195 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st278_fsm_196 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st279_fsm_197 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st280_fsm_198 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st281_fsm_199 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st282_fsm_200 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st283_fsm_201 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st284_fsm_202 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st285_fsm_203 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st286_fsm_204 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st287_fsm_205 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st288_fsm_206 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st289_fsm_207 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st290_fsm_208 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st291_fsm_209 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st292_fsm_210 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st293_fsm_211 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st294_fsm_212 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st295_fsm_213 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st296_fsm_214 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st297_fsm_215 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st298_fsm_216 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st299_fsm_217 = 220'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st300_fsm_218 = 220'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st301_fsm_219 = 220'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_M_AXI_GMEM32_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM32_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM32_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_M_AXI_GMEM32_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM32_BUSER_WIDTH = 1;
parameter    C_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM32_USER_VALUE = 0;
parameter    C_M_AXI_GMEM32_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM32_CACHE_VALUE = 3;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_68 = 32'b1101000;
parameter    ap_const_lv32_8F = 32'b10001111;
parameter    ap_const_lv32_B9 = 32'b10111001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_6C = 32'b1101100;
parameter    ap_const_lv32_75 = 32'b1110101;
parameter    ap_const_lv32_98 = 32'b10011000;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_D7 = 32'b11010111;
parameter    ap_const_lv32_93 = 32'b10010011;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_71 = 32'b1110001;
parameter    ap_const_lv32_9C = 32'b10011100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_B4 = 32'b10110100;
parameter    ap_const_lv32_D6 = 32'b11010110;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv31_2 = 31'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv32_DB = 32'b11011011;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_D8 = 32'b11011000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_69 = 32'b1101001;
parameter    ap_const_lv32_6D = 32'b1101101;
parameter    ap_const_lv32_90 = 32'b10010000;
parameter    ap_const_lv32_94 = 32'b10010100;
parameter    ap_const_lv32_3F70A3D7 = 32'b111111011100001010001111010111;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_8B = 32'b10001011;
parameter    ap_const_lv32_B5 = 32'b10110101;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_72 = 32'b1110010;
parameter    ap_const_lv32_76 = 32'b1110110;
parameter    ap_const_lv32_BA = 32'b10111010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_99 = 32'b10011001;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv8_FC = 8'b11111100;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv31_6 = 31'b110;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_73 = 32'b1110011;
parameter    ap_const_lv32_74 = 32'b1110100;
parameter    ap_const_lv32_77 = 32'b1110111;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_79 = 32'b1111001;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_7B = 32'b1111011;
parameter    ap_const_lv32_7C = 32'b1111100;
parameter    ap_const_lv32_7D = 32'b1111101;
parameter    ap_const_lv32_7E = 32'b1111110;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_81 = 32'b10000001;
parameter    ap_const_lv32_82 = 32'b10000010;
parameter    ap_const_lv32_83 = 32'b10000011;
parameter    ap_const_lv32_84 = 32'b10000100;
parameter    ap_const_lv32_85 = 32'b10000101;
parameter    ap_const_lv32_86 = 32'b10000110;
parameter    ap_const_lv32_87 = 32'b10000111;
parameter    ap_const_lv32_88 = 32'b10001000;
parameter    ap_const_lv32_89 = 32'b10001001;
parameter    ap_const_lv32_8A = 32'b10001010;
parameter    ap_const_lv32_8C = 32'b10001100;
parameter    ap_const_lv32_8D = 32'b10001101;
parameter    ap_const_lv32_8E = 32'b10001110;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv32_92 = 32'b10010010;
parameter    ap_const_lv32_BB = 32'b10111011;
parameter    ap_const_lv32_BC = 32'b10111100;
parameter    ap_const_lv32_BD = 32'b10111101;
parameter    ap_const_lv32_BE = 32'b10111110;
parameter    ap_const_lv32_BF = 32'b10111111;
parameter    ap_const_lv32_C0 = 32'b11000000;
parameter    ap_const_lv32_C1 = 32'b11000001;
parameter    ap_const_lv32_C2 = 32'b11000010;
parameter    ap_const_lv32_C3 = 32'b11000011;
parameter    ap_const_lv32_C4 = 32'b11000100;
parameter    ap_const_lv32_C5 = 32'b11000101;
parameter    ap_const_lv32_C6 = 32'b11000110;
parameter    ap_const_lv32_C7 = 32'b11000111;
parameter    ap_const_lv32_C8 = 32'b11001000;
parameter    ap_const_lv32_C9 = 32'b11001001;
parameter    ap_const_lv32_CA = 32'b11001010;
parameter    ap_const_lv32_CB = 32'b11001011;
parameter    ap_const_lv32_CC = 32'b11001100;
parameter    ap_const_lv32_CD = 32'b11001101;
parameter    ap_const_lv32_CE = 32'b11001110;
parameter    ap_const_lv32_CF = 32'b11001111;
parameter    ap_const_lv32_D0 = 32'b11010000;
parameter    ap_const_lv32_D1 = 32'b11010001;
parameter    ap_const_lv32_D2 = 32'b11010010;
parameter    ap_const_lv32_D3 = 32'b11010011;
parameter    ap_const_lv32_D4 = 32'b11010100;
parameter    ap_const_lv32_D5 = 32'b11010101;
parameter    ap_true = 1'b1;
parameter    C_M_AXI_GMEM32_WSTRB_WIDTH = (C_M_AXI_GMEM32_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem32_AWVALID;
input   m_axi_gmem32_AWREADY;
output  [C_M_AXI_GMEM32_ADDR_WIDTH - 1 : 0] m_axi_gmem32_AWADDR;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_AWID;
output  [7:0] m_axi_gmem32_AWLEN;
output  [2:0] m_axi_gmem32_AWSIZE;
output  [1:0] m_axi_gmem32_AWBURST;
output  [1:0] m_axi_gmem32_AWLOCK;
output  [3:0] m_axi_gmem32_AWCACHE;
output  [2:0] m_axi_gmem32_AWPROT;
output  [3:0] m_axi_gmem32_AWQOS;
output  [3:0] m_axi_gmem32_AWREGION;
output  [C_M_AXI_GMEM32_AWUSER_WIDTH - 1 : 0] m_axi_gmem32_AWUSER;
output   m_axi_gmem32_WVALID;
input   m_axi_gmem32_WREADY;
output  [C_M_AXI_GMEM32_DATA_WIDTH - 1 : 0] m_axi_gmem32_WDATA;
output  [C_M_AXI_GMEM32_WSTRB_WIDTH - 1 : 0] m_axi_gmem32_WSTRB;
output   m_axi_gmem32_WLAST;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_WID;
output  [C_M_AXI_GMEM32_WUSER_WIDTH - 1 : 0] m_axi_gmem32_WUSER;
output   m_axi_gmem32_ARVALID;
input   m_axi_gmem32_ARREADY;
output  [C_M_AXI_GMEM32_ADDR_WIDTH - 1 : 0] m_axi_gmem32_ARADDR;
output  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_ARID;
output  [7:0] m_axi_gmem32_ARLEN;
output  [2:0] m_axi_gmem32_ARSIZE;
output  [1:0] m_axi_gmem32_ARBURST;
output  [1:0] m_axi_gmem32_ARLOCK;
output  [3:0] m_axi_gmem32_ARCACHE;
output  [2:0] m_axi_gmem32_ARPROT;
output  [3:0] m_axi_gmem32_ARQOS;
output  [3:0] m_axi_gmem32_ARREGION;
output  [C_M_AXI_GMEM32_ARUSER_WIDTH - 1 : 0] m_axi_gmem32_ARUSER;
input   m_axi_gmem32_RVALID;
output   m_axi_gmem32_RREADY;
input  [C_M_AXI_GMEM32_DATA_WIDTH - 1 : 0] m_axi_gmem32_RDATA;
input   m_axi_gmem32_RLAST;
input  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_RID;
input  [C_M_AXI_GMEM32_RUSER_WIDTH - 1 : 0] m_axi_gmem32_RUSER;
input  [1:0] m_axi_gmem32_RRESP;
input   m_axi_gmem32_BVALID;
output   m_axi_gmem32_BREADY;
input  [1:0] m_axi_gmem32_BRESP;
input  [C_M_AXI_GMEM32_ID_WIDTH - 1 : 0] m_axi_gmem32_BID;
input  [C_M_AXI_GMEM32_BUSER_WIDTH - 1 : 0] m_axi_gmem32_BUSER;
input  [31:0] number_of_days;
input  [31:0] number_of_indices;
input  [31:0] in_indices;
input  [31:0] out_correlation;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [219:0] ap_CS_fsm = 220'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_238;
reg   [7:0] weight_rom_address0;
reg    weight_rom_ce0;
reg    weight_rom_we0;
reg   [31:0] weight_rom_d0;
wire   [31:0] weight_rom_q0;
reg   [7:0] weight_rom_address1;
reg    weight_rom_ce1;
reg    weight_rom_we1;
reg   [31:0] weight_rom_d1;
wire   [31:0] weight_rom_q1;
reg   [7:0] bramA_address0;
reg    bramA_ce0;
reg    bramA_we0;
wire   [31:0] bramA_d0;
wire   [31:0] bramA_q0;
wire   [7:0] bramA_address1;
reg    bramA_ce1;
wire   [31:0] bramA_q1;
reg   [7:0] bramB_address0;
reg    bramB_ce0;
reg    bramB_we0;
wire   [31:0] bramB_d0;
wire   [31:0] bramB_q0;
reg   [31:0] counter = 32'b00000000000000000000000000000000;
reg    gmem32_AWVALID;
wire    gmem32_AWREADY;
wire   [31:0] gmem32_AWADDR;
wire   [0:0] gmem32_AWID;
wire   [31:0] gmem32_AWLEN;
wire   [2:0] gmem32_AWSIZE;
wire   [1:0] gmem32_AWBURST;
wire   [1:0] gmem32_AWLOCK;
wire   [3:0] gmem32_AWCACHE;
wire   [2:0] gmem32_AWPROT;
wire   [3:0] gmem32_AWQOS;
wire   [3:0] gmem32_AWREGION;
wire   [0:0] gmem32_AWUSER;
reg    gmem32_WVALID;
wire    gmem32_WREADY;
wire   [31:0] gmem32_WDATA;
wire   [3:0] gmem32_WSTRB;
wire    gmem32_WLAST;
wire   [0:0] gmem32_WID;
wire   [0:0] gmem32_WUSER;
reg    gmem32_ARVALID;
wire    gmem32_ARREADY;
reg   [31:0] gmem32_ARADDR;
wire   [0:0] gmem32_ARID;
wire   [31:0] gmem32_ARLEN;
wire   [2:0] gmem32_ARSIZE;
wire   [1:0] gmem32_ARBURST;
wire   [1:0] gmem32_ARLOCK;
wire   [3:0] gmem32_ARCACHE;
wire   [2:0] gmem32_ARPROT;
wire   [3:0] gmem32_ARQOS;
wire   [3:0] gmem32_ARREGION;
wire   [0:0] gmem32_ARUSER;
wire    gmem32_RVALID;
reg    gmem32_RREADY;
wire   [31:0] gmem32_RDATA;
wire    gmem32_RLAST;
wire   [0:0] gmem32_RID;
wire   [0:0] gmem32_RUSER;
wire   [1:0] gmem32_RRESP;
wire    gmem32_BVALID;
reg    gmem32_BREADY;
wire   [1:0] gmem32_BRESP;
wire   [0:0] gmem32_BID;
wire   [0:0] gmem32_BUSER;
wire    correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce;
reg   [29:0] indvar_reg_831;
reg   [29:0] ap_reg_ppstg_indvar_reg_831_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_34;
reg    ap_sig_bdd_426;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond2_reg_1790;
reg    ap_sig_bdd_435;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [29:0] indvar8_reg_852;
reg   [29:0] ap_reg_ppstg_indvar8_reg_852_pp1_it1;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_48;
reg    ap_sig_bdd_451;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg   [0:0] exitcond3_reg_1814;
reg    ap_sig_bdd_458;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg   [30:0] i1_reg_864;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_52;
reg    ap_sig_bdd_474;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
reg    ap_reg_ppiten_pp2_it3 = 1'b0;
reg    ap_reg_ppiten_pp2_it4 = 1'b0;
reg    ap_reg_ppiten_pp2_it5 = 1'b0;
reg    ap_reg_ppiten_pp2_it6 = 1'b0;
reg    ap_reg_ppiten_pp2_it7 = 1'b0;
reg    ap_reg_ppiten_pp2_it8 = 1'b0;
reg    ap_reg_ppiten_pp2_it9 = 1'b0;
reg    ap_reg_ppiten_pp2_it10 = 1'b0;
reg    ap_reg_ppiten_pp2_it11 = 1'b0;
reg    ap_reg_ppiten_pp2_it12 = 1'b0;
reg    ap_reg_ppiten_pp2_it13 = 1'b0;
reg    ap_reg_ppiten_pp2_it14 = 1'b0;
reg    ap_reg_ppiten_pp2_it15 = 1'b0;
reg    ap_reg_ppiten_pp2_it16 = 1'b0;
reg    ap_reg_ppiten_pp2_it17 = 1'b0;
reg    ap_reg_ppiten_pp2_it18 = 1'b0;
reg    ap_reg_ppiten_pp2_it19 = 1'b0;
reg    ap_reg_ppiten_pp2_it20 = 1'b0;
reg    ap_reg_ppiten_pp2_it21 = 1'b0;
reg    ap_reg_ppiten_pp2_it22 = 1'b0;
reg    ap_reg_ppiten_pp2_it23 = 1'b0;
reg    ap_reg_ppiten_pp2_it24 = 1'b0;
reg    ap_reg_ppiten_pp2_it25 = 1'b0;
reg    ap_reg_ppiten_pp2_it26 = 1'b0;
reg    ap_reg_ppiten_pp2_it27 = 1'b0;
reg    ap_reg_ppiten_pp2_it28 = 1'b0;
reg    ap_reg_ppiten_pp2_it29 = 1'b0;
reg    ap_reg_ppiten_pp2_it30 = 1'b0;
reg    ap_reg_ppiten_pp2_it31 = 1'b0;
reg    ap_reg_ppiten_pp2_it32 = 1'b0;
reg    ap_reg_ppiten_pp2_it33 = 1'b0;
reg    ap_reg_ppiten_pp2_it34 = 1'b0;
reg    ap_reg_ppiten_pp2_it35 = 1'b0;
reg   [31:0] sum_returnA_reg_876;
reg   [31:0] sum_returnB_reg_888;
reg   [31:0] sum_weight_returnSquareA_reg_900;
reg   [31:0] sum_weight_returnA_reg_912;
reg   [31:0] sum_weight_returnSquareB_reg_924;
reg   [31:0] sum_weight_returnB_reg_936;
reg   [31:0] sum_weight_returnA_returnB_reg_948;
reg   [2:0] i2_reg_960;
wire   [31:0] grp_fu_996_p2;
reg   [31:0] reg_1048;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_586;
reg   [0:0] tmp_12_reg_1823;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it26;
reg    ap_sig_cseq_ST_st181_fsm_99;
reg    ap_sig_bdd_602;
reg    ap_sig_cseq_ST_st186_fsm_104;
reg    ap_sig_bdd_610;
reg    ap_sig_cseq_ST_st225_fsm_143;
reg    ap_sig_bdd_618;
reg    ap_sig_cseq_ST_st267_fsm_185;
reg    ap_sig_bdd_626;
reg   [31:0] reg_1058;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_635;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it2;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it3;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it4;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it5;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it6;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it7;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it8;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it9;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it10;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it11;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it12;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it13;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it14;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it15;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it16;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it17;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it18;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it19;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it20;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it21;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it22;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it23;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it24;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it25;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it26;
reg   [31:0] ap_reg_ppstg_reg_1058_pp2_it27;
reg    ap_sig_cseq_ST_st129_fsm_55;
reg    ap_sig_bdd_674;
wire   [31:0] grp_fu_972_p2;
reg   [31:0] reg_1069;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_684;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it28;
reg    ap_sig_cseq_ST_pp2_stg1_fsm_53;
reg    ap_sig_bdd_696;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it29;
reg    ap_sig_cseq_ST_st190_fsm_108;
reg    ap_sig_bdd_708;
reg    ap_sig_cseq_ST_st199_fsm_117;
reg    ap_sig_bdd_716;
reg    ap_sig_cseq_ST_st234_fsm_152;
reg    ap_sig_bdd_724;
reg   [31:0] reg_1079;
wire   [31:0] grp_fu_1020_p2;
reg   [31:0] reg_1085;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it15;
reg    ap_sig_cseq_ST_st176_fsm_94;
reg    ap_sig_bdd_752;
reg    ap_sig_cseq_ST_st297_fsm_215;
reg    ap_sig_bdd_761;
reg    ap_sig_ioackin_gmem32_AWREADY;
reg   [31:0] reg_1095;
reg    ap_sig_cseq_ST_st229_fsm_147;
reg    ap_sig_bdd_784;
wire   [31:0] acc_returnA_q0;
reg   [31:0] reg_1101;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it24;
reg    ap_sig_cseq_ST_pp3_stg1_fsm_57;
reg    ap_sig_bdd_803;
reg    ap_reg_ppiten_pp3_it0 = 1'b0;
reg    ap_reg_ppiten_pp3_it1 = 1'b0;
reg   [0:0] exitcond_reg_1968;
wire   [31:0] acc_returnB_q1;
reg   [31:0] reg_1107;
wire   [31:0] acc_returnB_q0;
reg    ap_sig_cseq_ST_pp3_stg2_fsm_58;
reg    ap_sig_bdd_827;
wire   [31:0] grp_fu_1002_p2;
reg   [31:0] reg_1114;
wire   [31:0] acc_weight_returnA_q1;
reg   [31:0] reg_1120;
wire   [31:0] acc_weight_returnA_q0;
reg    ap_sig_cseq_ST_pp3_stg4_fsm_60;
reg    ap_sig_bdd_853;
wire   [31:0] acc_weight_returnB_q0;
reg   [31:0] reg_1127;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it27;
reg    ap_sig_cseq_ST_pp3_stg6_fsm_62;
reg    ap_sig_bdd_872;
wire   [31:0] grp_fu_1006_p2;
reg   [31:0] reg_1133;
wire   [31:0] acc_weight_returnSquareA_q0;
reg   [31:0] reg_1139;
reg    ap_sig_cseq_ST_pp3_stg3_fsm_59;
reg    ap_sig_bdd_895;
reg   [31:0] reg_1145;
wire   [31:0] acc_weight_returnSquareB_q1;
reg   [31:0] reg_1151;
wire   [31:0] acc_weight_returnSquareB_q0;
reg    ap_sig_cseq_ST_pp3_stg5_fsm_61;
reg    ap_sig_bdd_920;
wire   [31:0] acc_weight_returnA_returnB_q1;
reg   [31:0] reg_1158;
wire   [31:0] acc_weight_returnA_returnB_q0;
wire   [31:0] grp_fu_976_p2;
reg   [31:0] reg_1165;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it31;
reg    ap_sig_cseq_ST_st195_fsm_113;
reg    ap_sig_bdd_945;
wire   [31:0] grp_fu_980_p2;
reg   [31:0] reg_1173;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it33;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it34;
wire   [31:0] grp_fu_1025_p2;
reg   [31:0] reg_1179;
reg   [31:0] reg_1188;
reg    ap_sig_cseq_ST_st238_fsm_156;
reg    ap_sig_bdd_969;
wire   [32:0] tmp_59_cast_fu_1203_p1;
reg   [32:0] tmp_59_cast_reg_1491;
wire   [32:0] tmp_60_cast_fu_1217_p1;
reg   [32:0] tmp_60_cast_reg_1496;
wire   [7:0] i_2_fu_1232_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_990;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_999;
wire   [0:0] tmp_57_i_fu_1242_p2;
wire   [30:0] i_3_fu_1252_p2;
reg   [30:0] i_3_reg_1518;
wire  signed [31:0] tmp_1_fu_1258_p2;
reg  signed [31:0] tmp_1_reg_1523;
reg   [31:0] weight_rom_load_1_reg_1529;
wire   [31:0] tmp_fu_1263_p2;
reg   [31:0] tmp_reg_1534;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_1018;
wire   [31:0] grp_fu_1030_p1;
reg   [31:0] tmp_2_reg_1539;
wire   [29:0] tmp_6_fu_1268_p1;
reg   [29:0] tmp_6_reg_1545;
wire   [31:0] p_add_i32_shr_fu_1271_p1;
reg   [31:0] p_add_i32_shr_reg_1551;
wire   [2:0] acc_returnA_addr_gep_fu_259_p3;
reg   [2:0] acc_returnA_addr_reg_1556;
wire   [2:0] acc_returnB_addr_gep_fu_266_p3;
reg   [2:0] acc_returnB_addr_reg_1561;
wire   [2:0] acc_weight_returnSquareA_addr_gep_fu_273_p3;
reg   [2:0] acc_weight_returnSquareA_addr_reg_1566;
wire   [2:0] acc_weight_returnA_addr_gep_fu_280_p3;
reg   [2:0] acc_weight_returnA_addr_reg_1571;
wire   [2:0] acc_weight_returnSquareB_addr_gep_fu_287_p3;
reg   [2:0] acc_weight_returnSquareB_addr_reg_1576;
wire   [2:0] acc_weight_returnB_addr_gep_fu_294_p3;
reg   [2:0] acc_weight_returnB_addr_reg_1581;
wire   [2:0] acc_weight_returnA_returnB_add_gep_fu_301_p3;
reg   [2:0] acc_weight_returnA_returnB_add_reg_1586;
wire   [2:0] acc_returnA_addr_6_gep_fu_308_p3;
reg   [2:0] acc_returnA_addr_6_reg_1591;
wire   [2:0] acc_returnB_addr_6_gep_fu_315_p3;
reg   [2:0] acc_returnB_addr_6_reg_1596;
wire   [2:0] acc_weight_returnSquareA_addr_6_gep_fu_322_p3;
reg   [2:0] acc_weight_returnSquareA_addr_6_reg_1601;
wire   [2:0] acc_weight_returnA_addr_6_gep_fu_329_p3;
reg   [2:0] acc_weight_returnA_addr_6_reg_1606;
wire   [2:0] acc_weight_returnSquareB_addr_6_gep_fu_336_p3;
reg   [2:0] acc_weight_returnSquareB_addr_6_reg_1611;
wire   [2:0] acc_weight_returnB_addr_6_gep_fu_343_p3;
reg   [2:0] acc_weight_returnB_addr_6_reg_1616;
wire   [2:0] acc_weight_returnA_returnB_add_1_gep_fu_350_p3;
reg   [2:0] acc_weight_returnA_returnB_add_1_reg_1621;
wire   [2:0] acc_returnA_addr_7_gep_fu_357_p3;
reg   [2:0] acc_returnA_addr_7_reg_1626;
wire   [2:0] acc_returnB_addr_7_gep_fu_364_p3;
reg   [2:0] acc_returnB_addr_7_reg_1631;
wire   [2:0] acc_weight_returnSquareA_addr_7_gep_fu_371_p3;
reg   [2:0] acc_weight_returnSquareA_addr_7_reg_1636;
wire   [2:0] acc_weight_returnA_addr_7_gep_fu_378_p3;
reg   [2:0] acc_weight_returnA_addr_7_reg_1641;
wire   [2:0] acc_weight_returnSquareB_addr_7_gep_fu_385_p3;
reg   [2:0] acc_weight_returnSquareB_addr_7_reg_1646;
wire   [2:0] acc_weight_returnB_addr_7_gep_fu_392_p3;
reg   [2:0] acc_weight_returnB_addr_7_reg_1651;
wire   [2:0] acc_weight_returnA_returnB_add_2_gep_fu_399_p3;
reg   [2:0] acc_weight_returnA_returnB_add_2_reg_1656;
wire   [2:0] acc_returnA_addr_3_gep_fu_406_p3;
reg   [2:0] acc_returnA_addr_3_reg_1661;
wire   [2:0] acc_returnB_addr_3_gep_fu_413_p3;
reg   [2:0] acc_returnB_addr_3_reg_1666;
wire   [2:0] acc_weight_returnSquareA_addr_3_gep_fu_420_p3;
reg   [2:0] acc_weight_returnSquareA_addr_3_reg_1671;
wire   [2:0] acc_weight_returnA_addr_3_gep_fu_427_p3;
reg   [2:0] acc_weight_returnA_addr_3_reg_1676;
wire   [2:0] acc_weight_returnSquareB_addr_3_gep_fu_434_p3;
reg   [2:0] acc_weight_returnSquareB_addr_3_reg_1681;
wire   [2:0] acc_weight_returnB_addr_3_gep_fu_441_p3;
reg   [2:0] acc_weight_returnB_addr_3_reg_1686;
wire   [2:0] acc_weight_returnA_returnB_add_3_gep_fu_448_p3;
reg   [2:0] acc_weight_returnA_returnB_add_3_reg_1691;
wire   [2:0] acc_returnA_addr_4_gep_fu_455_p3;
reg   [2:0] acc_returnA_addr_4_reg_1696;
wire   [2:0] acc_returnB_addr_4_gep_fu_462_p3;
reg   [2:0] acc_returnB_addr_4_reg_1701;
wire   [2:0] acc_weight_returnSquareA_addr_4_gep_fu_469_p3;
reg   [2:0] acc_weight_returnSquareA_addr_4_reg_1706;
wire   [2:0] acc_weight_returnA_addr_4_gep_fu_476_p3;
reg   [2:0] acc_weight_returnA_addr_4_reg_1711;
wire   [2:0] acc_weight_returnSquareB_addr_4_gep_fu_483_p3;
reg   [2:0] acc_weight_returnSquareB_addr_4_reg_1716;
wire   [2:0] acc_weight_returnB_addr_4_gep_fu_490_p3;
reg   [2:0] acc_weight_returnB_addr_4_reg_1721;
wire   [2:0] acc_weight_returnA_returnB_add_4_gep_fu_497_p3;
reg   [2:0] acc_weight_returnA_returnB_add_4_reg_1726;
wire   [2:0] acc_returnA_addr_5_gep_fu_504_p3;
reg   [2:0] acc_returnA_addr_5_reg_1731;
wire   [2:0] acc_returnB_addr_5_gep_fu_511_p3;
reg   [2:0] acc_returnB_addr_5_reg_1736;
wire   [2:0] acc_weight_returnSquareA_addr_5_gep_fu_518_p3;
reg   [2:0] acc_weight_returnSquareA_addr_5_reg_1741;
wire   [2:0] acc_weight_returnA_addr_5_gep_fu_525_p3;
reg   [2:0] acc_weight_returnA_addr_5_reg_1746;
wire   [2:0] acc_weight_returnSquareB_addr_5_gep_fu_532_p3;
reg   [2:0] acc_weight_returnSquareB_addr_5_reg_1751;
wire   [2:0] acc_weight_returnB_addr_5_gep_fu_539_p3;
reg   [2:0] acc_weight_returnB_addr_5_reg_1756;
wire   [2:0] acc_weight_returnA_returnB_add_5_gep_fu_546_p3;
reg   [2:0] acc_weight_returnA_returnB_add_5_reg_1761;
wire  signed [31:0] next_mul_fu_1275_p2;
reg  signed [31:0] next_mul_reg_1766;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_1117;
wire   [31:0] row_index_cast_fu_1280_p1;
reg   [31:0] row_index_cast_reg_1771;
wire   [30:0] row_index_1_fu_1289_p2;
reg   [30:0] row_index_1_reg_1779;
reg   [31:0] gmem32_addr_reg_1784;
wire   [0:0] tmp_3_fu_1284_p2;
wire   [0:0] exitcond2_fu_1314_p2;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_1790_pp0_it1;
wire   [29:0] indvar_next_fu_1319_p2;
reg   [29:0] indvar_next_reg_1794;
wire  signed [31:0] column_index_fu_1330_p2;
reg  signed [31:0] column_index_reg_1799;
reg    ap_sig_cseq_ST_st38_fsm_35;
reg    ap_sig_bdd_1143;
reg   [31:0] gmem32_addr_1_reg_1808;
reg    ap_sig_cseq_ST_st44_fsm_41;
reg    ap_sig_bdd_1152;
wire   [0:0] exitcond3_fu_1365_p2;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_1814_pp1_it1;
wire   [29:0] indvar_next9_fu_1370_p2;
reg   [29:0] indvar_next9_reg_1818;
wire   [0:0] tmp_12_fu_1385_p2;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it1;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it2;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it3;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it4;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it5;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it6;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it7;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it8;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it9;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it10;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it11;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it12;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it13;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it14;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it16;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it17;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it18;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it19;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it20;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it21;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it22;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it23;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it25;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it30;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1823_pp2_it32;
wire   [30:0] i_fu_1390_p2;
reg   [30:0] i_reg_1827;
wire   [63:0] tmp_14_fu_1402_p1;
reg   [63:0] tmp_14_reg_1837;
reg   [31:0] bramA_load_reg_1853;
reg   [31:0] bramA_load_1_reg_1858;
reg   [31:0] bramB_load_reg_1863;
reg   [31:0] bramB_load_1_reg_1878;
reg   [2:0] acc_returnA_addr_1_reg_1883;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it29;
reg   [2:0] acc_returnB_addr_1_reg_1889;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it29;
reg   [2:0] acc_weight_returnSquareA_addr_1_reg_1895;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it32;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it33;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it34;
reg   [2:0] acc_weight_returnSquareB_addr_1_reg_1901;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it32;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it33;
reg   [2:0] ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it34;
reg   [2:0] acc_weight_returnA_addr_1_reg_1907;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it31;
reg   [2:0] acc_weight_returnB_addr_1_reg_1913;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it32;
reg   [2:0] acc_weight_returnA_returnB_add_6_reg_1919;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it18;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it19;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it20;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it21;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it22;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it23;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it24;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it25;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it26;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it27;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it28;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it29;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it30;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it31;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it32;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it33;
reg   [2:0] ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it34;
wire   [31:0] grp_fu_1043_p2;
reg   [31:0] lnReturnA_reg_1925;
reg   [31:0] lnReturnB_reg_1934;
reg   [31:0] tmp_24_reg_1943;
reg   [31:0] tmp_29_reg_1948;
wire   [31:0] grp_fu_1010_p2;
reg   [31:0] tmp_22_reg_1953;
reg   [31:0] tmp_32_reg_1958;
wire   [31:0] grp_fu_984_p2;
reg   [31:0] tmp_33_reg_1963;
wire   [0:0] exitcond_fu_1424_p2;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_56;
reg    ap_sig_bdd_1444;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1968_pp3_it1;
wire   [2:0] i_1_fu_1430_p2;
reg   [2:0] i_1_reg_1972;
wire   [63:0] tmp_55_fu_1436_p1;
reg   [63:0] tmp_55_reg_1977;
reg   [31:0] sum_returnA_1_reg_2022;
reg   [31:0] sum_returnB_1_reg_2027;
reg   [31:0] sum_weight_returnSquareA_1_reg_2032;
reg   [31:0] sum_weight_returnA_1_reg_2037;
reg   [31:0] sum_weight_returnSquareB_1_reg_2042;
reg   [31:0] sum_weight_returnB_1_reg_2047;
reg    ap_sig_cseq_ST_pp3_stg7_fsm_63;
reg    ap_sig_bdd_1494;
wire   [31:0] grp_fu_1033_p2;
reg   [31:0] volatilityA_reg_2057;
reg    ap_sig_cseq_ST_st262_fsm_180;
reg    ap_sig_bdd_1505;
wire   [31:0] grp_fu_1038_p2;
reg   [31:0] volatilityB_reg_2062;
reg   [31:0] gmem32_addr_2_reg_2067;
reg    ap_sig_cseq_ST_st296_fsm_214;
reg    ap_sig_bdd_1516;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_1523;
reg    ap_sig_cseq_ST_st50_fsm_47;
reg    ap_sig_bdd_1535;
reg    ap_sig_cseq_ST_st56_fsm_51;
reg    ap_sig_bdd_1547;
reg    ap_sig_cseq_ST_pp3_stg8_fsm_64;
reg    ap_sig_bdd_1559;
reg   [2:0] acc_returnA_address0;
reg    acc_returnA_ce0;
reg    acc_returnA_we0;
wire   [31:0] acc_returnA_d0;
reg   [2:0] acc_returnA_address1;
reg    acc_returnA_ce1;
reg    acc_returnA_we1;
reg   [31:0] acc_returnA_d1;
reg   [2:0] acc_returnB_address0;
reg    acc_returnB_ce0;
reg    acc_returnB_we0;
reg   [31:0] acc_returnB_d0;
reg   [2:0] acc_returnB_address1;
reg    acc_returnB_ce1;
reg    acc_returnB_we1;
wire   [31:0] acc_returnB_d1;
reg   [2:0] acc_weight_returnSquareA_address0;
reg    acc_weight_returnSquareA_ce0;
reg    acc_weight_returnSquareA_we0;
wire   [31:0] acc_weight_returnSquareA_d0;
reg   [2:0] acc_weight_returnSquareA_address1;
reg    acc_weight_returnSquareA_ce1;
reg    acc_weight_returnSquareA_we1;
reg   [31:0] acc_weight_returnSquareA_d1;
reg   [2:0] acc_weight_returnA_address0;
reg    acc_weight_returnA_ce0;
reg    acc_weight_returnA_we0;
reg   [31:0] acc_weight_returnA_d0;
reg   [2:0] acc_weight_returnA_address1;
reg    acc_weight_returnA_ce1;
reg    acc_weight_returnA_we1;
wire   [31:0] acc_weight_returnA_d1;
reg   [2:0] acc_weight_returnSquareB_address0;
reg    acc_weight_returnSquareB_ce0;
reg    acc_weight_returnSquareB_we0;
reg   [31:0] acc_weight_returnSquareB_d0;
reg   [2:0] acc_weight_returnSquareB_address1;
reg    acc_weight_returnSquareB_ce1;
reg    acc_weight_returnSquareB_we1;
wire   [31:0] acc_weight_returnSquareB_d1;
reg   [2:0] acc_weight_returnB_address0;
reg    acc_weight_returnB_ce0;
reg    acc_weight_returnB_we0;
wire   [31:0] acc_weight_returnB_d0;
reg   [2:0] acc_weight_returnB_address1;
reg    acc_weight_returnB_ce1;
reg    acc_weight_returnB_we1;
reg   [31:0] acc_weight_returnB_d1;
reg   [2:0] acc_weight_returnA_returnB_address0;
reg    acc_weight_returnA_returnB_ce0;
reg    acc_weight_returnA_returnB_we0;
reg   [31:0] acc_weight_returnA_returnB_d0;
reg   [2:0] acc_weight_returnA_returnB_address1;
reg    acc_weight_returnA_returnB_ce1;
reg    acc_weight_returnA_returnB_we1;
wire   [31:0] acc_weight_returnA_returnB_d1;
reg   [31:0] tmp_i_reg_774;
reg   [7:0] i_i_reg_786;
reg   [30:0] i1_i_reg_798;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_1664;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_1672;
wire   [0:0] exitcond_i_fu_1221_p2;
reg   [30:0] row_index_reg_809;
wire   [0:0] tmp_8_fu_1336_p2;
reg   [31:0] phi_mul_reg_820;
reg   [29:0] indvar_phi_fu_835_p4;
reg   [31:0] column_index_0_in_reg_843;
reg    ap_sig_cseq_ST_st301_fsm_219;
reg    ap_sig_bdd_1699;
reg   [29:0] indvar8_phi_fu_856_p4;
reg   [30:0] i1_phi_fu_868_p4;
reg   [31:0] sum_returnA_phi_fu_880_p4;
reg   [31:0] sum_returnB_phi_fu_892_p4;
reg   [31:0] sum_weight_returnSquareA_phi_fu_904_p4;
reg   [31:0] sum_weight_returnA_phi_fu_916_p4;
reg   [31:0] sum_weight_returnSquareB_phi_fu_928_p4;
reg   [31:0] sum_weight_returnB_phi_fu_940_p4;
wire   [31:0] sum_weight_returnA_returnB_phi_fu_952_p4;
reg   [2:0] i2_phi_fu_964_p4;
wire   [63:0] tmp_56_i_fu_1227_p1;
wire   [63:0] tmp_58_i_fu_1247_p1;
wire   [63:0] tmp_7_fu_1325_p1;
wire   [63:0] tmp_10_fu_1376_p1;
wire   [63:0] tmp_13_fu_1396_p1;
wire   [63:0] tmp_18_fu_1413_p1;
wire  signed [63:0] tmp_59_fu_1304_p1;
wire  signed [63:0] tmp_62_fu_1355_p1;
wire  signed [63:0] out_correlation4_sum_cast_fu_1454_p1;
reg    ap_reg_ioackin_gmem32_ARREADY = 1'b0;
reg    ap_sig_ioackin_gmem32_ARREADY;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_1770;
reg    ap_sig_cseq_ST_st45_fsm_42;
reg    ap_sig_bdd_1786;
reg    ap_reg_ioackin_gmem32_AWREADY = 1'b0;
reg    ap_reg_ioackin_gmem32_WREADY = 1'b0;
reg    ap_sig_ioackin_gmem32_WREADY;
reg    ap_sig_cseq_ST_st298_fsm_216;
reg    ap_sig_bdd_1808;
wire   [31:0] tmp_54_fu_1464_p2;
reg    ap_sig_cseq_ST_st128_fsm_54;
reg    ap_sig_bdd_1836;
reg    ap_sig_cseq_ST_st54_fsm_49;
reg    ap_sig_bdd_1857;
reg    ap_sig_cseq_ST_st55_fsm_50;
reg    ap_sig_bdd_1864;
reg   [31:0] grp_fu_972_p0;
reg   [31:0] grp_fu_972_p1;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_1939;
reg    ap_sig_cseq_ST_st182_fsm_100;
reg    ap_sig_bdd_1951;
reg    ap_sig_cseq_ST_st187_fsm_105;
reg    ap_sig_bdd_1958;
reg    ap_sig_cseq_ST_st191_fsm_109;
reg    ap_sig_bdd_1965;
reg    ap_sig_cseq_ST_st226_fsm_144;
reg    ap_sig_bdd_1972;
reg    ap_sig_cseq_ST_st230_fsm_148;
reg    ap_sig_bdd_1979;
reg   [31:0] grp_fu_976_p0;
reg   [31:0] grp_fu_976_p1;
reg   [31:0] grp_fu_980_p0;
reg   [31:0] grp_fu_980_p1;
wire   [31:0] grp_fu_984_p0;
wire   [31:0] grp_fu_984_p1;
reg   [31:0] grp_fu_996_p0;
reg   [31:0] grp_fu_996_p1;
reg    ap_sig_cseq_ST_st177_fsm_95;
reg    ap_sig_bdd_2003;
reg    ap_sig_cseq_ST_st221_fsm_139;
reg    ap_sig_bdd_2010;
reg    ap_sig_cseq_ST_st263_fsm_181;
reg    ap_sig_bdd_2018;
reg   [31:0] grp_fu_1002_p0;
reg   [31:0] grp_fu_1002_p1;
reg   [31:0] grp_fu_1006_p0;
reg   [31:0] grp_fu_1006_p1;
reg   [31:0] grp_fu_1010_p0;
wire   [31:0] grp_fu_1010_p1;
reg   [31:0] grp_fu_1020_p0;
reg   [31:0] grp_fu_1020_p1;
reg    ap_sig_cseq_ST_st147_fsm_65;
reg    ap_sig_bdd_2035;
reg    ap_sig_cseq_ST_st196_fsm_114;
reg    ap_sig_bdd_2042;
reg    ap_sig_cseq_ST_st200_fsm_118;
reg    ap_sig_bdd_2049;
reg    ap_sig_cseq_ST_st268_fsm_186;
reg    ap_sig_bdd_2056;
reg   [31:0] grp_fu_1025_p0;
reg   [31:0] grp_fu_1025_p1;
wire  signed [31:0] grp_fu_1030_p0;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_2068;
wire   [31:0] grp_fu_1033_p1;
reg    ap_sig_cseq_ST_st235_fsm_153;
reg    ap_sig_bdd_2076;
wire   [31:0] grp_fu_1038_p1;
reg   [31:0] grp_fu_1043_p1;
wire   [29:0] tmp_4_fu_1193_p4;
wire   [29:0] tmp_5_fu_1207_p4;
wire   [31:0] i1_i_cast_fu_1238_p1;
wire  signed [31:0] tmp_57_i_fu_1242_p1;
wire  signed [31:0] tmp_1_fu_1258_p0;
wire  signed [31:0] tmp_6_fu_1268_p0;
wire  signed [31:0] next_mul_fu_1275_p1;
wire  signed [32:0] tmp_11_fu_1295_p1;
wire  signed [32:0] tmp_53_fu_1299_p2;
wire  signed [31:0] grp_fu_1341_p0;
wire  signed [31:0] grp_fu_1341_p1;
wire  signed [31:0] grp_fu_1341_p2;
wire  signed [32:0] tmp_60_fu_1346_p1;
wire  signed [32:0] tmp_61_fu_1350_p2;
wire   [31:0] i1_cast_fu_1381_p1;
wire   [30:0] grp_fu_1407_p0;
wire   [3:0] grp_fu_1407_p1;
wire   [30:0] grp_fu_1407_p2;
wire  signed [32:0] tmp_53_cast_fu_1445_p1;
wire  signed [32:0] out_correlation4_sum_fu_1449_p2;
reg   [1:0] grp_fu_972_opcode;
wire    grp_fu_972_ce;
reg   [1:0] grp_fu_976_opcode;
wire    grp_fu_976_ce;
wire    grp_fu_980_ce;
wire    grp_fu_984_ce;
wire    grp_fu_996_ce;
wire    grp_fu_1002_ce;
wire    grp_fu_1006_ce;
wire    grp_fu_1010_ce;
reg    grp_fu_1020_ce;
reg    ap_sig_cseq_ST_st148_fsm_66;
reg    ap_sig_bdd_2295;
reg    ap_sig_cseq_ST_st149_fsm_67;
reg    ap_sig_bdd_2303;
reg    ap_sig_cseq_ST_st150_fsm_68;
reg    ap_sig_bdd_2311;
reg    ap_sig_cseq_ST_st151_fsm_69;
reg    ap_sig_bdd_2319;
reg    ap_sig_cseq_ST_st152_fsm_70;
reg    ap_sig_bdd_2327;
reg    ap_sig_cseq_ST_st153_fsm_71;
reg    ap_sig_bdd_2335;
reg    ap_sig_cseq_ST_st154_fsm_72;
reg    ap_sig_bdd_2343;
reg    ap_sig_cseq_ST_st155_fsm_73;
reg    ap_sig_bdd_2351;
reg    ap_sig_cseq_ST_st156_fsm_74;
reg    ap_sig_bdd_2359;
reg    ap_sig_cseq_ST_st157_fsm_75;
reg    ap_sig_bdd_2367;
reg    ap_sig_cseq_ST_st158_fsm_76;
reg    ap_sig_bdd_2375;
reg    ap_sig_cseq_ST_st159_fsm_77;
reg    ap_sig_bdd_2383;
reg    ap_sig_cseq_ST_st160_fsm_78;
reg    ap_sig_bdd_2391;
reg    ap_sig_cseq_ST_st161_fsm_79;
reg    ap_sig_bdd_2399;
reg    ap_sig_cseq_ST_st162_fsm_80;
reg    ap_sig_bdd_2407;
reg    ap_sig_cseq_ST_st163_fsm_81;
reg    ap_sig_bdd_2415;
reg    ap_sig_cseq_ST_st164_fsm_82;
reg    ap_sig_bdd_2423;
reg    ap_sig_cseq_ST_st165_fsm_83;
reg    ap_sig_bdd_2431;
reg    ap_sig_cseq_ST_st166_fsm_84;
reg    ap_sig_bdd_2439;
reg    ap_sig_cseq_ST_st167_fsm_85;
reg    ap_sig_bdd_2447;
reg    ap_sig_cseq_ST_st168_fsm_86;
reg    ap_sig_bdd_2455;
reg    ap_sig_cseq_ST_st169_fsm_87;
reg    ap_sig_bdd_2463;
reg    ap_sig_cseq_ST_st170_fsm_88;
reg    ap_sig_bdd_2471;
reg    ap_sig_cseq_ST_st171_fsm_89;
reg    ap_sig_bdd_2479;
reg    ap_sig_cseq_ST_st172_fsm_90;
reg    ap_sig_bdd_2487;
reg    ap_sig_cseq_ST_st173_fsm_91;
reg    ap_sig_bdd_2495;
reg    ap_sig_cseq_ST_st174_fsm_92;
reg    ap_sig_bdd_2503;
reg    ap_sig_cseq_ST_st175_fsm_93;
reg    ap_sig_bdd_2511;
reg    ap_sig_cseq_ST_st197_fsm_115;
reg    ap_sig_bdd_2521;
reg    ap_sig_cseq_ST_st198_fsm_116;
reg    ap_sig_bdd_2529;
reg    ap_sig_cseq_ST_st201_fsm_119;
reg    ap_sig_bdd_2539;
reg    ap_sig_cseq_ST_st202_fsm_120;
reg    ap_sig_bdd_2547;
reg    ap_sig_cseq_ST_st203_fsm_121;
reg    ap_sig_bdd_2555;
reg    ap_sig_cseq_ST_st204_fsm_122;
reg    ap_sig_bdd_2563;
reg    ap_sig_cseq_ST_st205_fsm_123;
reg    ap_sig_bdd_2571;
reg    ap_sig_cseq_ST_st206_fsm_124;
reg    ap_sig_bdd_2579;
reg    ap_sig_cseq_ST_st207_fsm_125;
reg    ap_sig_bdd_2587;
reg    ap_sig_cseq_ST_st208_fsm_126;
reg    ap_sig_bdd_2595;
reg    ap_sig_cseq_ST_st209_fsm_127;
reg    ap_sig_bdd_2603;
reg    ap_sig_cseq_ST_st210_fsm_128;
reg    ap_sig_bdd_2611;
reg    ap_sig_cseq_ST_st211_fsm_129;
reg    ap_sig_bdd_2619;
reg    ap_sig_cseq_ST_st212_fsm_130;
reg    ap_sig_bdd_2627;
reg    ap_sig_cseq_ST_st213_fsm_131;
reg    ap_sig_bdd_2635;
reg    ap_sig_cseq_ST_st214_fsm_132;
reg    ap_sig_bdd_2643;
reg    ap_sig_cseq_ST_st215_fsm_133;
reg    ap_sig_bdd_2651;
reg    ap_sig_cseq_ST_st216_fsm_134;
reg    ap_sig_bdd_2659;
reg    ap_sig_cseq_ST_st217_fsm_135;
reg    ap_sig_bdd_2667;
reg    ap_sig_cseq_ST_st218_fsm_136;
reg    ap_sig_bdd_2675;
reg    ap_sig_cseq_ST_st219_fsm_137;
reg    ap_sig_bdd_2683;
reg    ap_sig_cseq_ST_st220_fsm_138;
reg    ap_sig_bdd_2691;
reg    ap_sig_cseq_ST_st222_fsm_140;
reg    ap_sig_bdd_2700;
reg    ap_sig_cseq_ST_st223_fsm_141;
reg    ap_sig_bdd_2708;
reg    ap_sig_cseq_ST_st224_fsm_142;
reg    ap_sig_bdd_2716;
reg    ap_sig_cseq_ST_st227_fsm_145;
reg    ap_sig_bdd_2726;
reg    ap_sig_cseq_ST_st228_fsm_146;
reg    ap_sig_bdd_2734;
reg    ap_sig_cseq_ST_st269_fsm_187;
reg    ap_sig_bdd_2744;
reg    ap_sig_cseq_ST_st270_fsm_188;
reg    ap_sig_bdd_2752;
reg    ap_sig_cseq_ST_st271_fsm_189;
reg    ap_sig_bdd_2760;
reg    ap_sig_cseq_ST_st272_fsm_190;
reg    ap_sig_bdd_2768;
reg    ap_sig_cseq_ST_st273_fsm_191;
reg    ap_sig_bdd_2776;
reg    ap_sig_cseq_ST_st274_fsm_192;
reg    ap_sig_bdd_2784;
reg    ap_sig_cseq_ST_st275_fsm_193;
reg    ap_sig_bdd_2792;
reg    ap_sig_cseq_ST_st276_fsm_194;
reg    ap_sig_bdd_2800;
reg    ap_sig_cseq_ST_st277_fsm_195;
reg    ap_sig_bdd_2808;
reg    ap_sig_cseq_ST_st278_fsm_196;
reg    ap_sig_bdd_2816;
reg    ap_sig_cseq_ST_st279_fsm_197;
reg    ap_sig_bdd_2824;
reg    ap_sig_cseq_ST_st280_fsm_198;
reg    ap_sig_bdd_2832;
reg    ap_sig_cseq_ST_st281_fsm_199;
reg    ap_sig_bdd_2840;
reg    ap_sig_cseq_ST_st282_fsm_200;
reg    ap_sig_bdd_2848;
reg    ap_sig_cseq_ST_st283_fsm_201;
reg    ap_sig_bdd_2856;
reg    ap_sig_cseq_ST_st284_fsm_202;
reg    ap_sig_bdd_2864;
reg    ap_sig_cseq_ST_st285_fsm_203;
reg    ap_sig_bdd_2872;
reg    ap_sig_cseq_ST_st286_fsm_204;
reg    ap_sig_bdd_2880;
reg    ap_sig_cseq_ST_st287_fsm_205;
reg    ap_sig_bdd_2888;
reg    ap_sig_cseq_ST_st288_fsm_206;
reg    ap_sig_bdd_2896;
reg    ap_sig_cseq_ST_st289_fsm_207;
reg    ap_sig_bdd_2904;
reg    ap_sig_cseq_ST_st290_fsm_208;
reg    ap_sig_bdd_2912;
reg    ap_sig_cseq_ST_st291_fsm_209;
reg    ap_sig_bdd_2920;
reg    ap_sig_cseq_ST_st292_fsm_210;
reg    ap_sig_bdd_2928;
reg    ap_sig_cseq_ST_st293_fsm_211;
reg    ap_sig_bdd_2936;
reg    ap_sig_cseq_ST_st294_fsm_212;
reg    ap_sig_bdd_2944;
reg    ap_sig_cseq_ST_st295_fsm_213;
reg    ap_sig_bdd_2952;
wire    grp_fu_1025_ce;
wire    grp_fu_1030_ce;
wire   [31:0] grp_fu_1033_p0;
wire    grp_fu_1033_ce;
wire   [31:0] grp_fu_1038_p0;
wire    grp_fu_1038_ce;
wire   [31:0] grp_fu_1043_p0;
wire    grp_fu_1043_ce;
wire    grp_fu_1341_ce;
wire    grp_fu_1407_ce;
reg   [219:0] ap_NS_fsm;


correlation_accel_v1_weight_rom #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
weight_rom_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( weight_rom_address0 ),
    .ce0( weight_rom_ce0 ),
    .we0( weight_rom_we0 ),
    .d0( weight_rom_d0 ),
    .q0( weight_rom_q0 ),
    .address1( weight_rom_address1 ),
    .ce1( weight_rom_ce1 ),
    .we1( weight_rom_we1 ),
    .d1( weight_rom_d1 ),
    .q1( weight_rom_q1 )
);

correlation_accel_v1_bramA #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
bramA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( bramA_address0 ),
    .ce0( bramA_ce0 ),
    .we0( bramA_we0 ),
    .d0( bramA_d0 ),
    .q0( bramA_q0 ),
    .address1( bramA_address1 ),
    .ce1( bramA_ce1 ),
    .q1( bramA_q1 )
);

correlation_accel_v1_bramB #(
    .DataWidth( 32 ),
    .AddressRange( 252 ),
    .AddressWidth( 8 ))
bramB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( bramB_address0 ),
    .ce0( bramB_ce0 ),
    .we0( bramB_we0 ),
    .d0( bramB_d0 ),
    .q0( bramB_q0 )
);

correlation_accel_v1_gmem32_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_ID_WIDTH( C_M_AXI_GMEM32_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_GMEM32_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_GMEM32_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_GMEM32_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_GMEM32_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_GMEM32_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_GMEM32_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_GMEM32_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM32_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM32_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM32_CACHE_VALUE ))
correlation_accel_v1_gmem32_m_axi_U(
    .AWVALID( m_axi_gmem32_AWVALID ),
    .AWREADY( m_axi_gmem32_AWREADY ),
    .AWADDR( m_axi_gmem32_AWADDR ),
    .AWID( m_axi_gmem32_AWID ),
    .AWLEN( m_axi_gmem32_AWLEN ),
    .AWSIZE( m_axi_gmem32_AWSIZE ),
    .AWBURST( m_axi_gmem32_AWBURST ),
    .AWLOCK( m_axi_gmem32_AWLOCK ),
    .AWCACHE( m_axi_gmem32_AWCACHE ),
    .AWPROT( m_axi_gmem32_AWPROT ),
    .AWQOS( m_axi_gmem32_AWQOS ),
    .AWREGION( m_axi_gmem32_AWREGION ),
    .AWUSER( m_axi_gmem32_AWUSER ),
    .WVALID( m_axi_gmem32_WVALID ),
    .WREADY( m_axi_gmem32_WREADY ),
    .WDATA( m_axi_gmem32_WDATA ),
    .WSTRB( m_axi_gmem32_WSTRB ),
    .WLAST( m_axi_gmem32_WLAST ),
    .WID( m_axi_gmem32_WID ),
    .WUSER( m_axi_gmem32_WUSER ),
    .ARVALID( m_axi_gmem32_ARVALID ),
    .ARREADY( m_axi_gmem32_ARREADY ),
    .ARADDR( m_axi_gmem32_ARADDR ),
    .ARID( m_axi_gmem32_ARID ),
    .ARLEN( m_axi_gmem32_ARLEN ),
    .ARSIZE( m_axi_gmem32_ARSIZE ),
    .ARBURST( m_axi_gmem32_ARBURST ),
    .ARLOCK( m_axi_gmem32_ARLOCK ),
    .ARCACHE( m_axi_gmem32_ARCACHE ),
    .ARPROT( m_axi_gmem32_ARPROT ),
    .ARQOS( m_axi_gmem32_ARQOS ),
    .ARREGION( m_axi_gmem32_ARREGION ),
    .ARUSER( m_axi_gmem32_ARUSER ),
    .RVALID( m_axi_gmem32_RVALID ),
    .RREADY( m_axi_gmem32_RREADY ),
    .RDATA( m_axi_gmem32_RDATA ),
    .RLAST( m_axi_gmem32_RLAST ),
    .RID( m_axi_gmem32_RID ),
    .RUSER( m_axi_gmem32_RUSER ),
    .RRESP( m_axi_gmem32_RRESP ),
    .BVALID( m_axi_gmem32_BVALID ),
    .BREADY( m_axi_gmem32_BREADY ),
    .BRESP( m_axi_gmem32_BRESP ),
    .BID( m_axi_gmem32_BID ),
    .BUSER( m_axi_gmem32_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem32_ARVALID ),
    .I_ARREADY( gmem32_ARREADY ),
    .I_ARADDR( gmem32_ARADDR ),
    .I_ARID( gmem32_ARID ),
    .I_ARLEN( gmem32_ARLEN ),
    .I_ARSIZE( gmem32_ARSIZE ),
    .I_ARLOCK( gmem32_ARLOCK ),
    .I_ARCACHE( gmem32_ARCACHE ),
    .I_ARQOS( gmem32_ARQOS ),
    .I_ARPROT( gmem32_ARPROT ),
    .I_ARUSER( gmem32_ARUSER ),
    .I_ARBURST( gmem32_ARBURST ),
    .I_ARREGION( gmem32_ARREGION ),
    .I_RVALID( gmem32_RVALID ),
    .I_RREADY( gmem32_RREADY ),
    .I_RDATA( gmem32_RDATA ),
    .I_RID( gmem32_RID ),
    .I_RUSER( gmem32_RUSER ),
    .I_RRESP( gmem32_RRESP ),
    .I_RLAST( gmem32_RLAST ),
    .I_AWVALID( gmem32_AWVALID ),
    .I_AWREADY( gmem32_AWREADY ),
    .I_AWADDR( gmem32_AWADDR ),
    .I_AWID( gmem32_AWID ),
    .I_AWLEN( gmem32_AWLEN ),
    .I_AWSIZE( gmem32_AWSIZE ),
    .I_AWLOCK( gmem32_AWLOCK ),
    .I_AWCACHE( gmem32_AWCACHE ),
    .I_AWQOS( gmem32_AWQOS ),
    .I_AWPROT( gmem32_AWPROT ),
    .I_AWUSER( gmem32_AWUSER ),
    .I_AWBURST( gmem32_AWBURST ),
    .I_AWREGION( gmem32_AWREGION ),
    .I_WVALID( gmem32_WVALID ),
    .I_WREADY( gmem32_WREADY ),
    .I_WDATA( gmem32_WDATA ),
    .I_WID( gmem32_WID ),
    .I_WUSER( gmem32_WUSER ),
    .I_WLAST( gmem32_WLAST ),
    .I_WSTRB( gmem32_WSTRB ),
    .I_BVALID( gmem32_BVALID ),
    .I_BREADY( gmem32_BREADY ),
    .I_BRESP( gmem32_BRESP ),
    .I_BID( gmem32_BID ),
    .I_BUSER( gmem32_BUSER )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_returnA_address0 ),
    .ce0( acc_returnA_ce0 ),
    .we0( acc_returnA_we0 ),
    .d0( acc_returnA_d0 ),
    .q0( acc_returnA_q0 ),
    .address1( acc_returnA_address1 ),
    .ce1( acc_returnA_ce1 ),
    .we1( acc_returnA_we1 ),
    .d1( acc_returnA_d1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_returnB_address0 ),
    .ce0( acc_returnB_ce0 ),
    .we0( acc_returnB_we0 ),
    .d0( acc_returnB_d0 ),
    .q0( acc_returnB_q0 ),
    .address1( acc_returnB_address1 ),
    .ce1( acc_returnB_ce1 ),
    .we1( acc_returnB_we1 ),
    .d1( acc_returnB_d1 ),
    .q1( acc_returnB_q1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnSquareA_address0 ),
    .ce0( acc_weight_returnSquareA_ce0 ),
    .we0( acc_weight_returnSquareA_we0 ),
    .d0( acc_weight_returnSquareA_d0 ),
    .q0( acc_weight_returnSquareA_q0 ),
    .address1( acc_weight_returnSquareA_address1 ),
    .ce1( acc_weight_returnSquareA_ce1 ),
    .we1( acc_weight_returnSquareA_we1 ),
    .d1( acc_weight_returnSquareA_d1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnA_address0 ),
    .ce0( acc_weight_returnA_ce0 ),
    .we0( acc_weight_returnA_we0 ),
    .d0( acc_weight_returnA_d0 ),
    .q0( acc_weight_returnA_q0 ),
    .address1( acc_weight_returnA_address1 ),
    .ce1( acc_weight_returnA_ce1 ),
    .we1( acc_weight_returnA_we1 ),
    .d1( acc_weight_returnA_d1 ),
    .q1( acc_weight_returnA_q1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnSquareB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnSquareB_address0 ),
    .ce0( acc_weight_returnSquareB_ce0 ),
    .we0( acc_weight_returnSquareB_we0 ),
    .d0( acc_weight_returnSquareB_d0 ),
    .q0( acc_weight_returnSquareB_q0 ),
    .address1( acc_weight_returnSquareB_address1 ),
    .ce1( acc_weight_returnSquareB_ce1 ),
    .we1( acc_weight_returnSquareB_we1 ),
    .d1( acc_weight_returnSquareB_d1 ),
    .q1( acc_weight_returnSquareB_q1 )
);

correlation_accel_v1_acc_returnA #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnB_address0 ),
    .ce0( acc_weight_returnB_ce0 ),
    .we0( acc_weight_returnB_we0 ),
    .d0( acc_weight_returnB_d0 ),
    .q0( acc_weight_returnB_q0 ),
    .address1( acc_weight_returnB_address1 ),
    .ce1( acc_weight_returnB_ce1 ),
    .we1( acc_weight_returnB_we1 ),
    .d1( acc_weight_returnB_d1 )
);

correlation_accel_v1_acc_returnB #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
acc_weight_returnA_returnB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( acc_weight_returnA_returnB_address0 ),
    .ce0( acc_weight_returnA_returnB_ce0 ),
    .we0( acc_weight_returnA_returnB_we0 ),
    .d0( acc_weight_returnA_returnB_d0 ),
    .q0( acc_weight_returnA_returnB_q0 ),
    .address1( acc_weight_returnA_returnB_address1 ),
    .ce1( acc_weight_returnA_returnB_ce1 ),
    .we1( acc_weight_returnA_returnB_we1 ),
    .d1( acc_weight_returnA_returnB_d1 ),
    .q1( acc_weight_returnA_returnB_q1 )
);

correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_972_p0 ),
    .din1( grp_fu_972_p1 ),
    .opcode( grp_fu_972_opcode ),
    .ce( grp_fu_972_ce ),
    .dout( grp_fu_972_p2 )
);

correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_faddfsub_32ns_32ns_32_9_full_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_976_p0 ),
    .din1( grp_fu_976_p1 ),
    .opcode( grp_fu_976_opcode ),
    .ce( grp_fu_976_ce ),
    .dout( grp_fu_976_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp_U3(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_980_p0 ),
    .din1( grp_fu_980_p1 ),
    .ce( grp_fu_980_ce ),
    .dout( grp_fu_980_p2 )
);

correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fadd_32ns_32ns_32_9_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_984_p0 ),
    .din1( grp_fu_984_p1 ),
    .ce( grp_fu_984_ce ),
    .dout( grp_fu_984_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_996_p0 ),
    .din1( grp_fu_996_p1 ),
    .ce( grp_fu_996_ce ),
    .dout( grp_fu_996_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1002_p0 ),
    .din1( grp_fu_1002_p1 ),
    .ce( grp_fu_1002_ce ),
    .dout( grp_fu_1002_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1006_p0 ),
    .din1( grp_fu_1006_p1 ),
    .ce( grp_fu_1006_ce ),
    .dout( grp_fu_1006_p2 )
);

correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fmul_32ns_32ns_32_5_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1010_p0 ),
    .din1( grp_fu_1010_p1 ),
    .ce( grp_fu_1010_ce ),
    .dout( grp_fu_1010_p2 )
);

correlation_accel_v1_fdiv_32ns_32ns_32_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fdiv_32ns_32ns_32_30_U9(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1020_p0 ),
    .din1( grp_fu_1020_p1 ),
    .ce( grp_fu_1020_ce ),
    .dout( grp_fu_1020_p2 )
);

correlation_accel_v1_fdiv_32ns_32ns_32_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fdiv_32ns_32ns_32_30_U10(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1025_p0 ),
    .din1( grp_fu_1025_p1 ),
    .ce( grp_fu_1025_ce ),
    .dout( grp_fu_1025_p2 )
);

correlation_accel_v1_sitofp_32s_32_8 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_sitofp_32s_32_8_U11(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1030_p0 ),
    .ce( grp_fu_1030_ce ),
    .dout( grp_fu_1030_p1 )
);

correlation_accel_v1_fsqrt_32ns_32ns_32_28 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fsqrt_32ns_32ns_32_28_U12(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1033_p0 ),
    .din1( grp_fu_1033_p1 ),
    .ce( grp_fu_1033_ce ),
    .dout( grp_fu_1033_p2 )
);

correlation_accel_v1_fsqrt_32ns_32ns_32_28 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_fsqrt_32ns_32ns_32_28_U13(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1038_p0 ),
    .din1( grp_fu_1038_p1 ),
    .ce( grp_fu_1038_ce ),
    .dout( grp_fu_1038_p2 )
);

correlation_accel_v1_flog_32ns_32ns_32_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_flog_32ns_32ns_32_18_full_dsp_U14(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1043_p0 ),
    .din1( grp_fu_1043_p1 ),
    .ce( grp_fu_1043_ce ),
    .dout( grp_fu_1043_p2 )
);

correlation_accel_v1_mul_32s_32s_32_7 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
correlation_accel_v1_mul_32s_32s_32_7_U15(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1341_p0 ),
    .din1( grp_fu_1341_p1 ),
    .ce( grp_fu_1341_ce ),
    .dout( grp_fu_1341_p2 )
);

correlation_accel_v1_urem_31ns_4ns_31_35 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 31 ))
correlation_accel_v1_urem_31ns_4ns_31_35_U16(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1407_p0 ),
    .din1( grp_fu_1407_p1 ),
    .ce( grp_fu_1407_ce ),
    .dout( grp_fu_1407_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_gmem32_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) | (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_42)))) begin
            ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) | ((ap_const_logic_1 == gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_42)))) begin
            ap_reg_ioackin_gmem32_ARREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_gmem32_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_AWREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st297_fsm_215)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) begin
                ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem32_AWREADY)) begin
                ap_reg_ioackin_gmem32_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_gmem32_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_gmem32_WREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st298_fsm_216)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_WREADY)) begin
                ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem32_WREADY)) begin
                ap_reg_ioackin_gmem32_WREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1314_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond2_fu_1314_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1314_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_1365_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_47)) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond3_fu_1365_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_47) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_1365_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_47)) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_lv1_0 == tmp_12_fu_1385_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if ((~(ap_const_lv1_0 == tmp_12_reg_1823) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | ((ap_const_lv1_0 == tmp_12_reg_1823) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it10
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it10 <= ap_reg_ppiten_pp2_it9;
        end
    end
end

/// ap_reg_ppiten_pp2_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it11
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it11 <= ap_reg_ppiten_pp2_it10;
        end
    end
end

/// ap_reg_ppiten_pp2_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it12
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it12 <= ap_reg_ppiten_pp2_it11;
        end
    end
end

/// ap_reg_ppiten_pp2_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it13
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it13 <= ap_reg_ppiten_pp2_it12;
        end
    end
end

/// ap_reg_ppiten_pp2_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it14
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it14 <= ap_reg_ppiten_pp2_it13;
        end
    end
end

/// ap_reg_ppiten_pp2_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it15
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it15 <= ap_reg_ppiten_pp2_it14;
        end
    end
end

/// ap_reg_ppiten_pp2_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it16
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it16 <= ap_reg_ppiten_pp2_it15;
        end
    end
end

/// ap_reg_ppiten_pp2_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it17
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it17 <= ap_reg_ppiten_pp2_it16;
        end
    end
end

/// ap_reg_ppiten_pp2_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it18
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it18 <= ap_reg_ppiten_pp2_it17;
        end
    end
end

/// ap_reg_ppiten_pp2_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it19
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it19 <= ap_reg_ppiten_pp2_it18;
        end
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
        end
    end
end

/// ap_reg_ppiten_pp2_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it20
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it20 <= ap_reg_ppiten_pp2_it19;
        end
    end
end

/// ap_reg_ppiten_pp2_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it21
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it21 <= ap_reg_ppiten_pp2_it20;
        end
    end
end

/// ap_reg_ppiten_pp2_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it22
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it22 <= ap_reg_ppiten_pp2_it21;
        end
    end
end

/// ap_reg_ppiten_pp2_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it23
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it23 <= ap_reg_ppiten_pp2_it22;
        end
    end
end

/// ap_reg_ppiten_pp2_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it24
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it24 <= ap_reg_ppiten_pp2_it23;
        end
    end
end

/// ap_reg_ppiten_pp2_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it25
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it25 <= ap_reg_ppiten_pp2_it24;
        end
    end
end

/// ap_reg_ppiten_pp2_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it26
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it26 <= ap_reg_ppiten_pp2_it25;
        end
    end
end

/// ap_reg_ppiten_pp2_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it27
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it27 <= ap_reg_ppiten_pp2_it26;
        end
    end
end

/// ap_reg_ppiten_pp2_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it28
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it28 <= ap_reg_ppiten_pp2_it27;
        end
    end
end

/// ap_reg_ppiten_pp2_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it29
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it29 <= ap_reg_ppiten_pp2_it28;
        end
    end
end

/// ap_reg_ppiten_pp2_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
        end
    end
end

/// ap_reg_ppiten_pp2_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it30
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it30 <= ap_reg_ppiten_pp2_it29;
        end
    end
end

/// ap_reg_ppiten_pp2_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it31
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it31 <= ap_reg_ppiten_pp2_it30;
        end
    end
end

/// ap_reg_ppiten_pp2_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it32
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it32 <= ap_reg_ppiten_pp2_it31;
        end
    end
end

/// ap_reg_ppiten_pp2_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it33
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it33 <= ap_reg_ppiten_pp2_it32;
        end
    end
end

/// ap_reg_ppiten_pp2_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it34
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it34 <= ap_reg_ppiten_pp2_it33;
        end
    end
end

/// ap_reg_ppiten_pp2_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it35
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it35 <= ap_reg_ppiten_pp2_it34;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
            ap_reg_ppiten_pp2_it35 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
        end
    end
end

/// ap_reg_ppiten_pp2_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
        end
    end
end

/// ap_reg_ppiten_pp2_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
        end
    end
end

/// ap_reg_ppiten_pp2_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
        end
    end
end

/// ap_reg_ppiten_pp2_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it8
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it8 <= ap_reg_ppiten_pp2_it7;
        end
    end
end

/// ap_reg_ppiten_pp2_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it9
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            ap_reg_ppiten_pp2_it9 <= ap_reg_ppiten_pp2_it8;
        end
    end
end

/// ap_reg_ppiten_pp3_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56) & ~(ap_const_lv1_0 == exitcond_fu_1424_p2))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp3_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_64))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_64) & ~(ap_const_lv1_0 == exitcond_reg_1968)))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1314_p2))) begin
        column_index_0_in_reg_843 <= row_index_cast_reg_1771;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st301_fsm_219) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        column_index_0_in_reg_843 <= column_index_reg_1799;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond_i_fu_1221_p2))) begin
        i1_i_reg_798 <= ap_const_lv31_2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        i1_i_reg_798 <= i_3_reg_1518;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        i1_reg_864 <= ap_const_lv31_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_const_lv1_0 == tmp_12_reg_1823))) begin
        i1_reg_864 <= i_reg_1827;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56))) begin
        i2_reg_960 <= i_1_reg_1972;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        i2_reg_960 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_i_reg_786 <= i_2_fu_1232_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_i_reg_786 <= ap_const_lv8_2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & (ap_const_lv1_0 == exitcond3_reg_1814) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar8_reg_852 <= indvar_next9_reg_1818;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_47)) begin
        indvar8_reg_852 <= ap_const_lv30_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond2_reg_1790 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_reg_831 <= indvar_next_reg_1794;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        indvar_reg_831 <= ap_const_lv30_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_35) & (ap_const_lv1_0 == tmp_8_fu_1336_p2))) begin
        phi_mul_reg_820 <= next_mul_reg_1766;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        phi_mul_reg_820 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == tmp_12_reg_1823))) begin
        reg_1058 <= weight_rom_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55))) begin
        reg_1058 <= weight_rom_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58))) begin
        reg_1107 <= acc_returnB_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it24))) begin
        reg_1107 <= acc_returnB_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60))) begin
        reg_1120 <= acc_weight_returnA_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it26))) begin
        reg_1120 <= acc_weight_returnA_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61))) begin
        reg_1151 <= acc_weight_returnSquareB_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29))) begin
        reg_1151 <= acc_weight_returnSquareB_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62))) begin
        reg_1158 <= acc_weight_returnA_returnB_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29))) begin
        reg_1158 <= acc_weight_returnA_returnB_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_35) & (ap_const_lv1_0 == tmp_8_fu_1336_p2))) begin
        row_index_reg_809 <= row_index_1_reg_1779;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        row_index_reg_809 <= ap_const_lv31_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_returnA_reg_876 <= sum_returnA_1_reg_2022;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        sum_returnA_reg_876 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_returnB_reg_888 <= sum_returnB_1_reg_2027;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        sum_returnB_reg_888 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnA_reg_912 <= sum_weight_returnA_1_reg_2037;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        sum_weight_returnA_reg_912 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_63))) begin
        sum_weight_returnA_returnB_reg_948 <= grp_fu_972_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        sum_weight_returnA_returnB_reg_948 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_63))) begin
        sum_weight_returnB_reg_936 <= sum_weight_returnB_1_reg_2047;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        sum_weight_returnB_reg_936 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnSquareA_reg_900 <= sum_weight_returnSquareA_1_reg_2032;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        sum_weight_returnSquareA_reg_900 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnSquareB_reg_924 <= sum_weight_returnSquareB_1_reg_2042;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_55)) begin
        sum_weight_returnSquareB_reg_924 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_i_reg_774 <= reg_1048;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_i_reg_774 <= ap_const_lv32_3F800000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it16))) begin
        acc_returnA_addr_1_reg_1883 <= tmp_18_fu_1413_p1;
        acc_returnB_addr_1_reg_1889 <= tmp_18_fu_1413_p1;
        acc_weight_returnA_addr_1_reg_1907 <= tmp_18_fu_1413_p1;
        acc_weight_returnA_returnB_add_6_reg_1919 <= tmp_18_fu_1413_p1;
        acc_weight_returnB_addr_1_reg_1913 <= tmp_18_fu_1413_p1;
        acc_weight_returnSquareA_addr_1_reg_1895 <= tmp_18_fu_1413_p1;
        acc_weight_returnSquareB_addr_1_reg_1901 <= tmp_18_fu_1413_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52)) begin
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it18 <= acc_returnA_addr_1_reg_1883;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it19 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it18;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it20 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it19;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it21 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it20;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it22 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it21;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it23 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it22;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it24 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it23;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it25 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it24;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it26 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it25;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it27 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it26;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it28 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it27;
        ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it29 <= ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it28;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it18 <= acc_returnB_addr_1_reg_1889;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it19 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it18;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it20 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it19;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it21 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it20;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it22 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it21;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it23 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it22;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it24 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it23;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it25 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it24;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it26 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it25;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it27 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it26;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it28 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it27;
        ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it29 <= ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it28;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it18 <= acc_weight_returnA_addr_1_reg_1907;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it19 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it18;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it20 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it19;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it21 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it20;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it22 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it21;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it23 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it22;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it24 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it23;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it25 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it24;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it26 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it25;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it27 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it26;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it28 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it27;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it29 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it28;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it30 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it29;
        ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it31 <= ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it30;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it18 <= acc_weight_returnA_returnB_add_6_reg_1919;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it19 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it18;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it20 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it19;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it21 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it20;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it22 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it21;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it23 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it22;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it24 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it23;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it25 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it24;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it26 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it25;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it27 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it26;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it28 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it27;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it29 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it28;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it30 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it29;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it31 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it30;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it32 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it31;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it33 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it32;
        ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it34 <= ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it33;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it18 <= acc_weight_returnB_addr_1_reg_1913;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it19 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it18;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it20 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it19;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it21 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it20;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it22 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it21;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it23 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it22;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it24 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it23;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it25 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it24;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it26 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it25;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it27 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it26;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it28 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it27;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it29 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it28;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it30 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it29;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it31 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it30;
        ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it32 <= ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it31;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it18 <= acc_weight_returnSquareA_addr_1_reg_1895;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it19 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it18;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it20 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it19;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it21 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it20;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it22 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it21;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it23 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it22;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it24 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it23;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it25 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it24;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it26 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it25;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it27 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it26;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it28 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it27;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it29 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it28;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it30 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it29;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it31 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it30;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it32 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it31;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it33 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it32;
        ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it34 <= ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it33;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it18 <= acc_weight_returnSquareB_addr_1_reg_1901;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it19 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it18;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it20 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it19;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it21 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it20;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it22 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it21;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it23 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it22;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it24 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it23;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it25 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it24;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it26 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it25;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it27 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it26;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it28 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it27;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it29 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it28;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it30 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it29;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it31 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it30;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it32 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it31;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it33 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it32;
        ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it34 <= ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it33;
        ap_reg_ppstg_reg_1058_pp2_it10 <= ap_reg_ppstg_reg_1058_pp2_it9;
        ap_reg_ppstg_reg_1058_pp2_it11 <= ap_reg_ppstg_reg_1058_pp2_it10;
        ap_reg_ppstg_reg_1058_pp2_it12 <= ap_reg_ppstg_reg_1058_pp2_it11;
        ap_reg_ppstg_reg_1058_pp2_it13 <= ap_reg_ppstg_reg_1058_pp2_it12;
        ap_reg_ppstg_reg_1058_pp2_it14 <= ap_reg_ppstg_reg_1058_pp2_it13;
        ap_reg_ppstg_reg_1058_pp2_it15 <= ap_reg_ppstg_reg_1058_pp2_it14;
        ap_reg_ppstg_reg_1058_pp2_it16 <= ap_reg_ppstg_reg_1058_pp2_it15;
        ap_reg_ppstg_reg_1058_pp2_it17 <= ap_reg_ppstg_reg_1058_pp2_it16;
        ap_reg_ppstg_reg_1058_pp2_it18 <= ap_reg_ppstg_reg_1058_pp2_it17;
        ap_reg_ppstg_reg_1058_pp2_it19 <= ap_reg_ppstg_reg_1058_pp2_it18;
        ap_reg_ppstg_reg_1058_pp2_it2 <= reg_1058;
        ap_reg_ppstg_reg_1058_pp2_it20 <= ap_reg_ppstg_reg_1058_pp2_it19;
        ap_reg_ppstg_reg_1058_pp2_it21 <= ap_reg_ppstg_reg_1058_pp2_it20;
        ap_reg_ppstg_reg_1058_pp2_it22 <= ap_reg_ppstg_reg_1058_pp2_it21;
        ap_reg_ppstg_reg_1058_pp2_it23 <= ap_reg_ppstg_reg_1058_pp2_it22;
        ap_reg_ppstg_reg_1058_pp2_it24 <= ap_reg_ppstg_reg_1058_pp2_it23;
        ap_reg_ppstg_reg_1058_pp2_it25 <= ap_reg_ppstg_reg_1058_pp2_it24;
        ap_reg_ppstg_reg_1058_pp2_it26 <= ap_reg_ppstg_reg_1058_pp2_it25;
        ap_reg_ppstg_reg_1058_pp2_it27 <= ap_reg_ppstg_reg_1058_pp2_it26;
        ap_reg_ppstg_reg_1058_pp2_it3 <= ap_reg_ppstg_reg_1058_pp2_it2;
        ap_reg_ppstg_reg_1058_pp2_it4 <= ap_reg_ppstg_reg_1058_pp2_it3;
        ap_reg_ppstg_reg_1058_pp2_it5 <= ap_reg_ppstg_reg_1058_pp2_it4;
        ap_reg_ppstg_reg_1058_pp2_it6 <= ap_reg_ppstg_reg_1058_pp2_it5;
        ap_reg_ppstg_reg_1058_pp2_it7 <= ap_reg_ppstg_reg_1058_pp2_it6;
        ap_reg_ppstg_reg_1058_pp2_it8 <= ap_reg_ppstg_reg_1058_pp2_it7;
        ap_reg_ppstg_reg_1058_pp2_it9 <= ap_reg_ppstg_reg_1058_pp2_it8;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it1 <= tmp_12_reg_1823;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it10 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it9;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it11 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it10;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it12 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it11;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it13 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it12;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it14 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it13;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it15 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it14;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it16 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it15;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it17 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it16;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it18 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it17;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it19 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it18;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it2 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it1;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it20 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it19;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it21 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it20;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it22 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it21;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it23 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it22;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it24 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it23;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it25 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it24;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it26 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it25;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it27 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it26;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it28 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it27;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it29 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it28;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it3 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it2;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it30 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it29;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it31 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it30;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it32 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it31;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it33 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it32;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it34 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it33;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it4 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it3;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it5 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it4;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it6 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it5;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it7 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it6;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it8 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it7;
        ap_reg_ppstg_tmp_12_reg_1823_pp2_it9 <= ap_reg_ppstg_tmp_12_reg_1823_pp2_it8;
        tmp_12_reg_1823 <= tmp_12_fu_1385_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond2_reg_1790_pp0_it1 <= exitcond2_reg_1790;
        ap_reg_ppstg_indvar_reg_831_pp0_it1 <= indvar_reg_831;
        exitcond2_reg_1790 <= exitcond2_fu_1314_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        ap_reg_ppstg_exitcond3_reg_1814_pp1_it1 <= exitcond3_reg_1814;
        ap_reg_ppstg_indvar8_reg_852_pp1_it1 <= indvar8_reg_852;
        exitcond3_reg_1814 <= exitcond3_fu_1365_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56)) begin
        ap_reg_ppstg_exitcond_reg_1968_pp3_it1 <= exitcond_reg_1968;
        exitcond_reg_1968 <= exitcond_fu_1424_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_lv1_0 == tmp_12_reg_1823) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        bramA_load_1_reg_1858 <= bramA_q1;
        bramA_load_reg_1853 <= bramA_q0;
        bramB_load_reg_1863 <= bramB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == tmp_12_reg_1823))) begin
        bramB_load_1_reg_1878 <= bramB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_35)) begin
        column_index_reg_1799 <= column_index_fu_1330_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st296_fsm_214)) begin
        counter <= tmp_54_fu_1464_p2;
        gmem32_addr_2_reg_2067 <= out_correlation4_sum_cast_fu_1454_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_41)) begin
        gmem32_addr_1_reg_1808 <= tmp_62_fu_1355_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & ~(ap_const_lv1_0 == tmp_3_fu_1284_p2))) begin
        gmem32_addr_reg_1784 <= tmp_59_fu_1304_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56))) begin
        i_1_reg_1972 <= i_1_fu_1430_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == tmp_57_i_fu_1242_p2))) begin
        i_3_reg_1518 <= i_3_fu_1252_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        i_reg_1827 <= i_fu_1390_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar_next9_reg_1818 <= indvar_next9_fu_1370_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_next_reg_1794 <= indvar_next_fu_1319_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it24))) begin
        lnReturnA_reg_1925 <= grp_fu_1043_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it24))) begin
        lnReturnB_reg_1934 <= grp_fu_1043_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        next_mul_reg_1766 <= next_mul_fu_1275_p2;
        row_index_1_reg_1779 <= row_index_1_fu_1289_p2;
        row_index_cast_reg_1771[0] <= row_index_cast_fu_1280_p1[0];
row_index_cast_reg_1771[1] <= row_index_cast_fu_1280_p1[1];
row_index_cast_reg_1771[2] <= row_index_cast_fu_1280_p1[2];
row_index_cast_reg_1771[3] <= row_index_cast_fu_1280_p1[3];
row_index_cast_reg_1771[4] <= row_index_cast_fu_1280_p1[4];
row_index_cast_reg_1771[5] <= row_index_cast_fu_1280_p1[5];
row_index_cast_reg_1771[6] <= row_index_cast_fu_1280_p1[6];
row_index_cast_reg_1771[7] <= row_index_cast_fu_1280_p1[7];
row_index_cast_reg_1771[8] <= row_index_cast_fu_1280_p1[8];
row_index_cast_reg_1771[9] <= row_index_cast_fu_1280_p1[9];
row_index_cast_reg_1771[10] <= row_index_cast_fu_1280_p1[10];
row_index_cast_reg_1771[11] <= row_index_cast_fu_1280_p1[11];
row_index_cast_reg_1771[12] <= row_index_cast_fu_1280_p1[12];
row_index_cast_reg_1771[13] <= row_index_cast_fu_1280_p1[13];
row_index_cast_reg_1771[14] <= row_index_cast_fu_1280_p1[14];
row_index_cast_reg_1771[15] <= row_index_cast_fu_1280_p1[15];
row_index_cast_reg_1771[16] <= row_index_cast_fu_1280_p1[16];
row_index_cast_reg_1771[17] <= row_index_cast_fu_1280_p1[17];
row_index_cast_reg_1771[18] <= row_index_cast_fu_1280_p1[18];
row_index_cast_reg_1771[19] <= row_index_cast_fu_1280_p1[19];
row_index_cast_reg_1771[20] <= row_index_cast_fu_1280_p1[20];
row_index_cast_reg_1771[21] <= row_index_cast_fu_1280_p1[21];
row_index_cast_reg_1771[22] <= row_index_cast_fu_1280_p1[22];
row_index_cast_reg_1771[23] <= row_index_cast_fu_1280_p1[23];
row_index_cast_reg_1771[24] <= row_index_cast_fu_1280_p1[24];
row_index_cast_reg_1771[25] <= row_index_cast_fu_1280_p1[25];
row_index_cast_reg_1771[26] <= row_index_cast_fu_1280_p1[26];
row_index_cast_reg_1771[27] <= row_index_cast_fu_1280_p1[27];
row_index_cast_reg_1771[28] <= row_index_cast_fu_1280_p1[28];
row_index_cast_reg_1771[29] <= row_index_cast_fu_1280_p1[29];
row_index_cast_reg_1771[30] <= row_index_cast_fu_1280_p1[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        p_add_i32_shr_reg_1551[0] <= p_add_i32_shr_fu_1271_p1[0];
p_add_i32_shr_reg_1551[1] <= p_add_i32_shr_fu_1271_p1[1];
p_add_i32_shr_reg_1551[2] <= p_add_i32_shr_fu_1271_p1[2];
p_add_i32_shr_reg_1551[3] <= p_add_i32_shr_fu_1271_p1[3];
p_add_i32_shr_reg_1551[4] <= p_add_i32_shr_fu_1271_p1[4];
p_add_i32_shr_reg_1551[5] <= p_add_i32_shr_fu_1271_p1[5];
p_add_i32_shr_reg_1551[6] <= p_add_i32_shr_fu_1271_p1[6];
p_add_i32_shr_reg_1551[7] <= p_add_i32_shr_fu_1271_p1[7];
p_add_i32_shr_reg_1551[8] <= p_add_i32_shr_fu_1271_p1[8];
p_add_i32_shr_reg_1551[9] <= p_add_i32_shr_fu_1271_p1[9];
p_add_i32_shr_reg_1551[10] <= p_add_i32_shr_fu_1271_p1[10];
p_add_i32_shr_reg_1551[11] <= p_add_i32_shr_fu_1271_p1[11];
p_add_i32_shr_reg_1551[12] <= p_add_i32_shr_fu_1271_p1[12];
p_add_i32_shr_reg_1551[13] <= p_add_i32_shr_fu_1271_p1[13];
p_add_i32_shr_reg_1551[14] <= p_add_i32_shr_fu_1271_p1[14];
p_add_i32_shr_reg_1551[15] <= p_add_i32_shr_fu_1271_p1[15];
p_add_i32_shr_reg_1551[16] <= p_add_i32_shr_fu_1271_p1[16];
p_add_i32_shr_reg_1551[17] <= p_add_i32_shr_fu_1271_p1[17];
p_add_i32_shr_reg_1551[18] <= p_add_i32_shr_fu_1271_p1[18];
p_add_i32_shr_reg_1551[19] <= p_add_i32_shr_fu_1271_p1[19];
p_add_i32_shr_reg_1551[20] <= p_add_i32_shr_fu_1271_p1[20];
p_add_i32_shr_reg_1551[21] <= p_add_i32_shr_fu_1271_p1[21];
p_add_i32_shr_reg_1551[22] <= p_add_i32_shr_fu_1271_p1[22];
p_add_i32_shr_reg_1551[23] <= p_add_i32_shr_fu_1271_p1[23];
p_add_i32_shr_reg_1551[24] <= p_add_i32_shr_fu_1271_p1[24];
p_add_i32_shr_reg_1551[25] <= p_add_i32_shr_fu_1271_p1[25];
p_add_i32_shr_reg_1551[26] <= p_add_i32_shr_fu_1271_p1[26];
p_add_i32_shr_reg_1551[27] <= p_add_i32_shr_fu_1271_p1[27];
p_add_i32_shr_reg_1551[28] <= p_add_i32_shr_fu_1271_p1[28];
p_add_i32_shr_reg_1551[29] <= p_add_i32_shr_fu_1271_p1[29];
        tmp_2_reg_1539 <= grp_fu_1030_p1;
        tmp_6_reg_1545 <= tmp_6_fu_1268_p1;
        tmp_reg_1534 <= tmp_fu_1263_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it26)) | (ap_const_logic_1 == ap_sig_cseq_ST_st181_fsm_99) | (ap_const_logic_1 == ap_sig_cseq_ST_st186_fsm_104) | (ap_const_logic_1 == ap_sig_cseq_ST_st225_fsm_143) | (ap_const_logic_1 == ap_sig_cseq_ST_st267_fsm_185))) begin
        reg_1048 <= grp_fu_996_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it28)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29)) | (ap_const_logic_1 == ap_sig_cseq_ST_st190_fsm_108) | (ap_const_logic_1 == ap_sig_cseq_ST_st199_fsm_117) | (ap_const_logic_1 == ap_sig_cseq_ST_st234_fsm_152))) begin
        reg_1069 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond2_reg_1790 == ap_const_lv1_0) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & (ap_const_lv1_0 == exitcond3_reg_1814) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        reg_1079 <= gmem32_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st225_fsm_143) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it15)) | (ap_const_logic_1 == ap_sig_cseq_ST_st176_fsm_94) | ((ap_const_logic_1 == ap_sig_cseq_ST_st297_fsm_215) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)))) begin
        reg_1085 <= grp_fu_1020_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it15)) | (ap_const_logic_1 == ap_sig_cseq_ST_st229_fsm_147))) begin
        reg_1095 <= grp_fu_1020_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it24)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_57) & (ap_const_lv1_0 == exitcond_reg_1968)))) begin
        reg_1101 <= acc_returnA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it26)) | (ap_const_logic_1 == ap_sig_cseq_ST_st181_fsm_99) | (ap_const_logic_1 == ap_sig_cseq_ST_st186_fsm_104) | (ap_const_logic_1 == ap_sig_cseq_ST_st225_fsm_143))) begin
        reg_1114 <= grp_fu_1002_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it27)) | ((ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62)))) begin
        reg_1127 <= acc_weight_returnB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st181_fsm_99) | (ap_const_logic_1 == ap_sig_cseq_ST_st225_fsm_143) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it27)))) begin
        reg_1133 <= grp_fu_1006_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29)) | ((ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59)))) begin
        reg_1139 <= acc_weight_returnSquareA_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st186_fsm_104) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29)))) begin
        reg_1145 <= grp_fu_1006_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st234_fsm_152) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it31)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it31)) | (ap_const_logic_1 == ap_sig_cseq_ST_st195_fsm_113))) begin
        reg_1165 <= grp_fu_976_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it33)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it34)))) begin
        reg_1173 <= grp_fu_980_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st225_fsm_143) | (ap_const_logic_1 == ap_sig_cseq_ST_st176_fsm_94))) begin
        reg_1179 <= grp_fu_1025_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st195_fsm_113) | (ap_const_logic_1 == ap_sig_cseq_ST_st238_fsm_156))) begin
        reg_1188 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_57) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_returnA_1_reg_2022 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_returnB_1_reg_2027 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnA_1_reg_2037 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnB_1_reg_2047 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnSquareA_1_reg_2032 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnSquareB_1_reg_2042 <= grp_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == tmp_12_fu_1385_p2))) begin
        tmp_14_reg_1837[0] <= tmp_14_fu_1402_p1[0];
tmp_14_reg_1837[1] <= tmp_14_fu_1402_p1[1];
tmp_14_reg_1837[2] <= tmp_14_fu_1402_p1[2];
tmp_14_reg_1837[3] <= tmp_14_fu_1402_p1[3];
tmp_14_reg_1837[4] <= tmp_14_fu_1402_p1[4];
tmp_14_reg_1837[5] <= tmp_14_fu_1402_p1[5];
tmp_14_reg_1837[6] <= tmp_14_fu_1402_p1[6];
tmp_14_reg_1837[7] <= tmp_14_fu_1402_p1[7];
tmp_14_reg_1837[8] <= tmp_14_fu_1402_p1[8];
tmp_14_reg_1837[9] <= tmp_14_fu_1402_p1[9];
tmp_14_reg_1837[10] <= tmp_14_fu_1402_p1[10];
tmp_14_reg_1837[11] <= tmp_14_fu_1402_p1[11];
tmp_14_reg_1837[12] <= tmp_14_fu_1402_p1[12];
tmp_14_reg_1837[13] <= tmp_14_fu_1402_p1[13];
tmp_14_reg_1837[14] <= tmp_14_fu_1402_p1[14];
tmp_14_reg_1837[15] <= tmp_14_fu_1402_p1[15];
tmp_14_reg_1837[16] <= tmp_14_fu_1402_p1[16];
tmp_14_reg_1837[17] <= tmp_14_fu_1402_p1[17];
tmp_14_reg_1837[18] <= tmp_14_fu_1402_p1[18];
tmp_14_reg_1837[19] <= tmp_14_fu_1402_p1[19];
tmp_14_reg_1837[20] <= tmp_14_fu_1402_p1[20];
tmp_14_reg_1837[21] <= tmp_14_fu_1402_p1[21];
tmp_14_reg_1837[22] <= tmp_14_fu_1402_p1[22];
tmp_14_reg_1837[23] <= tmp_14_fu_1402_p1[23];
tmp_14_reg_1837[24] <= tmp_14_fu_1402_p1[24];
tmp_14_reg_1837[25] <= tmp_14_fu_1402_p1[25];
tmp_14_reg_1837[26] <= tmp_14_fu_1402_p1[26];
tmp_14_reg_1837[27] <= tmp_14_fu_1402_p1[27];
tmp_14_reg_1837[28] <= tmp_14_fu_1402_p1[28];
tmp_14_reg_1837[29] <= tmp_14_fu_1402_p1[29];
tmp_14_reg_1837[30] <= tmp_14_fu_1402_p1[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == tmp_57_i_fu_1242_p2))) begin
        tmp_1_reg_1523 <= tmp_1_fu_1258_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29))) begin
        tmp_22_reg_1953 <= grp_fu_1010_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it27))) begin
        tmp_24_reg_1943 <= grp_fu_996_p2;
        tmp_29_reg_1948 <= grp_fu_1002_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29))) begin
        tmp_32_reg_1958 <= grp_fu_1010_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it34))) begin
        tmp_33_reg_1963 <= grp_fu_984_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56) & (ap_const_lv1_0 == exitcond_fu_1424_p2))) begin
        tmp_55_reg_1977[0] <= tmp_55_fu_1436_p1[0];
tmp_55_reg_1977[1] <= tmp_55_fu_1436_p1[1];
tmp_55_reg_1977[2] <= tmp_55_fu_1436_p1[2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_59_cast_reg_1491[0] <= tmp_59_cast_fu_1203_p1[0];
tmp_59_cast_reg_1491[1] <= tmp_59_cast_fu_1203_p1[1];
tmp_59_cast_reg_1491[2] <= tmp_59_cast_fu_1203_p1[2];
tmp_59_cast_reg_1491[3] <= tmp_59_cast_fu_1203_p1[3];
tmp_59_cast_reg_1491[4] <= tmp_59_cast_fu_1203_p1[4];
tmp_59_cast_reg_1491[5] <= tmp_59_cast_fu_1203_p1[5];
tmp_59_cast_reg_1491[6] <= tmp_59_cast_fu_1203_p1[6];
tmp_59_cast_reg_1491[7] <= tmp_59_cast_fu_1203_p1[7];
tmp_59_cast_reg_1491[8] <= tmp_59_cast_fu_1203_p1[8];
tmp_59_cast_reg_1491[9] <= tmp_59_cast_fu_1203_p1[9];
tmp_59_cast_reg_1491[10] <= tmp_59_cast_fu_1203_p1[10];
tmp_59_cast_reg_1491[11] <= tmp_59_cast_fu_1203_p1[11];
tmp_59_cast_reg_1491[12] <= tmp_59_cast_fu_1203_p1[12];
tmp_59_cast_reg_1491[13] <= tmp_59_cast_fu_1203_p1[13];
tmp_59_cast_reg_1491[14] <= tmp_59_cast_fu_1203_p1[14];
tmp_59_cast_reg_1491[15] <= tmp_59_cast_fu_1203_p1[15];
tmp_59_cast_reg_1491[16] <= tmp_59_cast_fu_1203_p1[16];
tmp_59_cast_reg_1491[17] <= tmp_59_cast_fu_1203_p1[17];
tmp_59_cast_reg_1491[18] <= tmp_59_cast_fu_1203_p1[18];
tmp_59_cast_reg_1491[19] <= tmp_59_cast_fu_1203_p1[19];
tmp_59_cast_reg_1491[20] <= tmp_59_cast_fu_1203_p1[20];
tmp_59_cast_reg_1491[21] <= tmp_59_cast_fu_1203_p1[21];
tmp_59_cast_reg_1491[22] <= tmp_59_cast_fu_1203_p1[22];
tmp_59_cast_reg_1491[23] <= tmp_59_cast_fu_1203_p1[23];
tmp_59_cast_reg_1491[24] <= tmp_59_cast_fu_1203_p1[24];
tmp_59_cast_reg_1491[25] <= tmp_59_cast_fu_1203_p1[25];
tmp_59_cast_reg_1491[26] <= tmp_59_cast_fu_1203_p1[26];
tmp_59_cast_reg_1491[27] <= tmp_59_cast_fu_1203_p1[27];
tmp_59_cast_reg_1491[28] <= tmp_59_cast_fu_1203_p1[28];
tmp_59_cast_reg_1491[29] <= tmp_59_cast_fu_1203_p1[29];
        tmp_60_cast_reg_1496[0] <= tmp_60_cast_fu_1217_p1[0];
tmp_60_cast_reg_1496[1] <= tmp_60_cast_fu_1217_p1[1];
tmp_60_cast_reg_1496[2] <= tmp_60_cast_fu_1217_p1[2];
tmp_60_cast_reg_1496[3] <= tmp_60_cast_fu_1217_p1[3];
tmp_60_cast_reg_1496[4] <= tmp_60_cast_fu_1217_p1[4];
tmp_60_cast_reg_1496[5] <= tmp_60_cast_fu_1217_p1[5];
tmp_60_cast_reg_1496[6] <= tmp_60_cast_fu_1217_p1[6];
tmp_60_cast_reg_1496[7] <= tmp_60_cast_fu_1217_p1[7];
tmp_60_cast_reg_1496[8] <= tmp_60_cast_fu_1217_p1[8];
tmp_60_cast_reg_1496[9] <= tmp_60_cast_fu_1217_p1[9];
tmp_60_cast_reg_1496[10] <= tmp_60_cast_fu_1217_p1[10];
tmp_60_cast_reg_1496[11] <= tmp_60_cast_fu_1217_p1[11];
tmp_60_cast_reg_1496[12] <= tmp_60_cast_fu_1217_p1[12];
tmp_60_cast_reg_1496[13] <= tmp_60_cast_fu_1217_p1[13];
tmp_60_cast_reg_1496[14] <= tmp_60_cast_fu_1217_p1[14];
tmp_60_cast_reg_1496[15] <= tmp_60_cast_fu_1217_p1[15];
tmp_60_cast_reg_1496[16] <= tmp_60_cast_fu_1217_p1[16];
tmp_60_cast_reg_1496[17] <= tmp_60_cast_fu_1217_p1[17];
tmp_60_cast_reg_1496[18] <= tmp_60_cast_fu_1217_p1[18];
tmp_60_cast_reg_1496[19] <= tmp_60_cast_fu_1217_p1[19];
tmp_60_cast_reg_1496[20] <= tmp_60_cast_fu_1217_p1[20];
tmp_60_cast_reg_1496[21] <= tmp_60_cast_fu_1217_p1[21];
tmp_60_cast_reg_1496[22] <= tmp_60_cast_fu_1217_p1[22];
tmp_60_cast_reg_1496[23] <= tmp_60_cast_fu_1217_p1[23];
tmp_60_cast_reg_1496[24] <= tmp_60_cast_fu_1217_p1[24];
tmp_60_cast_reg_1496[25] <= tmp_60_cast_fu_1217_p1[25];
tmp_60_cast_reg_1496[26] <= tmp_60_cast_fu_1217_p1[26];
tmp_60_cast_reg_1496[27] <= tmp_60_cast_fu_1217_p1[27];
tmp_60_cast_reg_1496[28] <= tmp_60_cast_fu_1217_p1[28];
tmp_60_cast_reg_1496[29] <= tmp_60_cast_fu_1217_p1[29];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st262_fsm_180)) begin
        volatilityA_reg_2057 <= grp_fu_1033_p2;
        volatilityB_reg_2062 <= grp_fu_1038_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        weight_rom_load_1_reg_1529 <= weight_rom_q0;
    end
end

/// acc_returnA_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it24 or ap_reg_ppiten_pp3_it0 or acc_returnA_addr_reg_1556 or acc_returnA_addr_7_reg_1626 or acc_returnA_addr_4_reg_1696 or ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it23 or ap_sig_cseq_ST_pp3_stg0_fsm_56 or tmp_55_fu_1436_p1 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnA_address0 = acc_returnA_addr_4_reg_1696;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_returnA_address0 = acc_returnA_addr_7_reg_1626;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_returnA_address0 = acc_returnA_addr_reg_1556;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56))) begin
        acc_returnA_address0 = tmp_55_fu_1436_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it24))) begin
        acc_returnA_address0 = ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it23;
    end else begin
        acc_returnA_address0 = 'bx;
    end
end

/// acc_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or acc_returnA_addr_6_reg_1591 or acc_returnA_addr_3_reg_1661 or acc_returnA_addr_5_reg_1731 or ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it29 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_returnA_address1 = ap_reg_ppstg_acc_returnA_addr_1_reg_1883_pp2_it29;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnA_address1 = acc_returnA_addr_5_reg_1731;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_returnA_address1 = acc_returnA_addr_3_reg_1661;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_returnA_address1 = acc_returnA_addr_6_reg_1591;
    end else begin
        acc_returnA_address1 = 'bx;
    end
end

/// acc_returnA_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it24 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_56 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56)) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it24)))) begin
        acc_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_returnA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        acc_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_returnA_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or reg_1069 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_returnA_d1 = reg_1069;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_returnA_d1 = ap_const_lv32_0;
    end else begin
        acc_returnA_d1 = 'bx;
    end
end

/// acc_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_returnA_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it29 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29)))) begin
        acc_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_returnB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp3_stg1_fsm_57 or ap_reg_ppiten_pp3_it0 or acc_returnB_addr_reg_1561 or acc_returnB_addr_7_reg_1631 or acc_returnB_addr_4_reg_1701 or ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it29 or tmp_55_reg_1977 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30))) begin
        acc_returnB_address0 = ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it29;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnB_address0 = acc_returnB_addr_4_reg_1701;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_returnB_address0 = acc_returnB_addr_7_reg_1631;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_returnB_address0 = acc_returnB_addr_reg_1561;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_57) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
        acc_returnB_address0 = tmp_55_reg_1977;
    end else begin
        acc_returnB_address0 = 'bx;
    end
end

/// acc_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it24 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or acc_returnB_addr_6_reg_1596 or acc_returnB_addr_3_reg_1666 or acc_returnB_addr_5_reg_1736 or ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it24 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_returnB_address1 = acc_returnB_addr_5_reg_1736;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_returnB_address1 = acc_returnB_addr_3_reg_1666;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_returnB_address1 = acc_returnB_addr_6_reg_1596;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it24) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_returnB_address1 = ap_reg_ppstg_acc_returnB_addr_1_reg_1889_pp2_it24;
    end else begin
        acc_returnB_address1 = 'bx;
    end
end

/// acc_returnB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp3_stg1_fsm_57 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg1_fsm_57) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30)))) begin
        acc_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it24 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it24) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        acc_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_returnB_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it30 or reg_1069 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30))) begin
        acc_returnB_d0 = reg_1069;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_returnB_d0 = ap_const_lv32_0;
    end else begin
        acc_returnB_d0 = 'bx;
    end
end

/// acc_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it30 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it29 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it30) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it29)))) begin
        acc_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_returnB_we1 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it32 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg3_fsm_59 or acc_weight_returnA_addr_reg_1571 or acc_weight_returnA_addr_7_reg_1641 or acc_weight_returnA_addr_4_reg_1711 or ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it31 or tmp_55_reg_1977 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32))) begin
        acc_weight_returnA_address0 = ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it31;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_4_reg_1711;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_7_reg_1641;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnA_address0 = acc_weight_returnA_addr_reg_1571;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59))) begin
        acc_weight_returnA_address0 = tmp_55_reg_1977;
    end else begin
        acc_weight_returnA_address0 = 'bx;
    end
end

/// acc_weight_returnA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it26 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or acc_weight_returnA_addr_6_reg_1606 or acc_weight_returnA_addr_3_reg_1676 or acc_weight_returnA_addr_5_reg_1746 or ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it26 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_5_reg_1746;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_3_reg_1676;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnA_address1 = acc_weight_returnA_addr_6_reg_1606;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it26) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_weight_returnA_address1 = ap_reg_ppstg_acc_weight_returnA_addr_1_reg_1907_pp2_it26;
    end else begin
        acc_weight_returnA_address1 = 'bx;
    end
end

/// acc_weight_returnA_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it32 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg3_fsm_59 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59)) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32)))) begin
        acc_weight_returnA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it26 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it26) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        acc_weight_returnA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it32 or reg_1165 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32))) begin
        acc_weight_returnA_d0 = reg_1165;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnA_d0 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_d0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or acc_weight_returnA_returnB_add_reg_1586 or acc_weight_returnA_returnB_add_2_reg_1656 or acc_weight_returnA_returnB_add_4_reg_1726 or ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it34 or tmp_55_reg_1977 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnA_returnB_address0 = ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_4_reg_1726;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_2_reg_1656;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnA_returnB_address0 = acc_weight_returnA_returnB_add_reg_1586;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61))) begin
        acc_weight_returnA_returnB_address0 = tmp_55_reg_1977;
    end else begin
        acc_weight_returnA_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or acc_weight_returnA_returnB_add_1_reg_1621 or acc_weight_returnA_returnB_add_3_reg_1691 or acc_weight_returnA_returnB_add_5_reg_1761 or ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it29 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_5_reg_1761;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_3_reg_1691;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnA_returnB_address1 = acc_weight_returnA_returnB_add_1_reg_1621;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_weight_returnA_returnB_address1 = ap_reg_ppstg_acc_weight_returnA_returnB_add_6_reg_1919_pp2_it29;
    end else begin
        acc_weight_returnA_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnA_returnB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61)) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35)))) begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or tmp_33_reg_1963 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnA_returnB_d0 = tmp_33_reg_1963;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnA_returnB_d0 = ap_const_lv32_0;
    end else begin
        acc_weight_returnA_returnB_d0 = 'bx;
    end
end

/// acc_weight_returnA_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it34 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it34)))) begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_returnB_we1 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it32 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it31 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it31)))) begin
        acc_weight_returnA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnA_we1 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or acc_weight_returnB_addr_reg_1581 or acc_weight_returnB_addr_7_reg_1651 or acc_weight_returnB_addr_4_reg_1721 or ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it26 or tmp_55_reg_1977 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_4_reg_1721;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_7_reg_1651;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnB_address0 = acc_weight_returnB_addr_reg_1581;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61))) begin
        acc_weight_returnB_address0 = tmp_55_reg_1977;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it27))) begin
        acc_weight_returnB_address0 = ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it26;
    end else begin
        acc_weight_returnB_address0 = 'bx;
    end
end

/// acc_weight_returnB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or acc_weight_returnB_addr_6_reg_1616 or acc_weight_returnB_addr_3_reg_1686 or acc_weight_returnB_addr_5_reg_1756 or ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it32 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_weight_returnB_address1 = ap_reg_ppstg_acc_weight_returnB_addr_1_reg_1913_pp2_it32;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_5_reg_1756;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_3_reg_1686;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnB_address1 = acc_weight_returnB_addr_6_reg_1616;
    end else begin
        acc_weight_returnB_address1 = 'bx;
    end
end

/// acc_weight_returnB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61)) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it27)))) begin
        acc_weight_returnB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        acc_weight_returnB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1165 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_weight_returnB_d1 = reg_1165;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnB_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnB_d1 = 'bx;
    end
end

/// acc_weight_returnB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnB_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it32 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it32 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it32) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it32)))) begin
        acc_weight_returnB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnB_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it29 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_58 or acc_weight_returnSquareA_addr_reg_1566 or acc_weight_returnSquareA_addr_7_reg_1636 or acc_weight_returnSquareA_addr_4_reg_1706 or ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it28 or tmp_55_reg_1977 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_4_reg_1706;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_7_reg_1636;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnSquareA_address0 = acc_weight_returnSquareA_addr_reg_1566;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58))) begin
        acc_weight_returnSquareA_address0 = tmp_55_reg_1977;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it29))) begin
        acc_weight_returnSquareA_address0 = ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it28;
    end else begin
        acc_weight_returnSquareA_address0 = 'bx;
    end
end

/// acc_weight_returnSquareA_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or acc_weight_returnSquareA_addr_6_reg_1601 or acc_weight_returnSquareA_addr_3_reg_1671 or acc_weight_returnSquareA_addr_5_reg_1741 or ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it34 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_weight_returnSquareA_address1 = ap_reg_ppstg_acc_weight_returnSquareA_addr_1_reg_1895_pp2_it34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_5_reg_1741;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_3_reg_1671;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnSquareA_address1 = acc_weight_returnSquareA_addr_6_reg_1601;
    end else begin
        acc_weight_returnSquareA_address1 = 'bx;
    end
end

/// acc_weight_returnSquareA_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it29 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg2_fsm_58 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58)) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it29)))) begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_d1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1173 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_weight_returnSquareA_d1 = reg_1173;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnSquareA_d1 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareA_d1 = 'bx;
    end
end

/// acc_weight_returnSquareA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnSquareA_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareA_we1 assign process. ///
always @ (ap_reg_ppiten_pp2_it34 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it34 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it34) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it34)))) begin
        acc_weight_returnSquareA_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareA_we1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg4_fsm_60 or acc_weight_returnSquareB_addr_reg_1576 or acc_weight_returnSquareB_addr_7_reg_1646 or acc_weight_returnSquareB_addr_4_reg_1716 or ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it34 or tmp_55_reg_1977 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnSquareB_address0 = ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_4_reg_1716;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_7_reg_1646;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnSquareB_address0 = acc_weight_returnSquareB_addr_reg_1576;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60))) begin
        acc_weight_returnSquareB_address0 = tmp_55_reg_1977;
    end else begin
        acc_weight_returnSquareB_address0 = 'bx;
    end
end

/// acc_weight_returnSquareB_address1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or acc_weight_returnSquareB_addr_6_reg_1611 or acc_weight_returnSquareB_addr_3_reg_1681 or acc_weight_returnSquareB_addr_5_reg_1751 or ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it29 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_5_reg_1751;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_3_reg_1681;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49)) begin
        acc_weight_returnSquareB_address1 = acc_weight_returnSquareB_addr_6_reg_1611;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        acc_weight_returnSquareB_address1 = ap_reg_ppstg_acc_weight_returnSquareB_addr_1_reg_1901_pp2_it29;
    end else begin
        acc_weight_returnSquareB_address1 = 'bx;
    end
end

/// acc_weight_returnSquareB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or ap_reg_ppiten_pp3_it0 or ap_sig_cseq_ST_pp3_stg4_fsm_60 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60)) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35)))) begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_ce1 assign process. ///
always @ (ap_reg_ppiten_pp2_it29 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it29) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_ce1 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or reg_1173 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35))) begin
        acc_weight_returnSquareB_d0 = reg_1173;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnSquareB_d0 = ap_const_lv32_0;
    end else begin
        acc_weight_returnSquareB_d0 = 'bx;
    end
end

/// acc_weight_returnSquareB_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it35 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it34 or ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it34)))) begin
        acc_weight_returnSquareB_we0 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we0 = ap_const_logic_0;
    end
end

/// acc_weight_returnSquareB_we1 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_51 or ap_sig_cseq_ST_st54_fsm_49 or ap_sig_cseq_ST_st55_fsm_50)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_50))) begin
        acc_weight_returnSquareB_we1 = ap_const_logic_1;
    end else begin
        acc_weight_returnSquareB_we1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27 or tmp_3_fu_1284_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & (ap_const_lv1_0 == tmp_3_fu_1284_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27 or tmp_3_fu_1284_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & (ap_const_lv1_0 == tmp_3_fu_1284_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_34 assign process. ///
always @ (ap_sig_bdd_426)
begin
    if (ap_sig_bdd_426) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_48 assign process. ///
always @ (ap_sig_bdd_451)
begin
    if (ap_sig_bdd_451) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg0_fsm_52 assign process. ///
always @ (ap_sig_bdd_474)
begin
    if (ap_sig_bdd_474) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg1_fsm_53 assign process. ///
always @ (ap_sig_bdd_696)
begin
    if (ap_sig_bdd_696) begin
        ap_sig_cseq_ST_pp2_stg1_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg1_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg0_fsm_56 assign process. ///
always @ (ap_sig_bdd_1444)
begin
    if (ap_sig_bdd_1444) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg1_fsm_57 assign process. ///
always @ (ap_sig_bdd_803)
begin
    if (ap_sig_bdd_803) begin
        ap_sig_cseq_ST_pp3_stg1_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg1_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg2_fsm_58 assign process. ///
always @ (ap_sig_bdd_827)
begin
    if (ap_sig_bdd_827) begin
        ap_sig_cseq_ST_pp3_stg2_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg2_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg3_fsm_59 assign process. ///
always @ (ap_sig_bdd_895)
begin
    if (ap_sig_bdd_895) begin
        ap_sig_cseq_ST_pp3_stg3_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg3_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg4_fsm_60 assign process. ///
always @ (ap_sig_bdd_853)
begin
    if (ap_sig_bdd_853) begin
        ap_sig_cseq_ST_pp3_stg4_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg4_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg5_fsm_61 assign process. ///
always @ (ap_sig_bdd_920)
begin
    if (ap_sig_bdd_920) begin
        ap_sig_cseq_ST_pp3_stg5_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg5_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg6_fsm_62 assign process. ///
always @ (ap_sig_bdd_872)
begin
    if (ap_sig_bdd_872) begin
        ap_sig_cseq_ST_pp3_stg6_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg6_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg7_fsm_63 assign process. ///
always @ (ap_sig_bdd_1494)
begin
    if (ap_sig_bdd_1494) begin
        ap_sig_cseq_ST_pp3_stg7_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg7_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg8_fsm_64 assign process. ///
always @ (ap_sig_bdd_1559)
begin
    if (ap_sig_bdd_1559) begin
        ap_sig_cseq_ST_pp3_stg8_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg8_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_1939)
begin
    if (ap_sig_bdd_1939) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st128_fsm_54 assign process. ///
always @ (ap_sig_bdd_1836)
begin
    if (ap_sig_bdd_1836) begin
        ap_sig_cseq_ST_st128_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st128_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st129_fsm_55 assign process. ///
always @ (ap_sig_bdd_674)
begin
    if (ap_sig_bdd_674) begin
        ap_sig_cseq_ST_st129_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st129_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st147_fsm_65 assign process. ///
always @ (ap_sig_bdd_2035)
begin
    if (ap_sig_bdd_2035) begin
        ap_sig_cseq_ST_st147_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st147_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st148_fsm_66 assign process. ///
always @ (ap_sig_bdd_2295)
begin
    if (ap_sig_bdd_2295) begin
        ap_sig_cseq_ST_st148_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st148_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st149_fsm_67 assign process. ///
always @ (ap_sig_bdd_2303)
begin
    if (ap_sig_bdd_2303) begin
        ap_sig_cseq_ST_st149_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st149_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st150_fsm_68 assign process. ///
always @ (ap_sig_bdd_2311)
begin
    if (ap_sig_bdd_2311) begin
        ap_sig_cseq_ST_st150_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st150_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st151_fsm_69 assign process. ///
always @ (ap_sig_bdd_2319)
begin
    if (ap_sig_bdd_2319) begin
        ap_sig_cseq_ST_st151_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st151_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st152_fsm_70 assign process. ///
always @ (ap_sig_bdd_2327)
begin
    if (ap_sig_bdd_2327) begin
        ap_sig_cseq_ST_st152_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st152_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st153_fsm_71 assign process. ///
always @ (ap_sig_bdd_2335)
begin
    if (ap_sig_bdd_2335) begin
        ap_sig_cseq_ST_st153_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st153_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st154_fsm_72 assign process. ///
always @ (ap_sig_bdd_2343)
begin
    if (ap_sig_bdd_2343) begin
        ap_sig_cseq_ST_st154_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st154_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st155_fsm_73 assign process. ///
always @ (ap_sig_bdd_2351)
begin
    if (ap_sig_bdd_2351) begin
        ap_sig_cseq_ST_st155_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st155_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st156_fsm_74 assign process. ///
always @ (ap_sig_bdd_2359)
begin
    if (ap_sig_bdd_2359) begin
        ap_sig_cseq_ST_st156_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st156_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st157_fsm_75 assign process. ///
always @ (ap_sig_bdd_2367)
begin
    if (ap_sig_bdd_2367) begin
        ap_sig_cseq_ST_st157_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st157_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st158_fsm_76 assign process. ///
always @ (ap_sig_bdd_2375)
begin
    if (ap_sig_bdd_2375) begin
        ap_sig_cseq_ST_st158_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st158_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st159_fsm_77 assign process. ///
always @ (ap_sig_bdd_2383)
begin
    if (ap_sig_bdd_2383) begin
        ap_sig_cseq_ST_st159_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st159_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st160_fsm_78 assign process. ///
always @ (ap_sig_bdd_2391)
begin
    if (ap_sig_bdd_2391) begin
        ap_sig_cseq_ST_st160_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st160_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st161_fsm_79 assign process. ///
always @ (ap_sig_bdd_2399)
begin
    if (ap_sig_bdd_2399) begin
        ap_sig_cseq_ST_st161_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st161_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st162_fsm_80 assign process. ///
always @ (ap_sig_bdd_2407)
begin
    if (ap_sig_bdd_2407) begin
        ap_sig_cseq_ST_st162_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st162_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st163_fsm_81 assign process. ///
always @ (ap_sig_bdd_2415)
begin
    if (ap_sig_bdd_2415) begin
        ap_sig_cseq_ST_st163_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st163_fsm_81 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st164_fsm_82 assign process. ///
always @ (ap_sig_bdd_2423)
begin
    if (ap_sig_bdd_2423) begin
        ap_sig_cseq_ST_st164_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st164_fsm_82 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st165_fsm_83 assign process. ///
always @ (ap_sig_bdd_2431)
begin
    if (ap_sig_bdd_2431) begin
        ap_sig_cseq_ST_st165_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st165_fsm_83 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st166_fsm_84 assign process. ///
always @ (ap_sig_bdd_2439)
begin
    if (ap_sig_bdd_2439) begin
        ap_sig_cseq_ST_st166_fsm_84 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st166_fsm_84 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st167_fsm_85 assign process. ///
always @ (ap_sig_bdd_2447)
begin
    if (ap_sig_bdd_2447) begin
        ap_sig_cseq_ST_st167_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st167_fsm_85 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st168_fsm_86 assign process. ///
always @ (ap_sig_bdd_2455)
begin
    if (ap_sig_bdd_2455) begin
        ap_sig_cseq_ST_st168_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st168_fsm_86 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st169_fsm_87 assign process. ///
always @ (ap_sig_bdd_2463)
begin
    if (ap_sig_bdd_2463) begin
        ap_sig_cseq_ST_st169_fsm_87 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st169_fsm_87 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st170_fsm_88 assign process. ///
always @ (ap_sig_bdd_2471)
begin
    if (ap_sig_bdd_2471) begin
        ap_sig_cseq_ST_st170_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st170_fsm_88 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st171_fsm_89 assign process. ///
always @ (ap_sig_bdd_2479)
begin
    if (ap_sig_bdd_2479) begin
        ap_sig_cseq_ST_st171_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st171_fsm_89 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st172_fsm_90 assign process. ///
always @ (ap_sig_bdd_2487)
begin
    if (ap_sig_bdd_2487) begin
        ap_sig_cseq_ST_st172_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st172_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st173_fsm_91 assign process. ///
always @ (ap_sig_bdd_2495)
begin
    if (ap_sig_bdd_2495) begin
        ap_sig_cseq_ST_st173_fsm_91 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st173_fsm_91 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st174_fsm_92 assign process. ///
always @ (ap_sig_bdd_2503)
begin
    if (ap_sig_bdd_2503) begin
        ap_sig_cseq_ST_st174_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st174_fsm_92 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st175_fsm_93 assign process. ///
always @ (ap_sig_bdd_2511)
begin
    if (ap_sig_bdd_2511) begin
        ap_sig_cseq_ST_st175_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st175_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st176_fsm_94 assign process. ///
always @ (ap_sig_bdd_752)
begin
    if (ap_sig_bdd_752) begin
        ap_sig_cseq_ST_st176_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st176_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st177_fsm_95 assign process. ///
always @ (ap_sig_bdd_2003)
begin
    if (ap_sig_bdd_2003) begin
        ap_sig_cseq_ST_st177_fsm_95 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st177_fsm_95 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st181_fsm_99 assign process. ///
always @ (ap_sig_bdd_602)
begin
    if (ap_sig_bdd_602) begin
        ap_sig_cseq_ST_st181_fsm_99 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st181_fsm_99 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st182_fsm_100 assign process. ///
always @ (ap_sig_bdd_1951)
begin
    if (ap_sig_bdd_1951) begin
        ap_sig_cseq_ST_st182_fsm_100 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st182_fsm_100 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st186_fsm_104 assign process. ///
always @ (ap_sig_bdd_610)
begin
    if (ap_sig_bdd_610) begin
        ap_sig_cseq_ST_st186_fsm_104 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st186_fsm_104 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st187_fsm_105 assign process. ///
always @ (ap_sig_bdd_1958)
begin
    if (ap_sig_bdd_1958) begin
        ap_sig_cseq_ST_st187_fsm_105 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st187_fsm_105 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_684)
begin
    if (ap_sig_bdd_684) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st190_fsm_108 assign process. ///
always @ (ap_sig_bdd_708)
begin
    if (ap_sig_bdd_708) begin
        ap_sig_cseq_ST_st190_fsm_108 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st190_fsm_108 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st191_fsm_109 assign process. ///
always @ (ap_sig_bdd_1965)
begin
    if (ap_sig_bdd_1965) begin
        ap_sig_cseq_ST_st191_fsm_109 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st191_fsm_109 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st195_fsm_113 assign process. ///
always @ (ap_sig_bdd_945)
begin
    if (ap_sig_bdd_945) begin
        ap_sig_cseq_ST_st195_fsm_113 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st195_fsm_113 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st196_fsm_114 assign process. ///
always @ (ap_sig_bdd_2042)
begin
    if (ap_sig_bdd_2042) begin
        ap_sig_cseq_ST_st196_fsm_114 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st196_fsm_114 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st197_fsm_115 assign process. ///
always @ (ap_sig_bdd_2521)
begin
    if (ap_sig_bdd_2521) begin
        ap_sig_cseq_ST_st197_fsm_115 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st197_fsm_115 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st198_fsm_116 assign process. ///
always @ (ap_sig_bdd_2529)
begin
    if (ap_sig_bdd_2529) begin
        ap_sig_cseq_ST_st198_fsm_116 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st198_fsm_116 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st199_fsm_117 assign process. ///
always @ (ap_sig_bdd_716)
begin
    if (ap_sig_bdd_716) begin
        ap_sig_cseq_ST_st199_fsm_117 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st199_fsm_117 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_1664)
begin
    if (ap_sig_bdd_1664) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_238)
begin
    if (ap_sig_bdd_238) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st200_fsm_118 assign process. ///
always @ (ap_sig_bdd_2049)
begin
    if (ap_sig_bdd_2049) begin
        ap_sig_cseq_ST_st200_fsm_118 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st200_fsm_118 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st201_fsm_119 assign process. ///
always @ (ap_sig_bdd_2539)
begin
    if (ap_sig_bdd_2539) begin
        ap_sig_cseq_ST_st201_fsm_119 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st201_fsm_119 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st202_fsm_120 assign process. ///
always @ (ap_sig_bdd_2547)
begin
    if (ap_sig_bdd_2547) begin
        ap_sig_cseq_ST_st202_fsm_120 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st202_fsm_120 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st203_fsm_121 assign process. ///
always @ (ap_sig_bdd_2555)
begin
    if (ap_sig_bdd_2555) begin
        ap_sig_cseq_ST_st203_fsm_121 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st203_fsm_121 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st204_fsm_122 assign process. ///
always @ (ap_sig_bdd_2563)
begin
    if (ap_sig_bdd_2563) begin
        ap_sig_cseq_ST_st204_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st204_fsm_122 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st205_fsm_123 assign process. ///
always @ (ap_sig_bdd_2571)
begin
    if (ap_sig_bdd_2571) begin
        ap_sig_cseq_ST_st205_fsm_123 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st205_fsm_123 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st206_fsm_124 assign process. ///
always @ (ap_sig_bdd_2579)
begin
    if (ap_sig_bdd_2579) begin
        ap_sig_cseq_ST_st206_fsm_124 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st206_fsm_124 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st207_fsm_125 assign process. ///
always @ (ap_sig_bdd_2587)
begin
    if (ap_sig_bdd_2587) begin
        ap_sig_cseq_ST_st207_fsm_125 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st207_fsm_125 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st208_fsm_126 assign process. ///
always @ (ap_sig_bdd_2595)
begin
    if (ap_sig_bdd_2595) begin
        ap_sig_cseq_ST_st208_fsm_126 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st208_fsm_126 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st209_fsm_127 assign process. ///
always @ (ap_sig_bdd_2603)
begin
    if (ap_sig_bdd_2603) begin
        ap_sig_cseq_ST_st209_fsm_127 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st209_fsm_127 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_2068)
begin
    if (ap_sig_bdd_2068) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st210_fsm_128 assign process. ///
always @ (ap_sig_bdd_2611)
begin
    if (ap_sig_bdd_2611) begin
        ap_sig_cseq_ST_st210_fsm_128 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st210_fsm_128 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st211_fsm_129 assign process. ///
always @ (ap_sig_bdd_2619)
begin
    if (ap_sig_bdd_2619) begin
        ap_sig_cseq_ST_st211_fsm_129 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st211_fsm_129 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st212_fsm_130 assign process. ///
always @ (ap_sig_bdd_2627)
begin
    if (ap_sig_bdd_2627) begin
        ap_sig_cseq_ST_st212_fsm_130 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st212_fsm_130 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st213_fsm_131 assign process. ///
always @ (ap_sig_bdd_2635)
begin
    if (ap_sig_bdd_2635) begin
        ap_sig_cseq_ST_st213_fsm_131 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st213_fsm_131 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st214_fsm_132 assign process. ///
always @ (ap_sig_bdd_2643)
begin
    if (ap_sig_bdd_2643) begin
        ap_sig_cseq_ST_st214_fsm_132 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st214_fsm_132 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st215_fsm_133 assign process. ///
always @ (ap_sig_bdd_2651)
begin
    if (ap_sig_bdd_2651) begin
        ap_sig_cseq_ST_st215_fsm_133 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st215_fsm_133 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st216_fsm_134 assign process. ///
always @ (ap_sig_bdd_2659)
begin
    if (ap_sig_bdd_2659) begin
        ap_sig_cseq_ST_st216_fsm_134 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st216_fsm_134 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st217_fsm_135 assign process. ///
always @ (ap_sig_bdd_2667)
begin
    if (ap_sig_bdd_2667) begin
        ap_sig_cseq_ST_st217_fsm_135 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st217_fsm_135 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st218_fsm_136 assign process. ///
always @ (ap_sig_bdd_2675)
begin
    if (ap_sig_bdd_2675) begin
        ap_sig_cseq_ST_st218_fsm_136 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st218_fsm_136 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st219_fsm_137 assign process. ///
always @ (ap_sig_bdd_2683)
begin
    if (ap_sig_bdd_2683) begin
        ap_sig_cseq_ST_st219_fsm_137 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st219_fsm_137 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st220_fsm_138 assign process. ///
always @ (ap_sig_bdd_2691)
begin
    if (ap_sig_bdd_2691) begin
        ap_sig_cseq_ST_st220_fsm_138 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st220_fsm_138 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st221_fsm_139 assign process. ///
always @ (ap_sig_bdd_2010)
begin
    if (ap_sig_bdd_2010) begin
        ap_sig_cseq_ST_st221_fsm_139 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st221_fsm_139 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st222_fsm_140 assign process. ///
always @ (ap_sig_bdd_2700)
begin
    if (ap_sig_bdd_2700) begin
        ap_sig_cseq_ST_st222_fsm_140 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st222_fsm_140 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st223_fsm_141 assign process. ///
always @ (ap_sig_bdd_2708)
begin
    if (ap_sig_bdd_2708) begin
        ap_sig_cseq_ST_st223_fsm_141 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st223_fsm_141 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st224_fsm_142 assign process. ///
always @ (ap_sig_bdd_2716)
begin
    if (ap_sig_bdd_2716) begin
        ap_sig_cseq_ST_st224_fsm_142 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st224_fsm_142 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st225_fsm_143 assign process. ///
always @ (ap_sig_bdd_618)
begin
    if (ap_sig_bdd_618) begin
        ap_sig_cseq_ST_st225_fsm_143 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st225_fsm_143 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st226_fsm_144 assign process. ///
always @ (ap_sig_bdd_1972)
begin
    if (ap_sig_bdd_1972) begin
        ap_sig_cseq_ST_st226_fsm_144 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st226_fsm_144 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st227_fsm_145 assign process. ///
always @ (ap_sig_bdd_2726)
begin
    if (ap_sig_bdd_2726) begin
        ap_sig_cseq_ST_st227_fsm_145 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st227_fsm_145 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st228_fsm_146 assign process. ///
always @ (ap_sig_bdd_2734)
begin
    if (ap_sig_bdd_2734) begin
        ap_sig_cseq_ST_st228_fsm_146 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st228_fsm_146 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st229_fsm_147 assign process. ///
always @ (ap_sig_bdd_784)
begin
    if (ap_sig_bdd_784) begin
        ap_sig_cseq_ST_st229_fsm_147 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st229_fsm_147 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st230_fsm_148 assign process. ///
always @ (ap_sig_bdd_1979)
begin
    if (ap_sig_bdd_1979) begin
        ap_sig_cseq_ST_st230_fsm_148 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st230_fsm_148 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st234_fsm_152 assign process. ///
always @ (ap_sig_bdd_724)
begin
    if (ap_sig_bdd_724) begin
        ap_sig_cseq_ST_st234_fsm_152 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st234_fsm_152 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st235_fsm_153 assign process. ///
always @ (ap_sig_bdd_2076)
begin
    if (ap_sig_bdd_2076) begin
        ap_sig_cseq_ST_st235_fsm_153 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st235_fsm_153 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st238_fsm_156 assign process. ///
always @ (ap_sig_bdd_969)
begin
    if (ap_sig_bdd_969) begin
        ap_sig_cseq_ST_st238_fsm_156 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st238_fsm_156 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st262_fsm_180 assign process. ///
always @ (ap_sig_bdd_1505)
begin
    if (ap_sig_bdd_1505) begin
        ap_sig_cseq_ST_st262_fsm_180 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st262_fsm_180 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st263_fsm_181 assign process. ///
always @ (ap_sig_bdd_2018)
begin
    if (ap_sig_bdd_2018) begin
        ap_sig_cseq_ST_st263_fsm_181 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st263_fsm_181 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st267_fsm_185 assign process. ///
always @ (ap_sig_bdd_626)
begin
    if (ap_sig_bdd_626) begin
        ap_sig_cseq_ST_st267_fsm_185 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st267_fsm_185 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st268_fsm_186 assign process. ///
always @ (ap_sig_bdd_2056)
begin
    if (ap_sig_bdd_2056) begin
        ap_sig_cseq_ST_st268_fsm_186 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st268_fsm_186 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st269_fsm_187 assign process. ///
always @ (ap_sig_bdd_2744)
begin
    if (ap_sig_bdd_2744) begin
        ap_sig_cseq_ST_st269_fsm_187 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st269_fsm_187 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st270_fsm_188 assign process. ///
always @ (ap_sig_bdd_2752)
begin
    if (ap_sig_bdd_2752) begin
        ap_sig_cseq_ST_st270_fsm_188 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st270_fsm_188 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st271_fsm_189 assign process. ///
always @ (ap_sig_bdd_2760)
begin
    if (ap_sig_bdd_2760) begin
        ap_sig_cseq_ST_st271_fsm_189 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st271_fsm_189 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st272_fsm_190 assign process. ///
always @ (ap_sig_bdd_2768)
begin
    if (ap_sig_bdd_2768) begin
        ap_sig_cseq_ST_st272_fsm_190 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st272_fsm_190 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st273_fsm_191 assign process. ///
always @ (ap_sig_bdd_2776)
begin
    if (ap_sig_bdd_2776) begin
        ap_sig_cseq_ST_st273_fsm_191 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st273_fsm_191 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st274_fsm_192 assign process. ///
always @ (ap_sig_bdd_2784)
begin
    if (ap_sig_bdd_2784) begin
        ap_sig_cseq_ST_st274_fsm_192 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st274_fsm_192 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st275_fsm_193 assign process. ///
always @ (ap_sig_bdd_2792)
begin
    if (ap_sig_bdd_2792) begin
        ap_sig_cseq_ST_st275_fsm_193 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st275_fsm_193 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st276_fsm_194 assign process. ///
always @ (ap_sig_bdd_2800)
begin
    if (ap_sig_bdd_2800) begin
        ap_sig_cseq_ST_st276_fsm_194 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st276_fsm_194 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st277_fsm_195 assign process. ///
always @ (ap_sig_bdd_2808)
begin
    if (ap_sig_bdd_2808) begin
        ap_sig_cseq_ST_st277_fsm_195 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st277_fsm_195 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st278_fsm_196 assign process. ///
always @ (ap_sig_bdd_2816)
begin
    if (ap_sig_bdd_2816) begin
        ap_sig_cseq_ST_st278_fsm_196 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st278_fsm_196 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st279_fsm_197 assign process. ///
always @ (ap_sig_bdd_2824)
begin
    if (ap_sig_bdd_2824) begin
        ap_sig_cseq_ST_st279_fsm_197 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st279_fsm_197 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_1018)
begin
    if (ap_sig_bdd_1018) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st280_fsm_198 assign process. ///
always @ (ap_sig_bdd_2832)
begin
    if (ap_sig_bdd_2832) begin
        ap_sig_cseq_ST_st280_fsm_198 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st280_fsm_198 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st281_fsm_199 assign process. ///
always @ (ap_sig_bdd_2840)
begin
    if (ap_sig_bdd_2840) begin
        ap_sig_cseq_ST_st281_fsm_199 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st281_fsm_199 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st282_fsm_200 assign process. ///
always @ (ap_sig_bdd_2848)
begin
    if (ap_sig_bdd_2848) begin
        ap_sig_cseq_ST_st282_fsm_200 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st282_fsm_200 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st283_fsm_201 assign process. ///
always @ (ap_sig_bdd_2856)
begin
    if (ap_sig_bdd_2856) begin
        ap_sig_cseq_ST_st283_fsm_201 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st283_fsm_201 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st284_fsm_202 assign process. ///
always @ (ap_sig_bdd_2864)
begin
    if (ap_sig_bdd_2864) begin
        ap_sig_cseq_ST_st284_fsm_202 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st284_fsm_202 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st285_fsm_203 assign process. ///
always @ (ap_sig_bdd_2872)
begin
    if (ap_sig_bdd_2872) begin
        ap_sig_cseq_ST_st285_fsm_203 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st285_fsm_203 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st286_fsm_204 assign process. ///
always @ (ap_sig_bdd_2880)
begin
    if (ap_sig_bdd_2880) begin
        ap_sig_cseq_ST_st286_fsm_204 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st286_fsm_204 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st287_fsm_205 assign process. ///
always @ (ap_sig_bdd_2888)
begin
    if (ap_sig_bdd_2888) begin
        ap_sig_cseq_ST_st287_fsm_205 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st287_fsm_205 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st288_fsm_206 assign process. ///
always @ (ap_sig_bdd_2896)
begin
    if (ap_sig_bdd_2896) begin
        ap_sig_cseq_ST_st288_fsm_206 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st288_fsm_206 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st289_fsm_207 assign process. ///
always @ (ap_sig_bdd_2904)
begin
    if (ap_sig_bdd_2904) begin
        ap_sig_cseq_ST_st289_fsm_207 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st289_fsm_207 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_1117)
begin
    if (ap_sig_bdd_1117) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st290_fsm_208 assign process. ///
always @ (ap_sig_bdd_2912)
begin
    if (ap_sig_bdd_2912) begin
        ap_sig_cseq_ST_st290_fsm_208 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st290_fsm_208 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st291_fsm_209 assign process. ///
always @ (ap_sig_bdd_2920)
begin
    if (ap_sig_bdd_2920) begin
        ap_sig_cseq_ST_st291_fsm_209 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st291_fsm_209 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st292_fsm_210 assign process. ///
always @ (ap_sig_bdd_2928)
begin
    if (ap_sig_bdd_2928) begin
        ap_sig_cseq_ST_st292_fsm_210 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st292_fsm_210 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st293_fsm_211 assign process. ///
always @ (ap_sig_bdd_2936)
begin
    if (ap_sig_bdd_2936) begin
        ap_sig_cseq_ST_st293_fsm_211 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st293_fsm_211 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st294_fsm_212 assign process. ///
always @ (ap_sig_bdd_2944)
begin
    if (ap_sig_bdd_2944) begin
        ap_sig_cseq_ST_st294_fsm_212 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st294_fsm_212 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st295_fsm_213 assign process. ///
always @ (ap_sig_bdd_2952)
begin
    if (ap_sig_bdd_2952) begin
        ap_sig_cseq_ST_st295_fsm_213 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st295_fsm_213 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st296_fsm_214 assign process. ///
always @ (ap_sig_bdd_1516)
begin
    if (ap_sig_bdd_1516) begin
        ap_sig_cseq_ST_st296_fsm_214 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st296_fsm_214 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st297_fsm_215 assign process. ///
always @ (ap_sig_bdd_761)
begin
    if (ap_sig_bdd_761) begin
        ap_sig_cseq_ST_st297_fsm_215 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st297_fsm_215 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st298_fsm_216 assign process. ///
always @ (ap_sig_bdd_1808)
begin
    if (ap_sig_bdd_1808) begin
        ap_sig_cseq_ST_st298_fsm_216 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st298_fsm_216 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_1770)
begin
    if (ap_sig_bdd_1770) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_1672)
begin
    if (ap_sig_bdd_1672) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st301_fsm_219 assign process. ///
always @ (ap_sig_bdd_1699)
begin
    if (ap_sig_bdd_1699) begin
        ap_sig_cseq_ST_st301_fsm_219 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st301_fsm_219 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_1523)
begin
    if (ap_sig_bdd_1523) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_35 assign process. ///
always @ (ap_sig_bdd_1143)
begin
    if (ap_sig_bdd_1143) begin
        ap_sig_cseq_ST_st38_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_41 assign process. ///
always @ (ap_sig_bdd_1152)
begin
    if (ap_sig_bdd_1152) begin
        ap_sig_cseq_ST_st44_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_42 assign process. ///
always @ (ap_sig_bdd_1786)
begin
    if (ap_sig_bdd_1786) begin
        ap_sig_cseq_ST_st45_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_47 assign process. ///
always @ (ap_sig_bdd_1535)
begin
    if (ap_sig_bdd_1535) begin
        ap_sig_cseq_ST_st50_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_49 assign process. ///
always @ (ap_sig_bdd_1857)
begin
    if (ap_sig_bdd_1857) begin
        ap_sig_cseq_ST_st54_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_50 assign process. ///
always @ (ap_sig_bdd_1864)
begin
    if (ap_sig_bdd_1864) begin
        ap_sig_cseq_ST_st55_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_51 assign process. ///
always @ (ap_sig_bdd_1547)
begin
    if (ap_sig_bdd_1547) begin
        ap_sig_cseq_ST_st56_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_586)
begin
    if (ap_sig_bdd_586) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_990)
begin
    if (ap_sig_bdd_990) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_999)
begin
    if (ap_sig_bdd_999) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_635)
begin
    if (ap_sig_bdd_635) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_gmem32_ARREADY assign process. ///
always @ (gmem32_ARREADY or ap_reg_ioackin_gmem32_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) begin
        ap_sig_ioackin_gmem32_ARREADY = gmem32_ARREADY;
    end else begin
        ap_sig_ioackin_gmem32_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_gmem32_AWREADY assign process. ///
always @ (gmem32_AWREADY or ap_reg_ioackin_gmem32_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_AWREADY)) begin
        ap_sig_ioackin_gmem32_AWREADY = gmem32_AWREADY;
    end else begin
        ap_sig_ioackin_gmem32_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_gmem32_WREADY assign process. ///
always @ (gmem32_WREADY or ap_reg_ioackin_gmem32_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_WREADY)) begin
        ap_sig_ioackin_gmem32_WREADY = gmem32_WREADY;
    end else begin
        ap_sig_ioackin_gmem32_WREADY = ap_const_logic_1;
    end
end

/// bramA_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it0 or tmp_7_fu_1325_p1 or tmp_13_fu_1396_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        bramA_address0 = tmp_7_fu_1325_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramA_address0 = tmp_13_fu_1396_p1;
    end else begin
        bramA_address0 = 'bx;
    end
end

/// bramA_ce0 assign process. ///
always @ (ap_sig_bdd_435 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        bramA_ce0 = ap_const_logic_1;
    end else begin
        bramA_ce0 = ap_const_logic_0;
    end
end

/// bramA_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramA_ce1 = ap_const_logic_1;
    end else begin
        bramA_ce1 = ap_const_logic_0;
    end
end

/// bramA_we0 assign process. ///
always @ (ap_sig_bdd_435 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond2_reg_1790_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_1790_pp0_it1))) begin
        bramA_we0 = ap_const_logic_1;
    end else begin
        bramA_we0 = ap_const_logic_0;
    end
end

/// bramB_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or tmp_14_reg_1837 or tmp_10_fu_1376_p1 or tmp_13_fu_1396_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        bramB_address0 = tmp_10_fu_1376_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        bramB_address0 = tmp_14_reg_1837;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        bramB_address0 = tmp_13_fu_1396_p1;
    end else begin
        bramB_address0 = 'bx;
    end
end

/// bramB_ce0 assign process. ///
always @ (ap_sig_bdd_458 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_53)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        bramB_ce0 = ap_const_logic_1;
    end else begin
        bramB_ce0 = ap_const_logic_0;
    end
end

/// bramB_we0 assign process. ///
always @ (ap_sig_bdd_458 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond3_reg_1814_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond3_reg_1814_pp1_it1))) begin
        bramB_we0 = ap_const_logic_1;
    end else begin
        bramB_we0 = ap_const_logic_0;
    end
end

/// gmem32_ARADDR assign process. ///
always @ (gmem32_addr_reg_1784 or gmem32_addr_1_reg_1808 or ap_reg_ioackin_gmem32_ARREADY or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st45_fsm_42)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_42)) begin
            gmem32_ARADDR = gmem32_addr_1_reg_1808;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
            gmem32_ARADDR = gmem32_addr_reg_1784;
        end else begin
            gmem32_ARADDR = 'bx;
        end
    end else begin
        gmem32_ARADDR = 'bx;
    end
end

/// gmem32_ARVALID assign process. ///
always @ (ap_reg_ioackin_gmem32_ARREADY or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st45_fsm_42)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY)) | ((ap_const_logic_0 == ap_reg_ioackin_gmem32_ARREADY) & (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_42)))) begin
        gmem32_ARVALID = ap_const_logic_1;
    end else begin
        gmem32_ARVALID = ap_const_logic_0;
    end
end

/// gmem32_AWVALID assign process. ///
always @ (ap_sig_cseq_ST_st297_fsm_215 or ap_reg_ioackin_gmem32_AWREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st297_fsm_215) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_AWREADY))) begin
        gmem32_AWVALID = ap_const_logic_1;
    end else begin
        gmem32_AWVALID = ap_const_logic_0;
    end
end

/// gmem32_BREADY assign process. ///
always @ (gmem32_BVALID or ap_sig_cseq_ST_st301_fsm_219)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st301_fsm_219) & ~(gmem32_BVALID == ap_const_logic_0))) begin
        gmem32_BREADY = ap_const_logic_1;
    end else begin
        gmem32_BREADY = ap_const_logic_0;
    end
end

/// gmem32_RREADY assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_34 or exitcond2_reg_1790 or ap_sig_bdd_435 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp1_stg0_fsm_48 or exitcond3_reg_1814 or ap_sig_bdd_458 or ap_reg_ppiten_pp1_it1)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond2_reg_1790 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & (ap_const_lv1_0 == exitcond3_reg_1814) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        gmem32_RREADY = ap_const_logic_1;
    end else begin
        gmem32_RREADY = ap_const_logic_0;
    end
end

/// gmem32_WVALID assign process. ///
always @ (ap_reg_ioackin_gmem32_WREADY or ap_sig_cseq_ST_st298_fsm_216)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st298_fsm_216) & (ap_const_logic_0 == ap_reg_ioackin_gmem32_WREADY))) begin
        gmem32_WVALID = ap_const_logic_1;
    end else begin
        gmem32_WVALID = ap_const_logic_0;
    end
end

/// grp_fu_1002_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1114 or reg_1179 or lnReturnA_reg_1925 or lnReturnB_reg_1934 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st177_fsm_95 or ap_sig_cseq_ST_st221_fsm_139)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100)) begin
        grp_fu_1002_p0 = reg_1114;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st177_fsm_95) | (ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139))) begin
        grp_fu_1002_p0 = reg_1179;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_1002_p0 = lnReturnB_reg_1934;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1002_p0 = lnReturnA_reg_1925;
    end else begin
        grp_fu_1002_p0 = 'bx;
    end
end

/// grp_fu_1002_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or sum_weight_returnB_reg_936 or ap_reg_ppstg_reg_1058_pp2_it24 or ap_reg_ppstg_reg_1058_pp2_it25 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1179 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st177_fsm_95 or ap_sig_cseq_ST_st221_fsm_139)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139)) begin
        grp_fu_1002_p1 = reg_1179;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100)) begin
        grp_fu_1002_p1 = sum_weight_returnB_reg_936;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st177_fsm_95)) begin
        grp_fu_1002_p1 = ap_const_lv32_40000000;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_1002_p1 = ap_reg_ppstg_reg_1058_pp2_it25;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_1002_p1 = ap_reg_ppstg_reg_1058_pp2_it24;
    end else begin
        grp_fu_1002_p1 = 'bx;
    end
end

/// grp_fu_1006_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or ap_reg_ppiten_pp2_it28 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1085 or reg_1179 or lnReturnA_reg_1925 or tmp_24_reg_1943 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st177_fsm_95 or ap_sig_cseq_ST_st221_fsm_139)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100)) begin
        grp_fu_1006_p0 = reg_1179;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st177_fsm_95) | (ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139))) begin
        grp_fu_1006_p0 = reg_1085;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1006_p0 = tmp_24_reg_1943;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_1006_p0 = lnReturnA_reg_1925;
    end else begin
        grp_fu_1006_p0 = 'bx;
    end
end

/// grp_fu_1006_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or ap_reg_ppiten_pp2_it28 or sum_weight_returnA_reg_912 or sum_weight_returnB_reg_936 or ap_reg_ppstg_reg_1058_pp2_it27 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1179 or lnReturnB_reg_1934 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st177_fsm_95 or ap_sig_cseq_ST_st221_fsm_139)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139)) begin
        grp_fu_1006_p1 = reg_1179;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100)) begin
        grp_fu_1006_p1 = sum_weight_returnA_reg_912;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st177_fsm_95)) begin
        grp_fu_1006_p1 = sum_weight_returnB_reg_936;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1006_p1 = ap_reg_ppstg_reg_1058_pp2_it27;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_1006_p1 = lnReturnB_reg_1934;
    end else begin
        grp_fu_1006_p1 = 'bx;
    end
end

/// grp_fu_1010_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or reg_1048 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1133)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_1010_p0 = reg_1133;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_1010_p0 = reg_1048;
    end else begin
        grp_fu_1010_p0 = 'bx;
    end
end

/// grp_fu_1020_ce assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or tmp_12_reg_1823 or ap_sig_cseq_ST_st225_fsm_143 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st199_fsm_117 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it15 or ap_sig_cseq_ST_st176_fsm_94 or ap_sig_cseq_ST_st297_fsm_215 or ap_sig_ioackin_gmem32_AWREADY or ap_sig_cseq_ST_st229_fsm_147 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it1 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it2 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it3 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it4 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it5 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it6 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it7 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it8 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it9 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it10 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it11 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it12 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it13 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it14 or ap_sig_cseq_ST_st296_fsm_214 or ap_sig_cseq_ST_st226_fsm_144 or ap_sig_cseq_ST_st221_fsm_139 or ap_sig_cseq_ST_st147_fsm_65 or ap_sig_cseq_ST_st196_fsm_114 or ap_sig_cseq_ST_st200_fsm_118 or ap_sig_cseq_ST_st268_fsm_186 or ap_sig_cseq_ST_st148_fsm_66 or ap_sig_cseq_ST_st149_fsm_67 or ap_sig_cseq_ST_st150_fsm_68 or ap_sig_cseq_ST_st151_fsm_69 or ap_sig_cseq_ST_st152_fsm_70 or ap_sig_cseq_ST_st153_fsm_71 or ap_sig_cseq_ST_st154_fsm_72 or ap_sig_cseq_ST_st155_fsm_73 or ap_sig_cseq_ST_st156_fsm_74 or ap_sig_cseq_ST_st157_fsm_75 or ap_sig_cseq_ST_st158_fsm_76 or ap_sig_cseq_ST_st159_fsm_77 or ap_sig_cseq_ST_st160_fsm_78 or ap_sig_cseq_ST_st161_fsm_79 or ap_sig_cseq_ST_st162_fsm_80 or ap_sig_cseq_ST_st163_fsm_81 or ap_sig_cseq_ST_st164_fsm_82 or ap_sig_cseq_ST_st165_fsm_83 or ap_sig_cseq_ST_st166_fsm_84 or ap_sig_cseq_ST_st167_fsm_85 or ap_sig_cseq_ST_st168_fsm_86 or ap_sig_cseq_ST_st169_fsm_87 or ap_sig_cseq_ST_st170_fsm_88 or ap_sig_cseq_ST_st171_fsm_89 or ap_sig_cseq_ST_st172_fsm_90 or ap_sig_cseq_ST_st173_fsm_91 or ap_sig_cseq_ST_st174_fsm_92 or ap_sig_cseq_ST_st175_fsm_93 or ap_sig_cseq_ST_st197_fsm_115 or ap_sig_cseq_ST_st198_fsm_116 or ap_sig_cseq_ST_st201_fsm_119 or ap_sig_cseq_ST_st202_fsm_120 or ap_sig_cseq_ST_st203_fsm_121 or ap_sig_cseq_ST_st204_fsm_122 or ap_sig_cseq_ST_st205_fsm_123 or ap_sig_cseq_ST_st206_fsm_124 or ap_sig_cseq_ST_st207_fsm_125 or ap_sig_cseq_ST_st208_fsm_126 or ap_sig_cseq_ST_st209_fsm_127 or ap_sig_cseq_ST_st210_fsm_128 or ap_sig_cseq_ST_st211_fsm_129 or ap_sig_cseq_ST_st212_fsm_130 or ap_sig_cseq_ST_st213_fsm_131 or ap_sig_cseq_ST_st214_fsm_132 or ap_sig_cseq_ST_st215_fsm_133 or ap_sig_cseq_ST_st216_fsm_134 or ap_sig_cseq_ST_st217_fsm_135 or ap_sig_cseq_ST_st218_fsm_136 or ap_sig_cseq_ST_st219_fsm_137 or ap_sig_cseq_ST_st220_fsm_138 or ap_sig_cseq_ST_st222_fsm_140 or ap_sig_cseq_ST_st223_fsm_141 or ap_sig_cseq_ST_st224_fsm_142 or ap_sig_cseq_ST_st227_fsm_145 or ap_sig_cseq_ST_st228_fsm_146 or ap_sig_cseq_ST_st269_fsm_187 or ap_sig_cseq_ST_st270_fsm_188 or ap_sig_cseq_ST_st271_fsm_189 or ap_sig_cseq_ST_st272_fsm_190 or ap_sig_cseq_ST_st273_fsm_191 or ap_sig_cseq_ST_st274_fsm_192 or ap_sig_cseq_ST_st275_fsm_193 or ap_sig_cseq_ST_st276_fsm_194 or ap_sig_cseq_ST_st277_fsm_195 or ap_sig_cseq_ST_st278_fsm_196 or ap_sig_cseq_ST_st279_fsm_197 or ap_sig_cseq_ST_st280_fsm_198 or ap_sig_cseq_ST_st281_fsm_199 or ap_sig_cseq_ST_st282_fsm_200 or ap_sig_cseq_ST_st283_fsm_201 or ap_sig_cseq_ST_st284_fsm_202 or ap_sig_cseq_ST_st285_fsm_203 or ap_sig_cseq_ST_st286_fsm_204 or ap_sig_cseq_ST_st287_fsm_205 or ap_sig_cseq_ST_st288_fsm_206 or ap_sig_cseq_ST_st289_fsm_207 or ap_sig_cseq_ST_st290_fsm_208 or ap_sig_cseq_ST_st291_fsm_209 or ap_sig_cseq_ST_st292_fsm_210 or ap_sig_cseq_ST_st293_fsm_211 or ap_sig_cseq_ST_st294_fsm_212 or ap_sig_cseq_ST_st295_fsm_213)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st225_fsm_143) | (ap_const_logic_1 == ap_sig_cseq_ST_st199_fsm_117) | (ap_const_logic_1 == ap_sig_cseq_ST_st176_fsm_94) | ((ap_const_logic_1 == ap_sig_cseq_ST_st297_fsm_215) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) | (ap_const_logic_1 == ap_sig_cseq_ST_st229_fsm_147) | (ap_const_logic_1 == ap_sig_cseq_ST_st296_fsm_214) | (ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144) | (ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139) | (ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_65) | (ap_const_logic_1 == ap_sig_cseq_ST_st196_fsm_114) | (ap_const_logic_1 == ap_sig_cseq_ST_st200_fsm_118) | (ap_const_logic_1 == ap_sig_cseq_ST_st268_fsm_186) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (~(ap_const_lv1_0 == tmp_12_reg_1823) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it15) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it1) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it2) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it3) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it4) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it5) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it6) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it7) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it8) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it9) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it10) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it11) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it12) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it13) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it14))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it15) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it1) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it2) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it3) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it4) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it5) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it6) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it7) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it8) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it9) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it10) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it11) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it12) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it13) | ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it14))) | (ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_66) | (ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_67) | (ap_const_logic_1 == ap_sig_cseq_ST_st150_fsm_68) | (ap_const_logic_1 == ap_sig_cseq_ST_st151_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st152_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_73) | (ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_74) | (ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st159_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st161_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st162_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st163_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_82) | (ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_83) | (ap_const_logic_1 == ap_sig_cseq_ST_st166_fsm_84) | (ap_const_logic_1 == ap_sig_cseq_ST_st167_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st168_fsm_86) | (ap_const_logic_1 == ap_sig_cseq_ST_st169_fsm_87) | (ap_const_logic_1 == ap_sig_cseq_ST_st170_fsm_88) | (ap_const_logic_1 == ap_sig_cseq_ST_st171_fsm_89) | (ap_const_logic_1 == ap_sig_cseq_ST_st172_fsm_90) | (ap_const_logic_1 == ap_sig_cseq_ST_st173_fsm_91) | (ap_const_logic_1 == ap_sig_cseq_ST_st174_fsm_92) | (ap_const_logic_1 == ap_sig_cseq_ST_st175_fsm_93) | (ap_const_logic_1 == ap_sig_cseq_ST_st197_fsm_115) | (ap_const_logic_1 == ap_sig_cseq_ST_st198_fsm_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st201_fsm_119) | (ap_const_logic_1 == ap_sig_cseq_ST_st202_fsm_120) | (ap_const_logic_1 == ap_sig_cseq_ST_st203_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st204_fsm_122) | (ap_const_logic_1 == ap_sig_cseq_ST_st205_fsm_123) | (ap_const_logic_1 == ap_sig_cseq_ST_st206_fsm_124) | (ap_const_logic_1 == ap_sig_cseq_ST_st207_fsm_125) | (ap_const_logic_1 == ap_sig_cseq_ST_st208_fsm_126) | (ap_const_logic_1 == ap_sig_cseq_ST_st209_fsm_127) | (ap_const_logic_1 == ap_sig_cseq_ST_st210_fsm_128) | (ap_const_logic_1 == ap_sig_cseq_ST_st211_fsm_129) | (ap_const_logic_1 == ap_sig_cseq_ST_st212_fsm_130) | (ap_const_logic_1 == ap_sig_cseq_ST_st213_fsm_131) | (ap_const_logic_1 == ap_sig_cseq_ST_st214_fsm_132) | (ap_const_logic_1 == ap_sig_cseq_ST_st215_fsm_133) | (ap_const_logic_1 == ap_sig_cseq_ST_st216_fsm_134) | (ap_const_logic_1 == ap_sig_cseq_ST_st217_fsm_135) | (ap_const_logic_1 == ap_sig_cseq_ST_st218_fsm_136) | (ap_const_logic_1 == ap_sig_cseq_ST_st219_fsm_137) | (ap_const_logic_1 == ap_sig_cseq_ST_st220_fsm_138) | (ap_const_logic_1 == ap_sig_cseq_ST_st222_fsm_140) | (ap_const_logic_1 == ap_sig_cseq_ST_st223_fsm_141) | (ap_const_logic_1 == ap_sig_cseq_ST_st224_fsm_142) | (ap_const_logic_1 == ap_sig_cseq_ST_st227_fsm_145) | (ap_const_logic_1 == ap_sig_cseq_ST_st228_fsm_146) | (ap_const_logic_1 == ap_sig_cseq_ST_st269_fsm_187) | (ap_const_logic_1 == ap_sig_cseq_ST_st270_fsm_188) | (ap_const_logic_1 == ap_sig_cseq_ST_st271_fsm_189) | (ap_const_logic_1 == ap_sig_cseq_ST_st272_fsm_190) | (ap_const_logic_1 == ap_sig_cseq_ST_st273_fsm_191) | (ap_const_logic_1 == ap_sig_cseq_ST_st274_fsm_192) | (ap_const_logic_1 == ap_sig_cseq_ST_st275_fsm_193) | (ap_const_logic_1 == ap_sig_cseq_ST_st276_fsm_194) | (ap_const_logic_1 == ap_sig_cseq_ST_st277_fsm_195) | (ap_const_logic_1 == ap_sig_cseq_ST_st278_fsm_196) | (ap_const_logic_1 == ap_sig_cseq_ST_st279_fsm_197) | (ap_const_logic_1 == ap_sig_cseq_ST_st280_fsm_198) | (ap_const_logic_1 == ap_sig_cseq_ST_st281_fsm_199) | (ap_const_logic_1 == ap_sig_cseq_ST_st282_fsm_200) | (ap_const_logic_1 == ap_sig_cseq_ST_st283_fsm_201) | (ap_const_logic_1 == ap_sig_cseq_ST_st284_fsm_202) | (ap_const_logic_1 == ap_sig_cseq_ST_st285_fsm_203) | (ap_const_logic_1 == ap_sig_cseq_ST_st286_fsm_204) | (ap_const_logic_1 == ap_sig_cseq_ST_st287_fsm_205) | (ap_const_logic_1 == ap_sig_cseq_ST_st288_fsm_206) | (ap_const_logic_1 == ap_sig_cseq_ST_st289_fsm_207) | (ap_const_logic_1 == ap_sig_cseq_ST_st290_fsm_208) | (ap_const_logic_1 == ap_sig_cseq_ST_st291_fsm_209) | (ap_const_logic_1 == ap_sig_cseq_ST_st292_fsm_210) | (ap_const_logic_1 == ap_sig_cseq_ST_st293_fsm_211) | (ap_const_logic_1 == ap_sig_cseq_ST_st294_fsm_212) | (ap_const_logic_1 == ap_sig_cseq_ST_st295_fsm_213))) begin
        grp_fu_1020_ce = ap_const_logic_1;
    end else begin
        grp_fu_1020_ce = ap_const_logic_0;
    end
end

/// grp_fu_1020_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it1 or sum_returnA_reg_876 or reg_1069 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1188 or bramA_load_reg_1853 or bramB_load_reg_1863 or ap_sig_cseq_ST_st147_fsm_65 or ap_sig_cseq_ST_st196_fsm_114 or ap_sig_cseq_ST_st200_fsm_118 or ap_sig_cseq_ST_st268_fsm_186)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st200_fsm_118)) begin
        grp_fu_1020_p0 = reg_1069;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st196_fsm_114) | (ap_const_logic_1 == ap_sig_cseq_ST_st268_fsm_186))) begin
        grp_fu_1020_p0 = reg_1188;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_65)) begin
        grp_fu_1020_p0 = sum_returnA_reg_876;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_1020_p0 = bramB_load_reg_1863;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
        grp_fu_1020_p0 = bramA_load_reg_1853;
    end else begin
        grp_fu_1020_p0 = 'bx;
    end
end

/// grp_fu_1020_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it1 or reg_1048 or reg_1058 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or tmp_2_reg_1539 or bramA_load_1_reg_1858 or bramB_load_1_reg_1878 or ap_sig_cseq_ST_st147_fsm_65 or ap_sig_cseq_ST_st196_fsm_114 or ap_sig_cseq_ST_st200_fsm_118 or ap_sig_cseq_ST_st268_fsm_186)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st268_fsm_186)) begin
        grp_fu_1020_p1 = reg_1048;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st196_fsm_114) | (ap_const_logic_1 == ap_sig_cseq_ST_st200_fsm_118))) begin
        grp_fu_1020_p1 = reg_1058;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_65)) begin
        grp_fu_1020_p1 = tmp_2_reg_1539;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_1020_p1 = bramB_load_1_reg_1878;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
        grp_fu_1020_p1 = bramA_load_1_reg_1858;
    end else begin
        grp_fu_1020_p1 = 'bx;
    end
end

/// grp_fu_1025_p0 assign process. ///
always @ (sum_returnB_reg_888 or reg_1165 or ap_sig_cseq_ST_st147_fsm_65 or ap_sig_cseq_ST_st196_fsm_114)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st196_fsm_114)) begin
        grp_fu_1025_p0 = reg_1165;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_65)) begin
        grp_fu_1025_p0 = sum_returnB_reg_888;
    end else begin
        grp_fu_1025_p0 = 'bx;
    end
end

/// grp_fu_1025_p1 assign process. ///
always @ (reg_1058 or tmp_2_reg_1539 or ap_sig_cseq_ST_st147_fsm_65 or ap_sig_cseq_ST_st196_fsm_114)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st196_fsm_114)) begin
        grp_fu_1025_p1 = reg_1058;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_65)) begin
        grp_fu_1025_p1 = tmp_2_reg_1539;
    end else begin
        grp_fu_1025_p1 = 'bx;
    end
end

/// grp_fu_1043_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it16 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1085 or reg_1095)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it16)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            grp_fu_1043_p1 = reg_1095;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52)) begin
            grp_fu_1043_p1 = reg_1085;
        end else begin
            grp_fu_1043_p1 = 'bx;
        end
    end else begin
        grp_fu_1043_p1 = 'bx;
    end
end

/// grp_fu_972_opcode assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it24 or ap_reg_ppiten_pp3_it0 or exitcond_reg_1968 or ap_sig_cseq_ST_pp3_stg2_fsm_58 or ap_sig_cseq_ST_pp3_stg4_fsm_60 or ap_sig_cseq_ST_pp3_stg6_fsm_62 or ap_sig_cseq_ST_pp3_stg3_fsm_59 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it25 or ap_sig_cseq_ST_pp3_stg7_fsm_63 or ap_sig_cseq_ST_pp3_stg8_fsm_64 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st187_fsm_105 or ap_sig_cseq_ST_st191_fsm_109 or ap_sig_cseq_ST_st226_fsm_144 or ap_sig_cseq_ST_st230_fsm_148)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100) | (ap_const_logic_1 == ap_sig_cseq_ST_st187_fsm_105) | (ap_const_logic_1 == ap_sig_cseq_ST_st191_fsm_109))) begin
        grp_fu_972_opcode = ap_const_lv2_1;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61)) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144) | (ap_const_logic_1 == ap_sig_cseq_ST_st230_fsm_148) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it24)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it25)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_63)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_64)))) begin
        grp_fu_972_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_972_opcode = 'bx;
    end
end

/// grp_fu_972_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or sum_weight_returnSquareA_reg_900 or sum_weight_returnA_returnB_reg_948 or reg_1069 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1085 or reg_1095 or reg_1101 or ap_reg_ppiten_pp3_it0 or reg_1107 or ap_sig_cseq_ST_pp3_stg2_fsm_58 or ap_sig_cseq_ST_pp3_stg4_fsm_60 or ap_sig_cseq_ST_pp3_stg6_fsm_62 or ap_sig_cseq_ST_pp3_stg3_fsm_59 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or weight_rom_load_1_reg_1529 or ap_sig_cseq_ST_pp3_stg7_fsm_63 or ap_sig_cseq_ST_pp3_stg8_fsm_64 or sum_returnA_phi_fu_880_p4 or sum_returnB_phi_fu_892_p4 or sum_weight_returnSquareA_phi_fu_904_p4 or sum_weight_returnA_phi_fu_916_p4 or sum_weight_returnSquareB_phi_fu_928_p4 or sum_weight_returnB_phi_fu_940_p4 or sum_weight_returnA_returnB_phi_fu_952_p4 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st187_fsm_105 or ap_sig_cseq_ST_st191_fsm_109 or ap_sig_cseq_ST_st226_fsm_144 or ap_sig_cseq_ST_st230_fsm_148)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st230_fsm_148)) begin
        grp_fu_972_p0 = reg_1095;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144)) begin
        grp_fu_972_p0 = reg_1085;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st191_fsm_109)) begin
        grp_fu_972_p0 = reg_1069;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st187_fsm_105)) begin
        grp_fu_972_p0 = sum_weight_returnSquareA_reg_900;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100)) begin
        grp_fu_972_p0 = sum_weight_returnA_returnB_reg_948;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_64))) begin
        grp_fu_972_p0 = sum_weight_returnA_returnB_phi_fu_952_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_63))) begin
        grp_fu_972_p0 = sum_weight_returnB_phi_fu_940_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62))) begin
        grp_fu_972_p0 = sum_weight_returnSquareB_phi_fu_928_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61))) begin
        grp_fu_972_p0 = sum_weight_returnA_phi_fu_916_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60))) begin
        grp_fu_972_p0 = sum_weight_returnSquareA_phi_fu_904_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59))) begin
        grp_fu_972_p0 = sum_returnB_phi_fu_892_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58))) begin
        grp_fu_972_p0 = sum_returnA_phi_fu_880_p4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_972_p0 = reg_1107;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_972_p0 = reg_1101;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_972_p0 = weight_rom_load_1_reg_1529;
    end else begin
        grp_fu_972_p0 = 'bx;
    end
end

/// grp_fu_972_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or reg_1048 or reg_1058 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1101 or ap_reg_ppiten_pp3_it0 or reg_1107 or ap_sig_cseq_ST_pp3_stg2_fsm_58 or reg_1120 or ap_sig_cseq_ST_pp3_stg4_fsm_60 or reg_1127 or ap_sig_cseq_ST_pp3_stg6_fsm_62 or reg_1133 or reg_1139 or ap_sig_cseq_ST_pp3_stg3_fsm_59 or reg_1145 or reg_1151 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or reg_1158 or lnReturnA_reg_1925 or lnReturnB_reg_1934 or ap_sig_cseq_ST_pp3_stg7_fsm_63 or ap_sig_cseq_ST_pp3_stg8_fsm_64 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st187_fsm_105 or ap_sig_cseq_ST_st191_fsm_109 or ap_sig_cseq_ST_st226_fsm_144 or ap_sig_cseq_ST_st230_fsm_148)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st191_fsm_109)) begin
        grp_fu_972_p1 = reg_1145;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st187_fsm_105) | (ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144))) begin
        grp_fu_972_p1 = reg_1048;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100) | (ap_const_logic_1 == ap_sig_cseq_ST_st230_fsm_148))) begin
        grp_fu_972_p1 = reg_1133;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg8_fsm_64))) begin
        grp_fu_972_p1 = reg_1158;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_63))) begin
        grp_fu_972_p1 = reg_1127;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62))) begin
        grp_fu_972_p1 = reg_1151;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61))) begin
        grp_fu_972_p1 = reg_1120;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60))) begin
        grp_fu_972_p1 = reg_1139;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59))) begin
        grp_fu_972_p1 = reg_1107;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58))) begin
        grp_fu_972_p1 = reg_1101;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_972_p1 = lnReturnB_reg_1934;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_972_p1 = lnReturnA_reg_1925;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_972_p1 = reg_1058;
    end else begin
        grp_fu_972_p1 = 'bx;
    end
end

/// grp_fu_976_opcode assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_reg_ppstg_tmp_12_reg_1823_pp2_it27 or ap_sig_cseq_ST_st187_fsm_105 or ap_sig_cseq_ST_st226_fsm_144)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st187_fsm_105)) begin
        grp_fu_976_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it27)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1823_pp2_it27)))) begin
        grp_fu_976_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_976_opcode = 'bx;
    end
end

/// grp_fu_976_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or sum_weight_returnSquareB_reg_924 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1120 or reg_1127 or reg_1179 or ap_sig_cseq_ST_st187_fsm_105 or ap_sig_cseq_ST_st226_fsm_144)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144)) begin
        grp_fu_976_p0 = reg_1179;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st187_fsm_105)) begin
        grp_fu_976_p0 = sum_weight_returnSquareB_reg_924;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_976_p0 = reg_1127;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_976_p0 = reg_1120;
    end else begin
        grp_fu_976_p0 = 'bx;
    end
end

/// grp_fu_976_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it27 or ap_reg_ppiten_pp2_it28 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1114 or tmp_29_reg_1948 or ap_sig_cseq_ST_st187_fsm_105 or ap_sig_cseq_ST_st226_fsm_144)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it28))) begin
        grp_fu_976_p1 = tmp_29_reg_1948;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st187_fsm_105) | (ap_const_logic_1 == ap_sig_cseq_ST_st226_fsm_144) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it27) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        grp_fu_976_p1 = reg_1114;
    end else begin
        grp_fu_976_p1 = 'bx;
    end
end

/// grp_fu_980_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1139 or reg_1151)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it30)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            grp_fu_980_p0 = reg_1151;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52)) begin
            grp_fu_980_p0 = reg_1139;
        end else begin
            grp_fu_980_p0 = 'bx;
        end
    end else begin
        grp_fu_980_p0 = 'bx;
    end
end

/// grp_fu_980_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it30 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1145 or tmp_22_reg_1953)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it30)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)) begin
            grp_fu_980_p1 = reg_1145;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52)) begin
            grp_fu_980_p1 = tmp_22_reg_1953;
        end else begin
            grp_fu_980_p1 = 'bx;
        end
    end else begin
        grp_fu_980_p1 = 'bx;
    end
end

/// grp_fu_996_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or reg_1048 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1085 or lnReturnA_reg_1925 or lnReturnB_reg_1934 or volatilityA_reg_2057 or tmp_i_reg_774 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st177_fsm_95 or ap_sig_cseq_ST_st221_fsm_139 or ap_sig_cseq_ST_st263_fsm_181)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st263_fsm_181)) begin
        grp_fu_996_p0 = volatilityA_reg_2057;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100)) begin
        grp_fu_996_p0 = reg_1048;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st177_fsm_95) | (ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139))) begin
        grp_fu_996_p0 = reg_1085;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_996_p0 = lnReturnB_reg_1934;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_996_p0 = lnReturnA_reg_1925;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_996_p0 = tmp_i_reg_774;
    end else begin
        grp_fu_996_p0 = 'bx;
    end
end

/// grp_fu_996_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it25 or sum_weight_returnA_reg_912 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or reg_1085 or lnReturnA_reg_1925 or lnReturnB_reg_1934 or volatilityB_reg_2062 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st182_fsm_100 or ap_sig_cseq_ST_st177_fsm_95 or ap_sig_cseq_ST_st221_fsm_139 or ap_sig_cseq_ST_st263_fsm_181)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st263_fsm_181)) begin
        grp_fu_996_p1 = volatilityB_reg_2062;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st221_fsm_139)) begin
        grp_fu_996_p1 = reg_1085;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st182_fsm_100)) begin
        grp_fu_996_p1 = sum_weight_returnA_reg_912;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st177_fsm_95)) begin
        grp_fu_996_p1 = ap_const_lv32_40000000;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it25) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        grp_fu_996_p1 = lnReturnB_reg_1934;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it25))) begin
        grp_fu_996_p1 = lnReturnA_reg_1925;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_996_p1 = ap_const_lv32_3F70A3D7;
    end else begin
        grp_fu_996_p1 = 'bx;
    end
end

/// i1_phi_fu_868_p4 assign process. ///
always @ (i1_reg_864 or ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it1 or tmp_12_reg_1823 or i_reg_1827)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_const_lv1_0 == tmp_12_reg_1823))) begin
        i1_phi_fu_868_p4 = i_reg_1827;
    end else begin
        i1_phi_fu_868_p4 = i1_reg_864;
    end
end

/// i2_phi_fu_964_p4 assign process. ///
always @ (i2_reg_960 or ap_reg_ppiten_pp3_it1 or exitcond_reg_1968 or ap_sig_cseq_ST_pp3_stg0_fsm_56 or i_1_reg_1972)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_reg_1968) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_56))) begin
        i2_phi_fu_964_p4 = i_1_reg_1972;
    end else begin
        i2_phi_fu_964_p4 = i2_reg_960;
    end
end

/// indvar8_phi_fu_856_p4 assign process. ///
always @ (indvar8_reg_852 or ap_sig_cseq_ST_pp1_stg0_fsm_48 or exitcond3_reg_1814 or ap_reg_ppiten_pp1_it1 or indvar_next9_reg_1818)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_48) & (ap_const_lv1_0 == exitcond3_reg_1814) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        indvar8_phi_fu_856_p4 = indvar_next9_reg_1818;
    end else begin
        indvar8_phi_fu_856_p4 = indvar8_reg_852;
    end
end

/// indvar_phi_fu_835_p4 assign process. ///
always @ (indvar_reg_831 or ap_sig_cseq_ST_pp0_stg0_fsm_34 or exitcond2_reg_1790 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_1794)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_34) & (exitcond2_reg_1790 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_835_p4 = indvar_next_reg_1794;
    end else begin
        indvar_phi_fu_835_p4 = indvar_reg_831;
    end
end

/// sum_returnA_phi_fu_880_p4 assign process. ///
always @ (sum_returnA_reg_876 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg2_fsm_58 or ap_reg_ppstg_exitcond_reg_1968_pp3_it1 or sum_returnA_1_reg_2022)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg2_fsm_58) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_returnA_phi_fu_880_p4 = sum_returnA_1_reg_2022;
    end else begin
        sum_returnA_phi_fu_880_p4 = sum_returnA_reg_876;
    end
end

/// sum_returnB_phi_fu_892_p4 assign process. ///
always @ (sum_returnB_reg_888 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg3_fsm_59 or ap_reg_ppstg_exitcond_reg_1968_pp3_it1 or sum_returnB_1_reg_2027)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg3_fsm_59) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_returnB_phi_fu_892_p4 = sum_returnB_1_reg_2027;
    end else begin
        sum_returnB_phi_fu_892_p4 = sum_returnB_reg_888;
    end
end

/// sum_weight_returnA_phi_fu_916_p4 assign process. ///
always @ (sum_weight_returnA_reg_912 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg5_fsm_61 or ap_reg_ppstg_exitcond_reg_1968_pp3_it1 or sum_weight_returnA_1_reg_2037)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg5_fsm_61) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnA_phi_fu_916_p4 = sum_weight_returnA_1_reg_2037;
    end else begin
        sum_weight_returnA_phi_fu_916_p4 = sum_weight_returnA_reg_912;
    end
end

/// sum_weight_returnB_phi_fu_940_p4 assign process. ///
always @ (sum_weight_returnB_reg_936 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond_reg_1968_pp3_it1 or sum_weight_returnB_1_reg_2047 or ap_sig_cseq_ST_pp3_stg7_fsm_63)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_63))) begin
        sum_weight_returnB_phi_fu_940_p4 = sum_weight_returnB_1_reg_2047;
    end else begin
        sum_weight_returnB_phi_fu_940_p4 = sum_weight_returnB_reg_936;
    end
end

/// sum_weight_returnSquareA_phi_fu_904_p4 assign process. ///
always @ (sum_weight_returnSquareA_reg_900 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg4_fsm_60 or ap_reg_ppstg_exitcond_reg_1968_pp3_it1 or sum_weight_returnSquareA_1_reg_2032)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_60) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnSquareA_phi_fu_904_p4 = sum_weight_returnSquareA_1_reg_2032;
    end else begin
        sum_weight_returnSquareA_phi_fu_904_p4 = sum_weight_returnSquareA_reg_900;
    end
end

/// sum_weight_returnSquareB_phi_fu_928_p4 assign process. ///
always @ (sum_weight_returnSquareB_reg_924 or ap_reg_ppiten_pp3_it1 or ap_sig_cseq_ST_pp3_stg6_fsm_62 or ap_reg_ppstg_exitcond_reg_1968_pp3_it1 or sum_weight_returnSquareB_1_reg_2042)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg6_fsm_62) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1968_pp3_it1))) begin
        sum_weight_returnSquareB_phi_fu_928_p4 = sum_weight_returnSquareB_1_reg_2042;
    end else begin
        sum_weight_returnSquareB_phi_fu_928_p4 = sum_weight_returnSquareB_reg_924;
    end
end

/// weight_rom_address0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or tmp_14_reg_1837 or tmp_56_i_fu_1227_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        weight_rom_address0 = tmp_56_i_fu_1227_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53))) begin
        weight_rom_address0 = tmp_14_reg_1837;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        weight_rom_address0 = ap_const_lv8_0;
    end else begin
        weight_rom_address0 = 'bx;
    end
end

/// weight_rom_address1 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st19_fsm_18 or tmp_58_i_fu_1247_p1 or ap_sig_cseq_ST_st128_fsm_54)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_address1 = ap_const_lv8_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_54))) begin
        weight_rom_address1 = ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        weight_rom_address1 = tmp_58_i_fu_1247_p1;
    end else begin
        weight_rom_address1 = 'bx;
    end
end

/// weight_rom_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_pp2_stg1_fsm_53 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg1_fsm_53)))) begin
        weight_rom_ce0 = ap_const_logic_1;
    end else begin
        weight_rom_ce0 = ap_const_logic_0;
    end
end

/// weight_rom_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st128_fsm_54)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_54))) begin
        weight_rom_ce1 = ap_const_logic_1;
    end else begin
        weight_rom_ce1 = ap_const_logic_0;
    end
end

/// weight_rom_d0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or reg_1048 or ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        weight_rom_d0 = reg_1048;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_d0 = ap_const_lv32_3F800000;
    end else begin
        weight_rom_d0 = 'bx;
    end
end

/// weight_rom_d1 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or reg_1069 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        weight_rom_d1 = reg_1069;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        weight_rom_d1 = ap_const_lv32_3F800000;
    end else begin
        weight_rom_d1 = 'bx;
    end
end

/// weight_rom_we0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        weight_rom_we0 = ap_const_logic_1;
    end else begin
        weight_rom_we0 = ap_const_logic_0;
    end
end

/// weight_rom_we1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        weight_rom_we1 = ap_const_logic_1;
    end else begin
        weight_rom_we1 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or gmem32_BVALID or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_435 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_458 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_pp2_stg0_fsm_52 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it34 or ap_reg_ppiten_pp2_it35 or ap_sig_ioackin_gmem32_AWREADY or ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp3_it1 or tmp_57_i_fu_1242_p2 or tmp_3_fu_1284_p2 or exitcond2_fu_1314_p2 or exitcond3_fu_1365_p2 or tmp_12_fu_1385_p2 or exitcond_fu_1424_p2 or ap_sig_cseq_ST_pp3_stg7_fsm_63 or exitcond_i_fu_1221_p2 or tmp_8_fu_1336_p2 or ap_sig_ioackin_gmem32_ARREADY or ap_sig_ioackin_gmem32_WREADY)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_fu_1221_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if ((ap_const_lv1_0 == tmp_57_i_fu_1242_p2)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            if ((ap_const_lv1_0 == tmp_3_fu_1284_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st29_fsm_28 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_34;
        end
        ap_ST_pp0_stg0_fsm_34 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1314_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_34;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_435 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_1314_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st38_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_34;
            end
        end
        ap_ST_st38_fsm_35 : 
        begin
            if ((ap_const_lv1_0 == tmp_8_fu_1336_p2)) begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_36;
            end
        end
        ap_ST_st39_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_37;
        end
        ap_ST_st40_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_38;
        end
        ap_ST_st41_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_39;
        end
        ap_ST_st42_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_40;
        end
        ap_ST_st43_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_41;
        end
        ap_ST_st44_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_42;
        end
        ap_ST_st45_fsm_42 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_ARREADY)) begin
                ap_NS_fsm = ap_ST_st46_fsm_43;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_42;
            end
        end
        ap_ST_st46_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_44;
        end
        ap_ST_st47_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_45;
        end
        ap_ST_st48_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_46;
        end
        ap_ST_st49_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_47;
        end
        ap_ST_st50_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_48;
        end
        ap_ST_pp1_stg0_fsm_48 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_1365_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_48;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_458 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_1365_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st54_fsm_49;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_48;
            end
        end
        ap_ST_st54_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_50;
        end
        ap_ST_st55_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_51;
        end
        ap_ST_st56_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_52;
        end
        ap_ST_pp2_stg0_fsm_52 : 
        begin
            if ((~((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_52) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it35) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it34)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == tmp_12_fu_1385_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg1_fsm_53;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == tmp_12_fu_1385_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
                ap_NS_fsm = ap_ST_st128_fsm_54;
            end else begin
                ap_NS_fsm = ap_ST_st128_fsm_54;
            end
        end
        ap_ST_pp2_stg1_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_52;
        end
        ap_ST_st128_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_55;
        end
        ap_ST_st129_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_56;
        end
        ap_ST_pp3_stg0_fsm_56 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~(ap_const_lv1_0 == exitcond_fu_1424_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1))) begin
                ap_NS_fsm = ap_ST_pp3_stg1_fsm_57;
            end else begin
                ap_NS_fsm = ap_ST_st147_fsm_65;
            end
        end
        ap_ST_pp3_stg1_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg2_fsm_58;
        end
        ap_ST_pp3_stg2_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg3_fsm_59;
        end
        ap_ST_pp3_stg3_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg4_fsm_60;
        end
        ap_ST_pp3_stg4_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg5_fsm_61;
        end
        ap_ST_pp3_stg5_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg6_fsm_62;
        end
        ap_ST_pp3_stg6_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg7_fsm_63;
        end
        ap_ST_pp3_stg7_fsm_63 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg7_fsm_63) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
                ap_NS_fsm = ap_ST_pp3_stg8_fsm_64;
            end else begin
                ap_NS_fsm = ap_ST_st147_fsm_65;
            end
        end
        ap_ST_pp3_stg8_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_56;
        end
        ap_ST_st147_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st148_fsm_66;
        end
        ap_ST_st148_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st149_fsm_67;
        end
        ap_ST_st149_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st150_fsm_68;
        end
        ap_ST_st150_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st151_fsm_69;
        end
        ap_ST_st151_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st152_fsm_70;
        end
        ap_ST_st152_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st153_fsm_71;
        end
        ap_ST_st153_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st154_fsm_72;
        end
        ap_ST_st154_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st155_fsm_73;
        end
        ap_ST_st155_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st156_fsm_74;
        end
        ap_ST_st156_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st157_fsm_75;
        end
        ap_ST_st157_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st158_fsm_76;
        end
        ap_ST_st158_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st159_fsm_77;
        end
        ap_ST_st159_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st160_fsm_78;
        end
        ap_ST_st160_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st161_fsm_79;
        end
        ap_ST_st161_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st162_fsm_80;
        end
        ap_ST_st162_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st163_fsm_81;
        end
        ap_ST_st163_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st164_fsm_82;
        end
        ap_ST_st164_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st165_fsm_83;
        end
        ap_ST_st165_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st166_fsm_84;
        end
        ap_ST_st166_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st167_fsm_85;
        end
        ap_ST_st167_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st168_fsm_86;
        end
        ap_ST_st168_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st169_fsm_87;
        end
        ap_ST_st169_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st170_fsm_88;
        end
        ap_ST_st170_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st171_fsm_89;
        end
        ap_ST_st171_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st172_fsm_90;
        end
        ap_ST_st172_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st173_fsm_91;
        end
        ap_ST_st173_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st174_fsm_92;
        end
        ap_ST_st174_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st175_fsm_93;
        end
        ap_ST_st175_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st176_fsm_94;
        end
        ap_ST_st176_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st177_fsm_95;
        end
        ap_ST_st177_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st178_fsm_96;
        end
        ap_ST_st178_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st179_fsm_97;
        end
        ap_ST_st179_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st180_fsm_98;
        end
        ap_ST_st180_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st181_fsm_99;
        end
        ap_ST_st181_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st182_fsm_100;
        end
        ap_ST_st182_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st183_fsm_101;
        end
        ap_ST_st183_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st184_fsm_102;
        end
        ap_ST_st184_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st185_fsm_103;
        end
        ap_ST_st185_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st186_fsm_104;
        end
        ap_ST_st186_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st187_fsm_105;
        end
        ap_ST_st187_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st188_fsm_106;
        end
        ap_ST_st188_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st189_fsm_107;
        end
        ap_ST_st189_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st190_fsm_108;
        end
        ap_ST_st190_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st191_fsm_109;
        end
        ap_ST_st191_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st192_fsm_110;
        end
        ap_ST_st192_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st193_fsm_111;
        end
        ap_ST_st193_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st194_fsm_112;
        end
        ap_ST_st194_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st195_fsm_113;
        end
        ap_ST_st195_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st196_fsm_114;
        end
        ap_ST_st196_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st197_fsm_115;
        end
        ap_ST_st197_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st198_fsm_116;
        end
        ap_ST_st198_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st199_fsm_117;
        end
        ap_ST_st199_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st200_fsm_118;
        end
        ap_ST_st200_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st201_fsm_119;
        end
        ap_ST_st201_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st202_fsm_120;
        end
        ap_ST_st202_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st203_fsm_121;
        end
        ap_ST_st203_fsm_121 : 
        begin
            ap_NS_fsm = ap_ST_st204_fsm_122;
        end
        ap_ST_st204_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st205_fsm_123;
        end
        ap_ST_st205_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st206_fsm_124;
        end
        ap_ST_st206_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st207_fsm_125;
        end
        ap_ST_st207_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st208_fsm_126;
        end
        ap_ST_st208_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st209_fsm_127;
        end
        ap_ST_st209_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st210_fsm_128;
        end
        ap_ST_st210_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st211_fsm_129;
        end
        ap_ST_st211_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st212_fsm_130;
        end
        ap_ST_st212_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st213_fsm_131;
        end
        ap_ST_st213_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st214_fsm_132;
        end
        ap_ST_st214_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st215_fsm_133;
        end
        ap_ST_st215_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st216_fsm_134;
        end
        ap_ST_st216_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st217_fsm_135;
        end
        ap_ST_st217_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st218_fsm_136;
        end
        ap_ST_st218_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st219_fsm_137;
        end
        ap_ST_st219_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st220_fsm_138;
        end
        ap_ST_st220_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st221_fsm_139;
        end
        ap_ST_st221_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st222_fsm_140;
        end
        ap_ST_st222_fsm_140 : 
        begin
            ap_NS_fsm = ap_ST_st223_fsm_141;
        end
        ap_ST_st223_fsm_141 : 
        begin
            ap_NS_fsm = ap_ST_st224_fsm_142;
        end
        ap_ST_st224_fsm_142 : 
        begin
            ap_NS_fsm = ap_ST_st225_fsm_143;
        end
        ap_ST_st225_fsm_143 : 
        begin
            ap_NS_fsm = ap_ST_st226_fsm_144;
        end
        ap_ST_st226_fsm_144 : 
        begin
            ap_NS_fsm = ap_ST_st227_fsm_145;
        end
        ap_ST_st227_fsm_145 : 
        begin
            ap_NS_fsm = ap_ST_st228_fsm_146;
        end
        ap_ST_st228_fsm_146 : 
        begin
            ap_NS_fsm = ap_ST_st229_fsm_147;
        end
        ap_ST_st229_fsm_147 : 
        begin
            ap_NS_fsm = ap_ST_st230_fsm_148;
        end
        ap_ST_st230_fsm_148 : 
        begin
            ap_NS_fsm = ap_ST_st231_fsm_149;
        end
        ap_ST_st231_fsm_149 : 
        begin
            ap_NS_fsm = ap_ST_st232_fsm_150;
        end
        ap_ST_st232_fsm_150 : 
        begin
            ap_NS_fsm = ap_ST_st233_fsm_151;
        end
        ap_ST_st233_fsm_151 : 
        begin
            ap_NS_fsm = ap_ST_st234_fsm_152;
        end
        ap_ST_st234_fsm_152 : 
        begin
            ap_NS_fsm = ap_ST_st235_fsm_153;
        end
        ap_ST_st235_fsm_153 : 
        begin
            ap_NS_fsm = ap_ST_st236_fsm_154;
        end
        ap_ST_st236_fsm_154 : 
        begin
            ap_NS_fsm = ap_ST_st237_fsm_155;
        end
        ap_ST_st237_fsm_155 : 
        begin
            ap_NS_fsm = ap_ST_st238_fsm_156;
        end
        ap_ST_st238_fsm_156 : 
        begin
            ap_NS_fsm = ap_ST_st239_fsm_157;
        end
        ap_ST_st239_fsm_157 : 
        begin
            ap_NS_fsm = ap_ST_st240_fsm_158;
        end
        ap_ST_st240_fsm_158 : 
        begin
            ap_NS_fsm = ap_ST_st241_fsm_159;
        end
        ap_ST_st241_fsm_159 : 
        begin
            ap_NS_fsm = ap_ST_st242_fsm_160;
        end
        ap_ST_st242_fsm_160 : 
        begin
            ap_NS_fsm = ap_ST_st243_fsm_161;
        end
        ap_ST_st243_fsm_161 : 
        begin
            ap_NS_fsm = ap_ST_st244_fsm_162;
        end
        ap_ST_st244_fsm_162 : 
        begin
            ap_NS_fsm = ap_ST_st245_fsm_163;
        end
        ap_ST_st245_fsm_163 : 
        begin
            ap_NS_fsm = ap_ST_st246_fsm_164;
        end
        ap_ST_st246_fsm_164 : 
        begin
            ap_NS_fsm = ap_ST_st247_fsm_165;
        end
        ap_ST_st247_fsm_165 : 
        begin
            ap_NS_fsm = ap_ST_st248_fsm_166;
        end
        ap_ST_st248_fsm_166 : 
        begin
            ap_NS_fsm = ap_ST_st249_fsm_167;
        end
        ap_ST_st249_fsm_167 : 
        begin
            ap_NS_fsm = ap_ST_st250_fsm_168;
        end
        ap_ST_st250_fsm_168 : 
        begin
            ap_NS_fsm = ap_ST_st251_fsm_169;
        end
        ap_ST_st251_fsm_169 : 
        begin
            ap_NS_fsm = ap_ST_st252_fsm_170;
        end
        ap_ST_st252_fsm_170 : 
        begin
            ap_NS_fsm = ap_ST_st253_fsm_171;
        end
        ap_ST_st253_fsm_171 : 
        begin
            ap_NS_fsm = ap_ST_st254_fsm_172;
        end
        ap_ST_st254_fsm_172 : 
        begin
            ap_NS_fsm = ap_ST_st255_fsm_173;
        end
        ap_ST_st255_fsm_173 : 
        begin
            ap_NS_fsm = ap_ST_st256_fsm_174;
        end
        ap_ST_st256_fsm_174 : 
        begin
            ap_NS_fsm = ap_ST_st257_fsm_175;
        end
        ap_ST_st257_fsm_175 : 
        begin
            ap_NS_fsm = ap_ST_st258_fsm_176;
        end
        ap_ST_st258_fsm_176 : 
        begin
            ap_NS_fsm = ap_ST_st259_fsm_177;
        end
        ap_ST_st259_fsm_177 : 
        begin
            ap_NS_fsm = ap_ST_st260_fsm_178;
        end
        ap_ST_st260_fsm_178 : 
        begin
            ap_NS_fsm = ap_ST_st261_fsm_179;
        end
        ap_ST_st261_fsm_179 : 
        begin
            ap_NS_fsm = ap_ST_st262_fsm_180;
        end
        ap_ST_st262_fsm_180 : 
        begin
            ap_NS_fsm = ap_ST_st263_fsm_181;
        end
        ap_ST_st263_fsm_181 : 
        begin
            ap_NS_fsm = ap_ST_st264_fsm_182;
        end
        ap_ST_st264_fsm_182 : 
        begin
            ap_NS_fsm = ap_ST_st265_fsm_183;
        end
        ap_ST_st265_fsm_183 : 
        begin
            ap_NS_fsm = ap_ST_st266_fsm_184;
        end
        ap_ST_st266_fsm_184 : 
        begin
            ap_NS_fsm = ap_ST_st267_fsm_185;
        end
        ap_ST_st267_fsm_185 : 
        begin
            ap_NS_fsm = ap_ST_st268_fsm_186;
        end
        ap_ST_st268_fsm_186 : 
        begin
            ap_NS_fsm = ap_ST_st269_fsm_187;
        end
        ap_ST_st269_fsm_187 : 
        begin
            ap_NS_fsm = ap_ST_st270_fsm_188;
        end
        ap_ST_st270_fsm_188 : 
        begin
            ap_NS_fsm = ap_ST_st271_fsm_189;
        end
        ap_ST_st271_fsm_189 : 
        begin
            ap_NS_fsm = ap_ST_st272_fsm_190;
        end
        ap_ST_st272_fsm_190 : 
        begin
            ap_NS_fsm = ap_ST_st273_fsm_191;
        end
        ap_ST_st273_fsm_191 : 
        begin
            ap_NS_fsm = ap_ST_st274_fsm_192;
        end
        ap_ST_st274_fsm_192 : 
        begin
            ap_NS_fsm = ap_ST_st275_fsm_193;
        end
        ap_ST_st275_fsm_193 : 
        begin
            ap_NS_fsm = ap_ST_st276_fsm_194;
        end
        ap_ST_st276_fsm_194 : 
        begin
            ap_NS_fsm = ap_ST_st277_fsm_195;
        end
        ap_ST_st277_fsm_195 : 
        begin
            ap_NS_fsm = ap_ST_st278_fsm_196;
        end
        ap_ST_st278_fsm_196 : 
        begin
            ap_NS_fsm = ap_ST_st279_fsm_197;
        end
        ap_ST_st279_fsm_197 : 
        begin
            ap_NS_fsm = ap_ST_st280_fsm_198;
        end
        ap_ST_st280_fsm_198 : 
        begin
            ap_NS_fsm = ap_ST_st281_fsm_199;
        end
        ap_ST_st281_fsm_199 : 
        begin
            ap_NS_fsm = ap_ST_st282_fsm_200;
        end
        ap_ST_st282_fsm_200 : 
        begin
            ap_NS_fsm = ap_ST_st283_fsm_201;
        end
        ap_ST_st283_fsm_201 : 
        begin
            ap_NS_fsm = ap_ST_st284_fsm_202;
        end
        ap_ST_st284_fsm_202 : 
        begin
            ap_NS_fsm = ap_ST_st285_fsm_203;
        end
        ap_ST_st285_fsm_203 : 
        begin
            ap_NS_fsm = ap_ST_st286_fsm_204;
        end
        ap_ST_st286_fsm_204 : 
        begin
            ap_NS_fsm = ap_ST_st287_fsm_205;
        end
        ap_ST_st287_fsm_205 : 
        begin
            ap_NS_fsm = ap_ST_st288_fsm_206;
        end
        ap_ST_st288_fsm_206 : 
        begin
            ap_NS_fsm = ap_ST_st289_fsm_207;
        end
        ap_ST_st289_fsm_207 : 
        begin
            ap_NS_fsm = ap_ST_st290_fsm_208;
        end
        ap_ST_st290_fsm_208 : 
        begin
            ap_NS_fsm = ap_ST_st291_fsm_209;
        end
        ap_ST_st291_fsm_209 : 
        begin
            ap_NS_fsm = ap_ST_st292_fsm_210;
        end
        ap_ST_st292_fsm_210 : 
        begin
            ap_NS_fsm = ap_ST_st293_fsm_211;
        end
        ap_ST_st293_fsm_211 : 
        begin
            ap_NS_fsm = ap_ST_st294_fsm_212;
        end
        ap_ST_st294_fsm_212 : 
        begin
            ap_NS_fsm = ap_ST_st295_fsm_213;
        end
        ap_ST_st295_fsm_213 : 
        begin
            ap_NS_fsm = ap_ST_st296_fsm_214;
        end
        ap_ST_st296_fsm_214 : 
        begin
            ap_NS_fsm = ap_ST_st297_fsm_215;
        end
        ap_ST_st297_fsm_215 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_AWREADY)) begin
                ap_NS_fsm = ap_ST_st298_fsm_216;
            end else begin
                ap_NS_fsm = ap_ST_st297_fsm_215;
            end
        end
        ap_ST_st298_fsm_216 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem32_WREADY)) begin
                ap_NS_fsm = ap_ST_st299_fsm_217;
            end else begin
                ap_NS_fsm = ap_ST_st298_fsm_216;
            end
        end
        ap_ST_st299_fsm_217 : 
        begin
            ap_NS_fsm = ap_ST_st300_fsm_218;
        end
        ap_ST_st300_fsm_218 : 
        begin
            ap_NS_fsm = ap_ST_st301_fsm_219;
        end
        ap_ST_st301_fsm_219 : 
        begin
            if (~(gmem32_BVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st38_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_st301_fsm_219;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_returnA_addr_3_gep_fu_406_p3 = ap_const_lv64_3;
assign acc_returnA_addr_4_gep_fu_455_p3 = ap_const_lv64_4;
assign acc_returnA_addr_5_gep_fu_504_p3 = ap_const_lv64_5;
assign acc_returnA_addr_6_gep_fu_308_p3 = ap_const_lv64_1;
assign acc_returnA_addr_7_gep_fu_357_p3 = ap_const_lv64_2;
assign acc_returnA_addr_gep_fu_259_p3 = ap_const_lv64_0;
assign acc_returnA_d0 = ap_const_lv32_0;
assign acc_returnB_addr_3_gep_fu_413_p3 = ap_const_lv64_3;
assign acc_returnB_addr_4_gep_fu_462_p3 = ap_const_lv64_4;
assign acc_returnB_addr_5_gep_fu_511_p3 = ap_const_lv64_5;
assign acc_returnB_addr_6_gep_fu_315_p3 = ap_const_lv64_1;
assign acc_returnB_addr_7_gep_fu_364_p3 = ap_const_lv64_2;
assign acc_returnB_addr_gep_fu_266_p3 = ap_const_lv64_0;
assign acc_returnB_d1 = ap_const_lv32_0;
assign acc_weight_returnA_addr_3_gep_fu_427_p3 = ap_const_lv64_3;
assign acc_weight_returnA_addr_4_gep_fu_476_p3 = ap_const_lv64_4;
assign acc_weight_returnA_addr_5_gep_fu_525_p3 = ap_const_lv64_5;
assign acc_weight_returnA_addr_6_gep_fu_329_p3 = ap_const_lv64_1;
assign acc_weight_returnA_addr_7_gep_fu_378_p3 = ap_const_lv64_2;
assign acc_weight_returnA_addr_gep_fu_280_p3 = ap_const_lv64_0;
assign acc_weight_returnA_d1 = ap_const_lv32_0;
assign acc_weight_returnA_returnB_add_1_gep_fu_350_p3 = ap_const_lv64_1;
assign acc_weight_returnA_returnB_add_2_gep_fu_399_p3 = ap_const_lv64_2;
assign acc_weight_returnA_returnB_add_3_gep_fu_448_p3 = ap_const_lv64_3;
assign acc_weight_returnA_returnB_add_4_gep_fu_497_p3 = ap_const_lv64_4;
assign acc_weight_returnA_returnB_add_5_gep_fu_546_p3 = ap_const_lv64_5;
assign acc_weight_returnA_returnB_add_gep_fu_301_p3 = ap_const_lv64_0;
assign acc_weight_returnA_returnB_d1 = ap_const_lv32_0;
assign acc_weight_returnB_addr_3_gep_fu_441_p3 = ap_const_lv64_3;
assign acc_weight_returnB_addr_4_gep_fu_490_p3 = ap_const_lv64_4;
assign acc_weight_returnB_addr_5_gep_fu_539_p3 = ap_const_lv64_5;
assign acc_weight_returnB_addr_6_gep_fu_343_p3 = ap_const_lv64_1;
assign acc_weight_returnB_addr_7_gep_fu_392_p3 = ap_const_lv64_2;
assign acc_weight_returnB_addr_gep_fu_294_p3 = ap_const_lv64_0;
assign acc_weight_returnB_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareA_addr_3_gep_fu_420_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareA_addr_4_gep_fu_469_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareA_addr_5_gep_fu_518_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareA_addr_6_gep_fu_322_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareA_addr_7_gep_fu_371_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareA_addr_gep_fu_273_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareA_d0 = ap_const_lv32_0;
assign acc_weight_returnSquareB_addr_3_gep_fu_434_p3 = ap_const_lv64_3;
assign acc_weight_returnSquareB_addr_4_gep_fu_483_p3 = ap_const_lv64_4;
assign acc_weight_returnSquareB_addr_5_gep_fu_532_p3 = ap_const_lv64_5;
assign acc_weight_returnSquareB_addr_6_gep_fu_336_p3 = ap_const_lv64_1;
assign acc_weight_returnSquareB_addr_7_gep_fu_385_p3 = ap_const_lv64_2;
assign acc_weight_returnSquareB_addr_gep_fu_287_p3 = ap_const_lv64_0;
assign acc_weight_returnSquareB_d1 = ap_const_lv32_0;
assign ap_return = ap_const_lv32_0;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_1018 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1018 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_1117 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1117 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_1143 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1143 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_1152 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1152 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_1444 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1444 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_1494 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1494 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_1505 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1505 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B4]);
end

/// ap_sig_bdd_1516 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1516 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D6]);
end

/// ap_sig_bdd_1523 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1523 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_1535 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1535 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_1547 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1547 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_1559 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1559 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_1664 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1664 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_1672 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1672 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_1699 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1699 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_DB]);
end

/// ap_sig_bdd_1770 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1770 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_1786 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1786 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_1808 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1808 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D8]);
end

/// ap_sig_bdd_1836 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1836 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_1857 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1857 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_1864 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1864 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_1939 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1939 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_1951 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1951 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_64]);
end

/// ap_sig_bdd_1958 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1958 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_69]);
end

/// ap_sig_bdd_1965 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1965 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6D]);
end

/// ap_sig_bdd_1972 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1972 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_90]);
end

/// ap_sig_bdd_1979 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1979 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_94]);
end

/// ap_sig_bdd_2003 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2003 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5F]);
end

/// ap_sig_bdd_2010 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2010 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8B]);
end

/// ap_sig_bdd_2018 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2018 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B5]);
end

/// ap_sig_bdd_2035 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2035 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_2042 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2042 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_72]);
end

/// ap_sig_bdd_2049 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2049 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_76]);
end

/// ap_sig_bdd_2056 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2056 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BA]);
end

/// ap_sig_bdd_2068 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2068 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_2076 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2076 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_99]);
end

/// ap_sig_bdd_2295 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2295 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_2303 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2303 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end

/// ap_sig_bdd_2311 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2311 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_2319 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2319 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_2327 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2327 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_2335 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2335 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_2343 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2343 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_2351 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2351 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_2359 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2359 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_2367 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2367 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_2375 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2375 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_238 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_238 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_2383 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2383 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_2391 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2391 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_2399 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2399 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_2407 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2407 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_2415 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2415 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end

/// ap_sig_bdd_2423 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2423 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end

/// ap_sig_bdd_2431 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2431 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end

/// ap_sig_bdd_2439 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2439 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_54]);
end

/// ap_sig_bdd_2447 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2447 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end

/// ap_sig_bdd_2455 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2455 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end

/// ap_sig_bdd_2463 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2463 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_57]);
end

/// ap_sig_bdd_2471 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2471 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end

/// ap_sig_bdd_2479 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2479 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end

/// ap_sig_bdd_2487 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2487 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end

/// ap_sig_bdd_2495 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2495 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5B]);
end

/// ap_sig_bdd_2503 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2503 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end

/// ap_sig_bdd_2511 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2511 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_2521 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2521 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_73]);
end

/// ap_sig_bdd_2529 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2529 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_74]);
end

/// ap_sig_bdd_2539 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2539 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_77]);
end

/// ap_sig_bdd_2547 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2547 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_78]);
end

/// ap_sig_bdd_2555 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2555 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_79]);
end

/// ap_sig_bdd_2563 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2563 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end

/// ap_sig_bdd_2571 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2571 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7B]);
end

/// ap_sig_bdd_2579 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2579 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7C]);
end

/// ap_sig_bdd_2587 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2587 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7D]);
end

/// ap_sig_bdd_2595 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2595 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7E]);
end

/// ap_sig_bdd_2603 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2603 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7F]);
end

/// ap_sig_bdd_2611 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2611 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_80]);
end

/// ap_sig_bdd_2619 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2619 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_81]);
end

/// ap_sig_bdd_2627 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2627 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_82]);
end

/// ap_sig_bdd_2635 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2635 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_83]);
end

/// ap_sig_bdd_2643 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2643 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_84]);
end

/// ap_sig_bdd_2651 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2651 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_85]);
end

/// ap_sig_bdd_2659 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2659 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_86]);
end

/// ap_sig_bdd_2667 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2667 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_87]);
end

/// ap_sig_bdd_2675 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2675 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_88]);
end

/// ap_sig_bdd_2683 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2683 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_89]);
end

/// ap_sig_bdd_2691 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2691 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8A]);
end

/// ap_sig_bdd_2700 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2700 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8C]);
end

/// ap_sig_bdd_2708 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2708 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8D]);
end

/// ap_sig_bdd_2716 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2716 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8E]);
end

/// ap_sig_bdd_2726 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2726 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_91]);
end

/// ap_sig_bdd_2734 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2734 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_92]);
end

/// ap_sig_bdd_2744 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2744 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BB]);
end

/// ap_sig_bdd_2752 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2752 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BC]);
end

/// ap_sig_bdd_2760 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2760 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BD]);
end

/// ap_sig_bdd_2768 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2768 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BE]);
end

/// ap_sig_bdd_2776 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2776 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_BF]);
end

/// ap_sig_bdd_2784 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2784 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C0]);
end

/// ap_sig_bdd_2792 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2792 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C1]);
end

/// ap_sig_bdd_2800 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2800 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C2]);
end

/// ap_sig_bdd_2808 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2808 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C3]);
end

/// ap_sig_bdd_2816 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2816 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C4]);
end

/// ap_sig_bdd_2824 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2824 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C5]);
end

/// ap_sig_bdd_2832 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2832 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C6]);
end

/// ap_sig_bdd_2840 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2840 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C7]);
end

/// ap_sig_bdd_2848 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2848 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C8]);
end

/// ap_sig_bdd_2856 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2856 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C9]);
end

/// ap_sig_bdd_2864 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2864 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CA]);
end

/// ap_sig_bdd_2872 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2872 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CB]);
end

/// ap_sig_bdd_2880 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2880 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CC]);
end

/// ap_sig_bdd_2888 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2888 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CD]);
end

/// ap_sig_bdd_2896 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2896 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CE]);
end

/// ap_sig_bdd_2904 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2904 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_CF]);
end

/// ap_sig_bdd_2912 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2912 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D0]);
end

/// ap_sig_bdd_2920 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2920 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D1]);
end

/// ap_sig_bdd_2928 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2928 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D2]);
end

/// ap_sig_bdd_2936 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2936 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D3]);
end

/// ap_sig_bdd_2944 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2944 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D4]);
end

/// ap_sig_bdd_2952 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_2952 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D5]);
end

/// ap_sig_bdd_426 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_426 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_435 assign process. ///
always @ (gmem32_RVALID or exitcond2_reg_1790)
begin
    ap_sig_bdd_435 = ((gmem32_RVALID == ap_const_logic_0) & (exitcond2_reg_1790 == ap_const_lv1_0));
end

/// ap_sig_bdd_451 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_451 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_458 assign process. ///
always @ (gmem32_RVALID or exitcond3_reg_1814)
begin
    ap_sig_bdd_458 = ((gmem32_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond3_reg_1814));
end

/// ap_sig_bdd_474 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_474 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_586 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_586 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_602 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_602 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_63]);
end

/// ap_sig_bdd_610 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_610 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_68]);
end

/// ap_sig_bdd_618 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_618 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8F]);
end

/// ap_sig_bdd_626 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_626 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B9]);
end

/// ap_sig_bdd_635 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_635 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_674 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_674 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_684 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_684 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_696 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_696 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_708 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_708 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6C]);
end

/// ap_sig_bdd_716 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_716 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_75]);
end

/// ap_sig_bdd_724 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_724 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_98]);
end

/// ap_sig_bdd_752 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_752 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_761 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_761 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D7]);
end

/// ap_sig_bdd_784 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_784 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_93]);
end

/// ap_sig_bdd_803 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_803 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_827 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_827 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_853 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_853 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_872 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_872 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_895 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_895 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_920 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_920 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_945 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_945 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_71]);
end

/// ap_sig_bdd_969 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_969 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9C]);
end

/// ap_sig_bdd_990 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_990 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_999 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_999 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end
assign bramA_address1 = tmp_14_fu_1402_p1;
assign bramA_d0 = reg_1079;
assign bramB_d0 = reg_1079;
assign column_index_fu_1330_p2 = (column_index_0_in_reg_843 + ap_const_lv32_1);
assign correlation_accel_v1_gmem32_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign exitcond2_fu_1314_p2 = (indvar_phi_fu_835_p4 == tmp_6_reg_1545? 1'b1: 1'b0);
assign exitcond3_fu_1365_p2 = (indvar8_phi_fu_856_p4 == tmp_6_reg_1545? 1'b1: 1'b0);
assign exitcond_fu_1424_p2 = (i2_phi_fu_964_p4 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_i_fu_1221_p2 = (i_i_reg_786 == ap_const_lv8_FC? 1'b1: 1'b0);
assign gmem32_ARBURST = ap_const_lv2_0;
assign gmem32_ARCACHE = ap_const_lv4_0;
assign gmem32_ARID = ap_const_lv1_0;
assign gmem32_ARLEN = p_add_i32_shr_reg_1551;
assign gmem32_ARLOCK = ap_const_lv2_0;
assign gmem32_ARPROT = ap_const_lv3_0;
assign gmem32_ARQOS = ap_const_lv4_0;
assign gmem32_ARREGION = ap_const_lv4_0;
assign gmem32_ARSIZE = ap_const_lv3_0;
assign gmem32_ARUSER = ap_const_lv1_0;
assign gmem32_AWADDR = gmem32_addr_2_reg_2067;
assign gmem32_AWBURST = ap_const_lv2_0;
assign gmem32_AWCACHE = ap_const_lv4_0;
assign gmem32_AWID = ap_const_lv1_0;
assign gmem32_AWLEN = ap_const_lv32_1;
assign gmem32_AWLOCK = ap_const_lv2_0;
assign gmem32_AWPROT = ap_const_lv3_0;
assign gmem32_AWQOS = ap_const_lv4_0;
assign gmem32_AWREGION = ap_const_lv4_0;
assign gmem32_AWSIZE = ap_const_lv3_0;
assign gmem32_AWUSER = ap_const_lv1_0;
assign gmem32_WDATA = reg_1085;
assign gmem32_WID = ap_const_lv1_0;
assign gmem32_WLAST = ap_const_logic_0;
assign gmem32_WSTRB = ap_const_lv4_F;
assign gmem32_WUSER = ap_const_lv1_0;
assign grp_fu_1002_ce = ap_const_logic_1;
assign grp_fu_1006_ce = ap_const_logic_1;
assign grp_fu_1010_ce = ap_const_logic_1;
assign grp_fu_1010_p1 = ap_reg_ppstg_reg_1058_pp2_it27;
assign grp_fu_1025_ce = ap_const_logic_1;
assign grp_fu_1030_ce = ap_const_logic_1;
assign grp_fu_1030_p0 = tmp_1_reg_1523;
assign grp_fu_1033_ce = ap_const_logic_1;
assign grp_fu_1033_p0 = ap_const_lv32_0;
assign grp_fu_1033_p1 = reg_1069;
assign grp_fu_1038_ce = ap_const_logic_1;
assign grp_fu_1038_p0 = ap_const_lv32_0;
assign grp_fu_1038_p1 = reg_1165;
assign grp_fu_1043_ce = ap_const_logic_1;
assign grp_fu_1043_p0 = ap_const_lv32_0;
assign grp_fu_1341_ce = ap_const_logic_1;
assign grp_fu_1341_p0 = column_index_fu_1330_p2;
assign grp_fu_1341_p1 = number_of_days;
assign grp_fu_1407_ce = ap_const_logic_1;
assign grp_fu_1407_p0 = i1_phi_fu_868_p4;
assign grp_fu_1407_p1 = ap_const_lv31_6;
assign grp_fu_972_ce = ap_const_logic_1;
assign grp_fu_976_ce = ap_const_logic_1;
assign grp_fu_980_ce = ap_const_logic_1;
assign grp_fu_984_ce = ap_const_logic_1;
assign grp_fu_984_p0 = reg_1158;
assign grp_fu_984_p1 = tmp_32_reg_1958;
assign grp_fu_996_ce = ap_const_logic_1;
assign i1_cast_fu_1381_p1 = i1_phi_fu_868_p4;
assign i1_i_cast_fu_1238_p1 = i1_i_reg_798;
assign i_1_fu_1430_p2 = (i2_phi_fu_964_p4 + ap_const_lv3_1);
assign i_2_fu_1232_p2 = (i_i_reg_786 + ap_const_lv8_1);
assign i_3_fu_1252_p2 = (i1_i_reg_798 + ap_const_lv31_1);
assign i_fu_1390_p2 = (i1_phi_fu_868_p4 + ap_const_lv31_1);
assign indvar_next9_fu_1370_p2 = (indvar8_phi_fu_856_p4 + ap_const_lv30_1);
assign indvar_next_fu_1319_p2 = (indvar_phi_fu_835_p4 + ap_const_lv30_1);
assign next_mul_fu_1275_p1 = number_of_days;
assign next_mul_fu_1275_p2 = ($signed(phi_mul_reg_820) + $signed(next_mul_fu_1275_p1));
assign out_correlation4_sum_cast_fu_1454_p1 = out_correlation4_sum_fu_1449_p2;
assign out_correlation4_sum_fu_1449_p2 = ($signed(tmp_59_cast_reg_1491) + $signed(tmp_53_cast_fu_1445_p1));
assign p_add_i32_shr_fu_1271_p1 = tmp_6_fu_1268_p1;
assign row_index_1_fu_1289_p2 = (row_index_reg_809 + ap_const_lv31_1);
assign row_index_cast_fu_1280_p1 = row_index_reg_809;
assign sum_weight_returnA_returnB_phi_fu_952_p4 = sum_weight_returnA_returnB_reg_948;
assign tmp_10_fu_1376_p1 = ap_reg_ppstg_indvar8_reg_852_pp1_it1;
assign tmp_11_fu_1295_p1 = $signed(phi_mul_reg_820);
assign tmp_12_fu_1385_p2 = ($signed(i1_cast_fu_1381_p1) < $signed(tmp_1_reg_1523)? 1'b1: 1'b0);
assign tmp_13_fu_1396_p1 = i1_phi_fu_868_p4;
assign tmp_14_fu_1402_p1 = i_fu_1390_p2;
assign tmp_18_fu_1413_p1 = grp_fu_1407_p2;
assign tmp_1_fu_1258_p0 = number_of_days;
assign tmp_1_fu_1258_p2 = ($signed(tmp_1_fu_1258_p0) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_3_fu_1284_p2 = ($signed(row_index_cast_fu_1280_p1) < $signed(tmp_reg_1534)? 1'b1: 1'b0);
assign tmp_4_fu_1193_p4 = {{out_correlation[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_53_cast_fu_1445_p1 = $signed(counter);
assign tmp_53_fu_1299_p2 = ($signed(tmp_60_cast_reg_1496) + $signed(tmp_11_fu_1295_p1));
assign tmp_54_fu_1464_p2 = (counter + ap_const_lv32_1);
assign tmp_55_fu_1436_p1 = i2_phi_fu_964_p4;
assign tmp_56_i_fu_1227_p1 = i_i_reg_786;
assign tmp_57_i_fu_1242_p1 = number_of_days;
assign tmp_57_i_fu_1242_p2 = ($signed(i1_i_cast_fu_1238_p1) < $signed(tmp_57_i_fu_1242_p1)? 1'b1: 1'b0);
assign tmp_58_i_fu_1247_p1 = i1_i_reg_798;
assign tmp_59_cast_fu_1203_p1 = tmp_4_fu_1193_p4;
assign tmp_59_fu_1304_p1 = tmp_53_fu_1299_p2;
assign tmp_5_fu_1207_p4 = {{in_indices[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_60_cast_fu_1217_p1 = tmp_5_fu_1207_p4;
assign tmp_60_fu_1346_p1 = grp_fu_1341_p2;
assign tmp_61_fu_1350_p2 = ($signed(tmp_60_cast_reg_1496) + $signed(tmp_60_fu_1346_p1));
assign tmp_62_fu_1355_p1 = tmp_61_fu_1350_p2;
assign tmp_6_fu_1268_p0 = number_of_days;
assign tmp_6_fu_1268_p1 = tmp_6_fu_1268_p0[29:0];
assign tmp_7_fu_1325_p1 = ap_reg_ppstg_indvar_reg_831_pp0_it1;
assign tmp_8_fu_1336_p2 = ($signed(column_index_fu_1330_p2) < $signed(number_of_indices)? 1'b1: 1'b0);
assign tmp_fu_1263_p2 = ($signed(number_of_indices) + $signed(ap_const_lv32_FFFFFFFF));
always @ (posedge ap_clk)
begin
    tmp_59_cast_reg_1491[32:30] <= 3'b000;
    tmp_60_cast_reg_1496[32:30] <= 3'b000;
    p_add_i32_shr_reg_1551[31:30] <= 2'b00;
    acc_returnA_addr_reg_1556[2:0] <= 3'b000;
    acc_returnB_addr_reg_1561[2:0] <= 3'b000;
    acc_weight_returnSquareA_addr_reg_1566[2:0] <= 3'b000;
    acc_weight_returnA_addr_reg_1571[2:0] <= 3'b000;
    acc_weight_returnSquareB_addr_reg_1576[2:0] <= 3'b000;
    acc_weight_returnB_addr_reg_1581[2:0] <= 3'b000;
    acc_weight_returnA_returnB_add_reg_1586[2:0] <= 3'b000;
    acc_returnA_addr_6_reg_1591[2:0] <= 3'b001;
    acc_returnB_addr_6_reg_1596[2:0] <= 3'b001;
    acc_weight_returnSquareA_addr_6_reg_1601[2:0] <= 3'b001;
    acc_weight_returnA_addr_6_reg_1606[2:0] <= 3'b001;
    acc_weight_returnSquareB_addr_6_reg_1611[2:0] <= 3'b001;
    acc_weight_returnB_addr_6_reg_1616[2:0] <= 3'b001;
    acc_weight_returnA_returnB_add_1_reg_1621[2:0] <= 3'b001;
    acc_returnA_addr_7_reg_1626[2:0] <= 3'b010;
    acc_returnB_addr_7_reg_1631[2:0] <= 3'b010;
    acc_weight_returnSquareA_addr_7_reg_1636[2:0] <= 3'b010;
    acc_weight_returnA_addr_7_reg_1641[2:0] <= 3'b010;
    acc_weight_returnSquareB_addr_7_reg_1646[2:0] <= 3'b010;
    acc_weight_returnB_addr_7_reg_1651[2:0] <= 3'b010;
    acc_weight_returnA_returnB_add_2_reg_1656[2:0] <= 3'b010;
    acc_returnA_addr_3_reg_1661[2:0] <= 3'b011;
    acc_returnB_addr_3_reg_1666[2:0] <= 3'b011;
    acc_weight_returnSquareA_addr_3_reg_1671[2:0] <= 3'b011;
    acc_weight_returnA_addr_3_reg_1676[2:0] <= 3'b011;
    acc_weight_returnSquareB_addr_3_reg_1681[2:0] <= 3'b011;
    acc_weight_returnB_addr_3_reg_1686[2:0] <= 3'b011;
    acc_weight_returnA_returnB_add_3_reg_1691[2:0] <= 3'b011;
    acc_returnA_addr_4_reg_1696[2:0] <= 3'b100;
    acc_returnB_addr_4_reg_1701[2:0] <= 3'b100;
    acc_weight_returnSquareA_addr_4_reg_1706[2:0] <= 3'b100;
    acc_weight_returnA_addr_4_reg_1711[2:0] <= 3'b100;
    acc_weight_returnSquareB_addr_4_reg_1716[2:0] <= 3'b100;
    acc_weight_returnB_addr_4_reg_1721[2:0] <= 3'b100;
    acc_weight_returnA_returnB_add_4_reg_1726[2:0] <= 3'b100;
    acc_returnA_addr_5_reg_1731[2:0] <= 3'b101;
    acc_returnB_addr_5_reg_1736[2:0] <= 3'b101;
    acc_weight_returnSquareA_addr_5_reg_1741[2:0] <= 3'b101;
    acc_weight_returnA_addr_5_reg_1746[2:0] <= 3'b101;
    acc_weight_returnSquareB_addr_5_reg_1751[2:0] <= 3'b101;
    acc_weight_returnB_addr_5_reg_1756[2:0] <= 3'b101;
    acc_weight_returnA_returnB_add_5_reg_1761[2:0] <= 3'b101;
    row_index_cast_reg_1771[31] <= 1'b0;
    tmp_14_reg_1837[63:31] <= 33'b000000000000000000000000000000000;
    tmp_55_reg_1977[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end



endmodule //correlation_accel_v1

