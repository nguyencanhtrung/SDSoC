-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity correlation_accel_v4_frontEnd is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    NUMBER_OF_DAYS : IN STD_LOGIC_VECTOR (31 downto 0);
    NUMBER_OF_INDICES : IN STD_LOGIC_VECTOR (31 downto 0);
    in_indices_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_indices_TVALID : IN STD_LOGIC;
    in_indices_TREADY : OUT STD_LOGIC;
    in_indices_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_indices_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_indices_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_indices_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_indices_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in_indices_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    ln_returnA_out_c1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ln_returnA_out_c1_V_full_n : IN STD_LOGIC;
    ln_returnA_out_c1_V_write : OUT STD_LOGIC;
    weight_returnSquareA_out_c1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnSquareA_out_c1_V_full_n : IN STD_LOGIC;
    weight_returnSquareA_out_c1_V_write : OUT STD_LOGIC;
    weight_returnA_out_c1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnA_out_c1_V_full_n : IN STD_LOGIC;
    weight_returnA_out_c1_V_write : OUT STD_LOGIC;
    ln_returnA_out_c2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ln_returnA_out_c2_V_full_n : IN STD_LOGIC;
    ln_returnA_out_c2_V_write : OUT STD_LOGIC;
    weight_returnSquareA_out_c2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnSquareA_out_c2_V_full_n : IN STD_LOGIC;
    weight_returnSquareA_out_c2_V_write : OUT STD_LOGIC;
    weight_returnA_out_c2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnA_out_c2_V_full_n : IN STD_LOGIC;
    weight_returnA_out_c2_V_write : OUT STD_LOGIC;
    sum_weight_out_c1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_weight_out_c1_V_full_n : IN STD_LOGIC;
    sum_weight_out_c1_V_write : OUT STD_LOGIC;
    ln_returnB_out_c1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ln_returnB_out_c1_V_full_n : IN STD_LOGIC;
    ln_returnB_out_c1_V_write : OUT STD_LOGIC;
    weight_returnSquareB_out_c1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnSquareB_out_c1_V_full_n : IN STD_LOGIC;
    weight_returnSquareB_out_c1_V_write : OUT STD_LOGIC;
    weight_returnB_out_c1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnB_out_c1_V_full_n : IN STD_LOGIC;
    weight_returnB_out_c1_V_write : OUT STD_LOGIC;
    weight_returnA_returnB_out_c1_s_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnA_returnB_out_c1_s_full_n : IN STD_LOGIC;
    weight_returnA_returnB_out_c1_s_write : OUT STD_LOGIC;
    sum_weight_out_c2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_weight_out_c2_V_full_n : IN STD_LOGIC;
    sum_weight_out_c2_V_write : OUT STD_LOGIC;
    ln_returnB_out_c2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ln_returnB_out_c2_V_full_n : IN STD_LOGIC;
    ln_returnB_out_c2_V_write : OUT STD_LOGIC;
    weight_returnSquareB_out_c2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnSquareB_out_c2_V_full_n : IN STD_LOGIC;
    weight_returnSquareB_out_c2_V_write : OUT STD_LOGIC;
    weight_returnB_out_c2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnB_out_c2_V_full_n : IN STD_LOGIC;
    weight_returnB_out_c2_V_write : OUT STD_LOGIC;
    weight_returnA_returnB_out_c2_s_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_returnA_returnB_out_c2_s_full_n : IN STD_LOGIC;
    weight_returnA_returnB_out_c2_s_write : OUT STD_LOGIC;
    NUMBER_OF_DAYS_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    NUMBER_OF_DAYS_out_full_n : IN STD_LOGIC;
    NUMBER_OF_DAYS_out_write : OUT STD_LOGIC;
    NUMBER_OF_DAYS_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    NUMBER_OF_DAYS_out1_full_n : IN STD_LOGIC;
    NUMBER_OF_DAYS_out1_write : OUT STD_LOGIC;
    NUMBER_OF_INDICES_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    NUMBER_OF_INDICES_out_full_n : IN STD_LOGIC;
    NUMBER_OF_INDICES_out_write : OUT STD_LOGIC;
    NUMBER_OF_INDICES_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    NUMBER_OF_INDICES_out2_full_n : IN STD_LOGIC;
    NUMBER_OF_INDICES_out2_write : OUT STD_LOGIC );
end;


architecture behav of correlation_accel_v4_frontEnd is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_pp0_stg0_fsm_15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_st47_fsm_16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_st48_fsm_17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_pp1_stg0_fsm_18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_st88_fsm_19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3F70A3D7 : STD_LOGIC_VECTOR (31 downto 0) := "00111111011100001010001111010111";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_39 : BOOLEAN;
    signal weight_rom_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_rom_ce0 : STD_LOGIC;
    signal weight_rom_we0 : STD_LOGIC;
    signal weight_rom_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_rom_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_rom_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_rom_ce1 : STD_LOGIC;
    signal weight_rom_we1 : STD_LOGIC;
    signal weight_rom_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_rom_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lnReturnA_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lnReturnA_ce0 : STD_LOGIC;
    signal lnReturnA_we0 : STD_LOGIC;
    signal lnReturnA_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lnReturnA_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i_reg_537 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_load_i_reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_i_reg_578 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_670 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_177 : BOOLEAN;
    signal tmp_18_i_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_186 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it31 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it32 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it33 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it34 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it35 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it36 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it37 : STD_LOGIC := '0';
    signal tmp_42_reg_1009 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_314 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it38 : STD_LOGIC := '0';
    signal tmp_18_i_reg_1018 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_677 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_333 : BOOLEAN;
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_340 : BOOLEAN;
    signal reg_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it7 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it9 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it11 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it12 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it13 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it14 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it15 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it17 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it18 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it19 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it20 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it21 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it22 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it23 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it24 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it25 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it26 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it27 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it28 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it29 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it30 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it31 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_684_pp1_it33 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_387 : BOOLEAN;
    signal grp_fu_628_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_695 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_i_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_397 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal tmp_4_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_632_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it30 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it31 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it33 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it34 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it35 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it36 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_700_pp1_it37 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_526 : BOOLEAN;
    signal i_fu_722_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_538 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_547 : BOOLEAN;
    signal tmp_85_i_i_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_742_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_3_reg_946 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_i_i_reg_957 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_562 : BOOLEAN;
    signal tmp_i_fu_748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_reg_967 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_573 : BOOLEAN;
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_4_i_reg_973_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_762_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_reg_977 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it5 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it6 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it7 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it8 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it9 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it10 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it11 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it12 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it13 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it14 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it15 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it16 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it17 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it18 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it19 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it20 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it21 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it22 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it23 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it24 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it25 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it26 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it27 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it28 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_reg_977_pp0_it29 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_i_tmp_2_i_fu_772_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i_tmp_2_i_reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_fu_780_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_fu_784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st48_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_685 : BOOLEAN;
    signal ap_sig_bdd_690 : BOOLEAN;
    signal tmp_42_fu_819_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_fu_823_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_835_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_43_reg_1022 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it5 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it6 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it7 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it8 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it9 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it10 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it11 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it12 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it13 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it14 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it15 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it16 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it17 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it18 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it19 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it20 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it21 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it22 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it23 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it24 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it25 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it26 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_1022_pp1_it27 : STD_LOGIC_VECTOR (30 downto 0);
    signal shift_reg_load_i_shift_reg_lo_fu_845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_load_i_shift_reg_lo_reg_1027 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_i_fu_853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_i_reg_1033 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_fu_862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lnReturnA_temp_reg_1053 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it30 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it31 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it33 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it34 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it35 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it36 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it37 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_i_reg_1063 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_i_reg_1068 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_returnA_temp_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_612_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_returnSquareA_temp_reg_1079 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_returnB_temp_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_returnSquareB_temp_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_624_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_returnA_returnB_temp_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal column_index_fu_883_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st88_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_851 : BOOLEAN;
    signal tmp_i_i_reg_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_i_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal i1_i_i_reg_526 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_872 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_880 : BOOLEAN;
    signal exitcond_i_i_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_phi_fu_540_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal column_index_i_reg_557 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st47_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_901 : BOOLEAN;
    signal shift_reg_load_i_phi_fu_572_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_i_i_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_i_i_fu_737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_i_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_i_fu_857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_i_fu_878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_i_fu_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_load1_i_fu_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_590_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_1003 : BOOLEAN;
    signal grp_fu_594_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_600_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_600_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_604_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_608_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_612_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_612_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_616_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_616_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_620_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_624_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_628_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_628_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_i_cast_i_fu_728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_i_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_fu_795_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal column_index_cast_i_fu_810_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_i_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_i_fu_873_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_590_ce : STD_LOGIC;
    signal grp_fu_594_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_1103 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_1111 : BOOLEAN;
    signal grp_fu_600_ce : STD_LOGIC;
    signal grp_fu_604_ce : STD_LOGIC;
    signal grp_fu_608_ce : STD_LOGIC;
    signal grp_fu_612_ce : STD_LOGIC;
    signal grp_fu_616_ce : STD_LOGIC;
    signal grp_fu_620_ce : STD_LOGIC;
    signal grp_fu_624_ce : STD_LOGIC;
    signal grp_fu_628_ce : STD_LOGIC;
    signal grp_fu_632_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_632_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);

    component correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlation_accel_v4_fdiv_32ns_32ns_32_16 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlation_accel_v4_flog_32ns_32ns_32_13_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlation_accel_v4_frontEnd_weight_rom IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlation_accel_v4_frontEnd_lnReturnA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    weight_rom_U : component correlation_accel_v4_frontEnd_weight_rom
    generic map (
        DataWidth => 32,
        AddressRange => 252,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_rom_address0,
        ce0 => weight_rom_ce0,
        we0 => weight_rom_we0,
        d0 => weight_rom_d0,
        q0 => weight_rom_q0,
        address1 => weight_rom_address1,
        ce1 => weight_rom_ce1,
        we1 => weight_rom_we1,
        d1 => weight_rom_d1,
        q1 => weight_rom_q1);

    lnReturnA_U : component correlation_accel_v4_frontEnd_lnReturnA
    generic map (
        DataWidth => 32,
        AddressRange => 252,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lnReturnA_address0,
        ce0 => lnReturnA_ce0,
        we0 => lnReturnA_we0,
        d0 => lnReturnA_d0,
        q0 => lnReturnA_q0);

    correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp_U1 : component correlation_accel_v4_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_590_p0,
        din1 => grp_fu_590_p1,
        ce => grp_fu_590_ce,
        dout => grp_fu_590_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U2 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_594_p0,
        din1 => grp_fu_594_p1,
        ce => grp_fu_594_ce,
        dout => grp_fu_594_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U3 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_600_p0,
        din1 => grp_fu_600_p1,
        ce => grp_fu_600_ce,
        dout => grp_fu_600_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U4 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_604_p0,
        din1 => grp_fu_604_p1,
        ce => grp_fu_604_ce,
        dout => grp_fu_604_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U5 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_608_p0,
        din1 => grp_fu_608_p1,
        ce => grp_fu_608_ce,
        dout => grp_fu_608_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U6 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_612_p0,
        din1 => grp_fu_612_p1,
        ce => grp_fu_612_ce,
        dout => grp_fu_612_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U7 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_616_p0,
        din1 => grp_fu_616_p1,
        ce => grp_fu_616_ce,
        dout => grp_fu_616_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U8 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_620_p0,
        din1 => grp_fu_620_p1,
        ce => grp_fu_620_ce,
        dout => grp_fu_620_p2);

    correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp_U9 : component correlation_accel_v4_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_624_p0,
        din1 => grp_fu_624_p1,
        ce => grp_fu_624_ce,
        dout => grp_fu_624_p2);

    correlation_accel_v4_fdiv_32ns_32ns_32_16_U10 : component correlation_accel_v4_fdiv_32ns_32ns_32_16
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_628_p0,
        din1 => grp_fu_628_p1,
        ce => grp_fu_628_ce,
        dout => grp_fu_628_p2);

    correlation_accel_v4_flog_32ns_32ns_32_13_full_dsp_U11 : component correlation_accel_v4_flog_32ns_32ns_32_13_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_632_p0,
        din1 => grp_fu_632_p1,
        ce => grp_fu_632_ce,
        dout => grp_fu_632_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and (ap_const_lv1_0 = tmp_6_i_fu_814_p2) and not(ap_sig_bdd_690))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if ((not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15) and not((ap_const_lv1_0 = tmp_4_i_fu_757_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = tmp_4_i_fu_757_p2) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0))) or (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15) and not((ap_const_lv1_0 = tmp_4_i_fu_757_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it27 assign process. --
    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it28 assign process. --
    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it29 assign process. --
    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it30 assign process. --
    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and not((tmp_18_i_fu_827_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((tmp_18_i_fu_827_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690)) or (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and not((tmp_18_i_fu_827_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it10 assign process. --
    ap_reg_ppiten_pp1_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it11 assign process. --
    ap_reg_ppiten_pp1_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it12 assign process. --
    ap_reg_ppiten_pp1_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it13 assign process. --
    ap_reg_ppiten_pp1_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it14 assign process. --
    ap_reg_ppiten_pp1_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it15 assign process. --
    ap_reg_ppiten_pp1_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it15 <= ap_reg_ppiten_pp1_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it16 assign process. --
    ap_reg_ppiten_pp1_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it16 <= ap_reg_ppiten_pp1_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it17 assign process. --
    ap_reg_ppiten_pp1_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it17 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it17 <= ap_reg_ppiten_pp1_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it18 assign process. --
    ap_reg_ppiten_pp1_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it18 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it18 <= ap_reg_ppiten_pp1_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it19 assign process. --
    ap_reg_ppiten_pp1_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it19 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it19 <= ap_reg_ppiten_pp1_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it20 assign process. --
    ap_reg_ppiten_pp1_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it20 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it20 <= ap_reg_ppiten_pp1_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it21 assign process. --
    ap_reg_ppiten_pp1_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it21 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it21 <= ap_reg_ppiten_pp1_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it22 assign process. --
    ap_reg_ppiten_pp1_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it22 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it22 <= ap_reg_ppiten_pp1_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it23 assign process. --
    ap_reg_ppiten_pp1_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it23 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it23 <= ap_reg_ppiten_pp1_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it24 assign process. --
    ap_reg_ppiten_pp1_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it24 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it24 <= ap_reg_ppiten_pp1_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it25 assign process. --
    ap_reg_ppiten_pp1_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it25 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it25 <= ap_reg_ppiten_pp1_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it26 assign process. --
    ap_reg_ppiten_pp1_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it26 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it26 <= ap_reg_ppiten_pp1_it25;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it27 assign process. --
    ap_reg_ppiten_pp1_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it27 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it27 <= ap_reg_ppiten_pp1_it26;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it28 assign process. --
    ap_reg_ppiten_pp1_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it28 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it28 <= ap_reg_ppiten_pp1_it27;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it29 assign process. --
    ap_reg_ppiten_pp1_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it29 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it29 <= ap_reg_ppiten_pp1_it28;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it3 assign process. --
    ap_reg_ppiten_pp1_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it30 assign process. --
    ap_reg_ppiten_pp1_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it30 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it30 <= ap_reg_ppiten_pp1_it29;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it31 assign process. --
    ap_reg_ppiten_pp1_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it31 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it31 <= ap_reg_ppiten_pp1_it30;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it32 assign process. --
    ap_reg_ppiten_pp1_it32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it32 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it32 <= ap_reg_ppiten_pp1_it31;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it33 assign process. --
    ap_reg_ppiten_pp1_it33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it33 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it33 <= ap_reg_ppiten_pp1_it32;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it34 assign process. --
    ap_reg_ppiten_pp1_it34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it34 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it34 <= ap_reg_ppiten_pp1_it33;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it35 assign process. --
    ap_reg_ppiten_pp1_it35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it35 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it35 <= ap_reg_ppiten_pp1_it34;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it36 assign process. --
    ap_reg_ppiten_pp1_it36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it36 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it36 <= ap_reg_ppiten_pp1_it35;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it37 assign process. --
    ap_reg_ppiten_pp1_it37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it37 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it37 <= ap_reg_ppiten_pp1_it36;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it38 assign process. --
    ap_reg_ppiten_pp1_it38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it38 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it38 <= ap_reg_ppiten_pp1_it37;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690))) then 
                    ap_reg_ppiten_pp1_it38 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it4 assign process. --
    ap_reg_ppiten_pp1_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it5 assign process. --
    ap_reg_ppiten_pp1_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it6 assign process. --
    ap_reg_ppiten_pp1_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it7 assign process. --
    ap_reg_ppiten_pp1_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it8 assign process. --
    ap_reg_ppiten_pp1_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it9 assign process. --
    ap_reg_ppiten_pp1_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then 
                    ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
                end if; 
            end if;
        end if;
    end process;


    -- column_index_i_reg_557 assign process. --
    column_index_i_reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_16)) then 
                column_index_i_reg_557 <= ap_const_lv31_1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st88_fsm_19)) then 
                column_index_i_reg_557 <= column_index_fu_883_p2;
            end if; 
        end if;
    end process;

    -- i1_i_i_reg_526 assign process. --
    i1_i_i_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond_i_i_fu_711_p2)))) then 
                i1_i_i_reg_526 <= ap_const_lv31_2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                i1_i_i_reg_526 <= i_3_reg_946;
            end if; 
        end if;
    end process;

    -- i1_i_reg_578 assign process. --
    i1_i_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_i_fu_827_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                i1_i_reg_578 <= i_5_fu_862_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690))) then 
                i1_i_reg_578 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    -- i_i_i_reg_514 assign process. --
    i_i_i_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                i_i_i_reg_514 <= i_fu_722_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526))) then 
                i_i_i_reg_514 <= ap_const_lv8_2;
            end if; 
        end if;
    end process;

    -- i_i_reg_546 assign process. --
    i_i_reg_546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_4_i_fu_757_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15))) then 
                i_i_reg_546 <= i_4_fu_784_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0)))) then 
                i_i_reg_546 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    -- reg_684 assign process. --
    reg_684_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = tmp_18_i_reg_1018))) then 
                reg_684 <= weight_rom_q1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                reg_684 <= weight_rom_q0;
            end if; 
        end if;
    end process;

    -- shift_reg_load1_i_fu_244 assign process. --
    shift_reg_load1_i_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_i_fu_827_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                shift_reg_load1_i_fu_244 <= tmp_26_i_fu_853_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_16)) then 
                shift_reg_load1_i_fu_244 <= tmp_2_i_fu_240;
            end if; 
        end if;
    end process;

    -- shift_reg_load_i_reg_569 assign process. --
    shift_reg_load_i_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = tmp_18_i_reg_1018))) then 
                shift_reg_load_i_reg_569 <= shift_reg_load_i_shift_reg_lo_reg_1027;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690))) then 
                shift_reg_load_i_reg_569 <= tmp_10_i_fu_823_p1;
            end if; 
        end if;
    end process;

    -- tmp_3_i_reg_537 assign process. --
    tmp_3_i_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15) and (ap_const_lv1_0 = tmp_4_i_reg_973))) then 
                tmp_3_i_reg_537 <= tmp_3_i_tmp_2_i_reg_982;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0)))) then 
                tmp_3_i_reg_537 <= tmp_i_fu_748_p1;
            end if; 
        end if;
    end process;

    -- tmp_i_i_reg_502 assign process. --
    tmp_i_i_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                tmp_i_i_reg_502 <= reg_670;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526))) then 
                tmp_i_i_reg_502 <= ap_const_lv32_3F800000;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))) then
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it30 <= lnReturnA_temp_reg_1053;
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it31 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it30;
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it32 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it31;
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it33 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it32;
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it34 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it33;
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it35 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it34;
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it36 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it35;
                ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it37 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it36;
                ap_reg_ppstg_reg_684_pp1_it10 <= ap_reg_ppstg_reg_684_pp1_it9;
                ap_reg_ppstg_reg_684_pp1_it11 <= ap_reg_ppstg_reg_684_pp1_it10;
                ap_reg_ppstg_reg_684_pp1_it12 <= ap_reg_ppstg_reg_684_pp1_it11;
                ap_reg_ppstg_reg_684_pp1_it13 <= ap_reg_ppstg_reg_684_pp1_it12;
                ap_reg_ppstg_reg_684_pp1_it14 <= ap_reg_ppstg_reg_684_pp1_it13;
                ap_reg_ppstg_reg_684_pp1_it15 <= ap_reg_ppstg_reg_684_pp1_it14;
                ap_reg_ppstg_reg_684_pp1_it16 <= ap_reg_ppstg_reg_684_pp1_it15;
                ap_reg_ppstg_reg_684_pp1_it17 <= ap_reg_ppstg_reg_684_pp1_it16;
                ap_reg_ppstg_reg_684_pp1_it18 <= ap_reg_ppstg_reg_684_pp1_it17;
                ap_reg_ppstg_reg_684_pp1_it19 <= ap_reg_ppstg_reg_684_pp1_it18;
                ap_reg_ppstg_reg_684_pp1_it2 <= reg_684;
                ap_reg_ppstg_reg_684_pp1_it20 <= ap_reg_ppstg_reg_684_pp1_it19;
                ap_reg_ppstg_reg_684_pp1_it21 <= ap_reg_ppstg_reg_684_pp1_it20;
                ap_reg_ppstg_reg_684_pp1_it22 <= ap_reg_ppstg_reg_684_pp1_it21;
                ap_reg_ppstg_reg_684_pp1_it23 <= ap_reg_ppstg_reg_684_pp1_it22;
                ap_reg_ppstg_reg_684_pp1_it24 <= ap_reg_ppstg_reg_684_pp1_it23;
                ap_reg_ppstg_reg_684_pp1_it25 <= ap_reg_ppstg_reg_684_pp1_it24;
                ap_reg_ppstg_reg_684_pp1_it26 <= ap_reg_ppstg_reg_684_pp1_it25;
                ap_reg_ppstg_reg_684_pp1_it27 <= ap_reg_ppstg_reg_684_pp1_it26;
                ap_reg_ppstg_reg_684_pp1_it28 <= ap_reg_ppstg_reg_684_pp1_it27;
                ap_reg_ppstg_reg_684_pp1_it29 <= ap_reg_ppstg_reg_684_pp1_it28;
                ap_reg_ppstg_reg_684_pp1_it3 <= ap_reg_ppstg_reg_684_pp1_it2;
                ap_reg_ppstg_reg_684_pp1_it30 <= ap_reg_ppstg_reg_684_pp1_it29;
                ap_reg_ppstg_reg_684_pp1_it31 <= ap_reg_ppstg_reg_684_pp1_it30;
                ap_reg_ppstg_reg_684_pp1_it32 <= ap_reg_ppstg_reg_684_pp1_it31;
                ap_reg_ppstg_reg_684_pp1_it33 <= ap_reg_ppstg_reg_684_pp1_it32;
                ap_reg_ppstg_reg_684_pp1_it4 <= ap_reg_ppstg_reg_684_pp1_it3;
                ap_reg_ppstg_reg_684_pp1_it5 <= ap_reg_ppstg_reg_684_pp1_it4;
                ap_reg_ppstg_reg_684_pp1_it6 <= ap_reg_ppstg_reg_684_pp1_it5;
                ap_reg_ppstg_reg_684_pp1_it7 <= ap_reg_ppstg_reg_684_pp1_it6;
                ap_reg_ppstg_reg_684_pp1_it8 <= ap_reg_ppstg_reg_684_pp1_it7;
                ap_reg_ppstg_reg_684_pp1_it9 <= ap_reg_ppstg_reg_684_pp1_it8;
                ap_reg_ppstg_reg_700_pp1_it30 <= reg_700;
                ap_reg_ppstg_reg_700_pp1_it31 <= ap_reg_ppstg_reg_700_pp1_it30;
                ap_reg_ppstg_reg_700_pp1_it32 <= ap_reg_ppstg_reg_700_pp1_it31;
                ap_reg_ppstg_reg_700_pp1_it33 <= ap_reg_ppstg_reg_700_pp1_it32;
                ap_reg_ppstg_reg_700_pp1_it34 <= ap_reg_ppstg_reg_700_pp1_it33;
                ap_reg_ppstg_reg_700_pp1_it35 <= ap_reg_ppstg_reg_700_pp1_it34;
                ap_reg_ppstg_reg_700_pp1_it36 <= ap_reg_ppstg_reg_700_pp1_it35;
                ap_reg_ppstg_reg_700_pp1_it37 <= ap_reg_ppstg_reg_700_pp1_it36;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it10 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it9;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it11 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it10;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it12 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it11;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it13 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it12;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it14 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it13;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it15 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it14;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it16 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it15;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it17 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it16;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it18 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it17;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it19 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it18;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it2 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it1;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it20 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it19;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it21 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it20;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it22 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it21;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it23 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it22;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it24 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it23;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it25 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it24;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it26 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it25;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it27 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it26;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it28 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it27;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it28;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it3 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it2;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it4 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it3;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it5 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it4;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it6 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it5;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it7 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it6;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it8 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it7;
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it9 <= ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it8;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it10 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it9;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it11 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it10;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it12 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it11;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it13 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it12;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it14 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it13;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it15 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it14;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it16 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it15;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it17 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it16;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it18 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it17;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it19 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it18;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it2 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it1;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it20 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it19;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it21 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it20;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it22 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it21;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it23 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it22;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it24 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it23;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it25 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it24;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it26 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it25;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it27 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it26;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it3 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it2;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it4 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it3;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it5 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it4;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it6 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it5;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it7 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it6;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it8 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it7;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it9 <= ap_reg_ppstg_tmp_43_reg_1022_pp1_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then
                ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it1 <= tmp_18_i_reg_1018;
                ap_reg_ppstg_tmp_43_reg_1022_pp1_it1 <= tmp_43_reg_1022;
                tmp_18_i_reg_1018 <= tmp_18_i_fu_827_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15))) then
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it1 <= tmp_4_i_reg_973;
                ap_reg_ppstg_tmp_reg_977_pp0_it1 <= tmp_reg_977;
                tmp_4_i_reg_973 <= tmp_4_i_fu_757_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it10 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it9;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it11 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it10;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it12 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it11;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it13 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it12;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it14 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it13;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it15 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it14;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it16 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it15;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it17 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it16;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it18 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it17;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it19 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it18;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it2 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it1;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it20 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it19;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it21 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it20;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it22 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it21;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it23 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it22;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it24 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it23;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it25 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it24;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it26 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it25;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it27 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it26;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it28 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it27;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it29 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it28;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it3 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it2;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it4 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it3;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it5 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it4;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it6 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it5;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it7 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it6;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it8 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it7;
                ap_reg_ppstg_tmp_4_i_reg_973_pp0_it9 <= ap_reg_ppstg_tmp_4_i_reg_973_pp0_it8;
                ap_reg_ppstg_tmp_reg_977_pp0_it10 <= ap_reg_ppstg_tmp_reg_977_pp0_it9;
                ap_reg_ppstg_tmp_reg_977_pp0_it11 <= ap_reg_ppstg_tmp_reg_977_pp0_it10;
                ap_reg_ppstg_tmp_reg_977_pp0_it12 <= ap_reg_ppstg_tmp_reg_977_pp0_it11;
                ap_reg_ppstg_tmp_reg_977_pp0_it13 <= ap_reg_ppstg_tmp_reg_977_pp0_it12;
                ap_reg_ppstg_tmp_reg_977_pp0_it14 <= ap_reg_ppstg_tmp_reg_977_pp0_it13;
                ap_reg_ppstg_tmp_reg_977_pp0_it15 <= ap_reg_ppstg_tmp_reg_977_pp0_it14;
                ap_reg_ppstg_tmp_reg_977_pp0_it16 <= ap_reg_ppstg_tmp_reg_977_pp0_it15;
                ap_reg_ppstg_tmp_reg_977_pp0_it17 <= ap_reg_ppstg_tmp_reg_977_pp0_it16;
                ap_reg_ppstg_tmp_reg_977_pp0_it18 <= ap_reg_ppstg_tmp_reg_977_pp0_it17;
                ap_reg_ppstg_tmp_reg_977_pp0_it19 <= ap_reg_ppstg_tmp_reg_977_pp0_it18;
                ap_reg_ppstg_tmp_reg_977_pp0_it2 <= ap_reg_ppstg_tmp_reg_977_pp0_it1;
                ap_reg_ppstg_tmp_reg_977_pp0_it20 <= ap_reg_ppstg_tmp_reg_977_pp0_it19;
                ap_reg_ppstg_tmp_reg_977_pp0_it21 <= ap_reg_ppstg_tmp_reg_977_pp0_it20;
                ap_reg_ppstg_tmp_reg_977_pp0_it22 <= ap_reg_ppstg_tmp_reg_977_pp0_it21;
                ap_reg_ppstg_tmp_reg_977_pp0_it23 <= ap_reg_ppstg_tmp_reg_977_pp0_it22;
                ap_reg_ppstg_tmp_reg_977_pp0_it24 <= ap_reg_ppstg_tmp_reg_977_pp0_it23;
                ap_reg_ppstg_tmp_reg_977_pp0_it25 <= ap_reg_ppstg_tmp_reg_977_pp0_it24;
                ap_reg_ppstg_tmp_reg_977_pp0_it26 <= ap_reg_ppstg_tmp_reg_977_pp0_it25;
                ap_reg_ppstg_tmp_reg_977_pp0_it27 <= ap_reg_ppstg_tmp_reg_977_pp0_it26;
                ap_reg_ppstg_tmp_reg_977_pp0_it28 <= ap_reg_ppstg_tmp_reg_977_pp0_it27;
                ap_reg_ppstg_tmp_reg_977_pp0_it29 <= ap_reg_ppstg_tmp_reg_977_pp0_it28;
                ap_reg_ppstg_tmp_reg_977_pp0_it3 <= ap_reg_ppstg_tmp_reg_977_pp0_it2;
                ap_reg_ppstg_tmp_reg_977_pp0_it4 <= ap_reg_ppstg_tmp_reg_977_pp0_it3;
                ap_reg_ppstg_tmp_reg_977_pp0_it5 <= ap_reg_ppstg_tmp_reg_977_pp0_it4;
                ap_reg_ppstg_tmp_reg_977_pp0_it6 <= ap_reg_ppstg_tmp_reg_977_pp0_it5;
                ap_reg_ppstg_tmp_reg_977_pp0_it7 <= ap_reg_ppstg_tmp_reg_977_pp0_it6;
                ap_reg_ppstg_tmp_reg_977_pp0_it8 <= ap_reg_ppstg_tmp_reg_977_pp0_it7;
                ap_reg_ppstg_tmp_reg_977_pp0_it9 <= ap_reg_ppstg_tmp_reg_977_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_85_i_i_fu_732_p2)))) then
                i_3_reg_946 <= i_3_fu_742_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it28))) then
                lnReturnA_temp_reg_1053 <= lnReturnA_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32)))) then
                reg_670 <= grp_fu_594_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0))))) then
                reg_677 <= weight_rom_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it15)) or (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it15)))) then
                reg_695 <= grp_fu_628_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it28)) or (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it28)))) then
                reg_700 <= grp_fu_632_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_i_fu_827_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then
                shift_reg_load_i_shift_reg_lo_reg_1027 <= shift_reg_load_i_shift_reg_lo_fu_845_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_4_i_fu_757_p2) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15))) then
                tmp_14_i_reg_988 <= tmp_14_i_fu_780_p1;
                tmp_reg_977 <= tmp_fu_762_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0)))) then
                tmp_1_i_reg_967 <= tmp_1_i_fu_752_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_i_fu_827_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then
                tmp_26_i_reg_1033 <= tmp_26_i_fu_853_p1;
                tmp_43_reg_1022 <= tmp_43_fu_835_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_4_i_fu_757_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15))) then
                tmp_2_i_fu_240 <= tmp_14_i_fu_780_p1;
                tmp_3_i_tmp_2_i_reg_982 <= tmp_3_i_tmp_2_i_fu_772_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32))) then
                tmp_32_i_reg_1063 <= grp_fu_600_p2;
                tmp_33_i_reg_1068 <= grp_fu_604_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690))) then
                tmp_42_reg_1009 <= tmp_42_fu_819_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                tmp_88_i_i_reg_957 <= grp_fu_590_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36))) then
                weight_returnA_returnB_temp_reg_1097 <= grp_fu_624_p2;
                weight_returnA_temp_reg_1073 <= grp_fu_608_p2;
                weight_returnB_temp_reg_1085 <= grp_fu_616_p2;
                weight_returnSquareA_temp_reg_1079 <= grp_fu_612_p2;
                weight_returnSquareB_temp_reg_1091 <= grp_fu_620_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, in_indices_TVALID, tmp_18_i_fu_827_p2, ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it37, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, tmp_4_i_fu_757_p2, ap_sig_bdd_397, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_sig_bdd_526, tmp_85_i_i_fu_732_p2, tmp_6_i_fu_814_p2, ap_sig_bdd_690, exitcond_i_i_fu_711_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_526)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond_i_i_fu_711_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st7_fsm_6 => 
                if ((ap_const_lv1_0 = tmp_85_i_i_fu_732_p2)) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st15_fsm_14 => 
                if (not((in_indices_TVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_pp0_stg0_fsm_15 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it29)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_lv1_0 = tmp_4_i_fu_757_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_15;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it29))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_lv1_0 = tmp_4_i_fu_757_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st47_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_15;
                end if;
            when ap_ST_st47_fsm_16 => 
                ap_NS_fsm <= ap_ST_st48_fsm_17;
            when ap_ST_st48_fsm_17 => 
                if (((ap_const_lv1_0 = tmp_6_i_fu_814_p2) and not(ap_sig_bdd_690))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif ((not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st48_fsm_17;
                end if;
            when ap_ST_pp1_stg0_fsm_18 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it37)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and not((tmp_18_i_fu_827_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_18;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it37))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and not((tmp_18_i_fu_827_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st88_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_18;
                end if;
            when ap_ST_st88_fsm_19 => 
                ap_NS_fsm <= ap_ST_st48_fsm_17;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    NUMBER_OF_DAYS_out1_din <= NUMBER_OF_DAYS;

    -- NUMBER_OF_DAYS_out1_write assign process. --
    NUMBER_OF_DAYS_out1_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_526)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526))) then 
            NUMBER_OF_DAYS_out1_write <= ap_const_logic_1;
        else 
            NUMBER_OF_DAYS_out1_write <= ap_const_logic_0;
        end if; 
    end process;

    NUMBER_OF_DAYS_out_din <= NUMBER_OF_DAYS;

    -- NUMBER_OF_DAYS_out_write assign process. --
    NUMBER_OF_DAYS_out_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_526)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526))) then 
            NUMBER_OF_DAYS_out_write <= ap_const_logic_1;
        else 
            NUMBER_OF_DAYS_out_write <= ap_const_logic_0;
        end if; 
    end process;

    NUMBER_OF_INDICES_out2_din <= NUMBER_OF_INDICES;

    -- NUMBER_OF_INDICES_out2_write assign process. --
    NUMBER_OF_INDICES_out2_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_526)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526))) then 
            NUMBER_OF_INDICES_out2_write <= ap_const_logic_1;
        else 
            NUMBER_OF_INDICES_out2_write <= ap_const_logic_0;
        end if; 
    end process;

    NUMBER_OF_INDICES_out_din <= NUMBER_OF_INDICES;

    -- NUMBER_OF_INDICES_out_write assign process. --
    NUMBER_OF_INDICES_out_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_526)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526))) then 
            NUMBER_OF_INDICES_out_write <= ap_const_logic_1;
        else 
            NUMBER_OF_INDICES_out_write <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, tmp_6_i_fu_814_p2, ap_sig_cseq_ST_st48_fsm_17, ap_sig_bdd_690)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and (ap_const_lv1_0 = tmp_6_i_fu_814_p2) and not(ap_sig_bdd_690)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(tmp_6_i_fu_814_p2, ap_sig_cseq_ST_st48_fsm_17, ap_sig_bdd_690)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and (ap_const_lv1_0 = tmp_6_i_fu_814_p2) and not(ap_sig_bdd_690))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1003 assign process. --
    ap_sig_bdd_1003_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1003 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_1103 assign process. --
    ap_sig_bdd_1103_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1103 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_1111 assign process. --
    ap_sig_bdd_1111_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1111 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_177 assign process. --
    ap_sig_bdd_177_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_177 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_186 assign process. --
    ap_sig_bdd_186_assign_proc : process(in_indices_TVALID, tmp_18_i_fu_827_p2)
    begin
                ap_sig_bdd_186 <= ((in_indices_TVALID = ap_const_logic_0) and (tmp_18_i_fu_827_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_314 assign process. --
    ap_sig_bdd_314_assign_proc : process(ln_returnA_out_c1_V_full_n, weight_returnSquareA_out_c1_V_full_n, weight_returnA_out_c1_V_full_n, ln_returnA_out_c2_V_full_n, weight_returnSquareA_out_c2_V_full_n, weight_returnA_out_c2_V_full_n, sum_weight_out_c1_V_full_n, ln_returnB_out_c1_V_full_n, weight_returnSquareB_out_c1_V_full_n, weight_returnB_out_c1_V_full_n, weight_returnA_returnB_out_c1_s_full_n, sum_weight_out_c2_V_full_n, ln_returnB_out_c2_V_full_n, weight_returnSquareB_out_c2_V_full_n, weight_returnB_out_c2_V_full_n, weight_returnA_returnB_out_c2_s_full_n, tmp_42_reg_1009)
    begin
                ap_sig_bdd_314 <= (((ln_returnA_out_c2_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = tmp_42_reg_1009)) or ((ap_const_lv1_0 = tmp_42_reg_1009) and (weight_returnSquareA_out_c2_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = tmp_42_reg_1009) and (weight_returnA_out_c2_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = tmp_42_reg_1009) and (sum_weight_out_c2_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = tmp_42_reg_1009) and (ln_returnB_out_c2_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = tmp_42_reg_1009) and (weight_returnSquareB_out_c2_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = tmp_42_reg_1009) and (weight_returnB_out_c2_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = tmp_42_reg_1009) and (weight_returnA_returnB_out_c2_s_full_n = ap_const_logic_0)) or ((ln_returnA_out_c1_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_42_reg_1009))) or (not((ap_const_lv1_0 = tmp_42_reg_1009)) and (weight_returnSquareA_out_c1_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = tmp_42_reg_1009)) and (weight_returnA_out_c1_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = tmp_42_reg_1009)) and (sum_weight_out_c1_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ln_returnB_out_c1_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = tmp_42_reg_1009)) and (weight_returnSquareB_out_c1_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = tmp_42_reg_1009)) and (weight_returnB_out_c1_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = tmp_42_reg_1009)) and (weight_returnA_returnB_out_c1_s_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_333 assign process. --
    ap_sig_bdd_333_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_333 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_340 assign process. --
    ap_sig_bdd_340_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_340 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_387 assign process. --
    ap_sig_bdd_387_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_387 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_39 assign process. --
    ap_sig_bdd_39_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_39 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_397 assign process. --
    ap_sig_bdd_397_assign_proc : process(in_indices_TVALID, tmp_4_i_fu_757_p2)
    begin
                ap_sig_bdd_397 <= ((in_indices_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = tmp_4_i_fu_757_p2));
    end process;


    -- ap_sig_bdd_526 assign process. --
    ap_sig_bdd_526_assign_proc : process(ap_start, ap_done_reg, NUMBER_OF_DAYS_out_full_n, NUMBER_OF_DAYS_out1_full_n, NUMBER_OF_INDICES_out_full_n, NUMBER_OF_INDICES_out2_full_n)
    begin
                ap_sig_bdd_526 <= ((NUMBER_OF_INDICES_out2_full_n = ap_const_logic_0) or (NUMBER_OF_INDICES_out_full_n = ap_const_logic_0) or (NUMBER_OF_DAYS_out1_full_n = ap_const_logic_0) or (NUMBER_OF_DAYS_out_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_538 assign process. --
    ap_sig_bdd_538_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_538 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_547 assign process. --
    ap_sig_bdd_547_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_547 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_562 assign process. --
    ap_sig_bdd_562_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_562 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_573 assign process. --
    ap_sig_bdd_573_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_573 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_685 assign process. --
    ap_sig_bdd_685_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_685 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_690 assign process. --
    ap_sig_bdd_690_assign_proc : process(in_indices_TVALID, tmp_6_i_fu_814_p2)
    begin
                ap_sig_bdd_690 <= ((in_indices_TVALID = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)));
    end process;


    -- ap_sig_bdd_851 assign process. --
    ap_sig_bdd_851_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_851 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_872 assign process. --
    ap_sig_bdd_872_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_872 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_880 assign process. --
    ap_sig_bdd_880_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_880 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_901 assign process. --
    ap_sig_bdd_901_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_901 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_15 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_15_assign_proc : process(ap_sig_bdd_573)
    begin
        if (ap_sig_bdd_573) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_18 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_18_assign_proc : process(ap_sig_bdd_387)
    begin
        if (ap_sig_bdd_387) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st13_fsm_12 assign process. --
    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_bdd_562)
    begin
        if (ap_sig_bdd_562) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_13 assign process. --
    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_bdd_872)
    begin
        if (ap_sig_bdd_872) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st15_fsm_14 assign process. --
    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_bdd_340)
    begin
        if (ap_sig_bdd_340) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_39)
    begin
        if (ap_sig_bdd_39) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_880)
    begin
        if (ap_sig_bdd_880) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_1103)
    begin
        if (ap_sig_bdd_1103) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st47_fsm_16 assign process. --
    ap_sig_cseq_ST_st47_fsm_16_assign_proc : process(ap_sig_bdd_901)
    begin
        if (ap_sig_bdd_901) then 
            ap_sig_cseq_ST_st47_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st47_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st48_fsm_17 assign process. --
    ap_sig_cseq_ST_st48_fsm_17_assign_proc : process(ap_sig_bdd_685)
    begin
        if (ap_sig_bdd_685) then 
            ap_sig_cseq_ST_st48_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st48_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_1111)
    begin
        if (ap_sig_bdd_1111) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_177)
    begin
        if (ap_sig_bdd_177) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_538)
    begin
        if (ap_sig_bdd_538) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_547)
    begin
        if (ap_sig_bdd_547) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st88_fsm_19 assign process. --
    ap_sig_cseq_ST_st88_fsm_19_assign_proc : process(ap_sig_bdd_851)
    begin
        if (ap_sig_bdd_851) then 
            ap_sig_cseq_ST_st88_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st88_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_333)
    begin
        if (ap_sig_bdd_333) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_1003)
    begin
        if (ap_sig_bdd_1003) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    column_index_cast_i_fu_810_p1 <= std_logic_vector(resize(unsigned(column_index_i_reg_557),32));
    column_index_fu_883_p2 <= std_logic_vector(unsigned(column_index_i_reg_557) + unsigned(ap_const_lv31_1));
    exitcond_i_i_fu_711_p2 <= "1" when (i_i_i_reg_514 = ap_const_lv8_FC) else "0";
    grp_fu_590_ce <= ap_const_logic_1;
    grp_fu_590_p0 <= reg_684;
    grp_fu_590_p1 <= reg_677;

    -- grp_fu_594_ce assign process. --
    grp_fu_594_ce_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31, ap_sig_cseq_ST_st2_fsm_1, exitcond_i_i_fu_711_p2, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_i_i_fu_711_p2)) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31))))) then 
            grp_fu_594_ce <= ap_const_logic_1;
        else 
            grp_fu_594_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_594_p0 assign process. --
    grp_fu_594_p0_assign_proc : process(ap_reg_ppiten_pp1_it30, lnReturnA_temp_reg_1053, tmp_i_i_reg_502, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it30)) then 
            grp_fu_594_p0 <= lnReturnA_temp_reg_1053;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            grp_fu_594_p0 <= tmp_i_i_reg_502;
        else 
            grp_fu_594_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_594_p1 assign process. --
    grp_fu_594_p1_assign_proc : process(ap_reg_ppiten_pp1_it30, lnReturnA_temp_reg_1053, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it30)) then 
            grp_fu_594_p1 <= lnReturnA_temp_reg_1053;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            grp_fu_594_p1 <= ap_const_lv32_3F70A3D7;
        else 
            grp_fu_594_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_600_ce assign process. --
    grp_fu_600_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31)
    begin
        if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31)))) then 
            grp_fu_600_ce <= ap_const_logic_1;
        else 
            grp_fu_600_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_600_p0 <= reg_700;
    grp_fu_600_p1 <= reg_700;

    -- grp_fu_604_ce assign process. --
    grp_fu_604_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31)
    begin
        if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it32) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it29) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it30) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it31)))) then 
            grp_fu_604_ce <= ap_const_logic_1;
        else 
            grp_fu_604_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_604_p0 <= lnReturnA_temp_reg_1053;
    grp_fu_604_p1 <= reg_700;

    -- grp_fu_608_ce assign process. --
    grp_fu_608_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36)
    begin
        if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35)))) then 
            grp_fu_608_ce <= ap_const_logic_1;
        else 
            grp_fu_608_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_608_p0 <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it33;
    grp_fu_608_p1 <= ap_reg_ppstg_reg_684_pp1_it33;

    -- grp_fu_612_ce assign process. --
    grp_fu_612_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36)
    begin
        if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35)))) then 
            grp_fu_612_ce <= ap_const_logic_1;
        else 
            grp_fu_612_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_612_p0 <= reg_670;
    grp_fu_612_p1 <= ap_reg_ppstg_reg_684_pp1_it33;

    -- grp_fu_616_ce assign process. --
    grp_fu_616_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36)
    begin
        if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35)))) then 
            grp_fu_616_ce <= ap_const_logic_1;
        else 
            grp_fu_616_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_616_p0 <= ap_reg_ppstg_reg_700_pp1_it33;
    grp_fu_616_p1 <= ap_reg_ppstg_reg_684_pp1_it33;

    -- grp_fu_620_ce assign process. --
    grp_fu_620_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36)
    begin
        if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35)))) then 
            grp_fu_620_ce <= ap_const_logic_1;
        else 
            grp_fu_620_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_620_p0 <= tmp_32_i_reg_1063;
    grp_fu_620_p1 <= ap_reg_ppstg_reg_684_pp1_it33;

    -- grp_fu_624_ce assign process. --
    grp_fu_624_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36)
    begin
        if ((not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it36) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it34) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it35)))) then 
            grp_fu_624_ce <= ap_const_logic_1;
        else 
            grp_fu_624_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_624_p0 <= tmp_33_i_reg_1068;
    grp_fu_624_p1 <= ap_reg_ppstg_reg_684_pp1_it33;

    -- grp_fu_628_ce assign process. --
    grp_fu_628_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, tmp_18_i_reg_1018, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_bdd_397, ap_reg_ppiten_pp0_it0, tmp_4_i_reg_973, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it15, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it15, ap_sig_cseq_ST_pp0_stg0_fsm_15, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it1, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it2, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it3, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it4, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it5, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it6, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it7, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it8, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it9, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it10, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it11, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it12, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it13, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it14, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it1, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it2, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it3, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it4, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it5, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it6, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it7, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it8, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it9, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it10, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it11, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it12, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it13, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it14)
    begin
        if (((not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it15) or (ap_const_lv1_0 = tmp_4_i_reg_973) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it2) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it6) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it7) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it8) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it9) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it10) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it11) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it12) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it13) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it14))) or (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = tmp_18_i_reg_1018) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it15) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it1) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it2) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it3) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it4) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it5) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it6) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it7) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it8) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it9) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it10) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it11) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it12) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it13) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it14))))) then 
            grp_fu_628_ce <= ap_const_logic_1;
        else 
            grp_fu_628_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_628_p0 assign process. --
    grp_fu_628_p0_assign_proc : process(ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_15, tmp_3_i_tmp_2_i_reg_982, shift_reg_load_i_shift_reg_lo_reg_1027)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            grp_fu_628_p0 <= shift_reg_load_i_shift_reg_lo_reg_1027;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15))) then 
            grp_fu_628_p0 <= tmp_3_i_tmp_2_i_reg_982;
        else 
            grp_fu_628_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_628_p1 assign process. --
    grp_fu_628_p1_assign_proc : process(ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_15, tmp_14_i_reg_988, tmp_26_i_reg_1033)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            grp_fu_628_p1 <= tmp_26_i_reg_1033;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15))) then 
            grp_fu_628_p1 <= tmp_14_i_reg_988;
        else 
            grp_fu_628_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_632_ce assign process. --
    grp_fu_632_ce_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_bdd_397, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it28, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it28, ap_sig_cseq_ST_pp0_stg0_fsm_15, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it16, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it17, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it18, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it19, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it20, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it21, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it22, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it23, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it24, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it25, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it26, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it27, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it16, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it17, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it18, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it19, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it20, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it21, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it22, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it23, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it24, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it25, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it26, ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it27)
    begin
        if (((not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it28) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it16) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it17) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it18) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it19) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it20) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it21) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it22) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it23) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it24) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it25) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it26) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it27))) or (not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it28) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it27) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it16) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it17) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it18) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it19) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it20) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it21) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it22) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it23) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it24) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it25) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_1018_pp1_it26))))) then 
            grp_fu_632_ce <= ap_const_logic_1;
        else 
            grp_fu_632_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_632_p0 <= ap_const_lv32_0;
    grp_fu_632_p1 <= reg_695;
    i1_i_cast_i_fu_728_p1 <= std_logic_vector(resize(unsigned(i1_i_i_reg_526),32));
    i_3_fu_742_p2 <= std_logic_vector(unsigned(i1_i_i_reg_526) + unsigned(ap_const_lv31_1));
    i_4_fu_784_p2 <= std_logic_vector(unsigned(i_i_reg_546) + unsigned(ap_const_lv32_1));
    i_5_fu_862_p2 <= std_logic_vector(unsigned(i1_i_reg_578) + unsigned(ap_const_lv32_1));
    i_fu_722_p2 <= std_logic_vector(unsigned(i_i_i_reg_514) + unsigned(ap_const_lv8_1));

    -- in_indices_TREADY assign process. --
    in_indices_TREADY_assign_proc : process(in_indices_TVALID, tmp_18_i_fu_827_p2, ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_pp1_stg0_fsm_18, tmp_4_i_fu_757_p2, ap_sig_bdd_397, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg0_fsm_15, tmp_6_i_fu_814_p2, ap_sig_cseq_ST_st48_fsm_17, ap_sig_bdd_690)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((in_indices_TVALID = ap_const_logic_0))) or ((ap_const_lv1_0 = tmp_4_i_fu_757_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_17) and not((ap_const_lv1_0 = tmp_6_i_fu_814_p2)) and not(ap_sig_bdd_690)) or ((tmp_18_i_fu_827_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)))) then 
            in_indices_TREADY <= ap_const_logic_1;
        else 
            in_indices_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- lnReturnA_address0 assign process. --
    lnReturnA_address0_assign_proc : process(ap_reg_ppiten_pp1_it28, ap_reg_ppiten_pp0_it30, tmp_17_i_fu_800_p1, tmp_30_i_fu_878_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30)) then 
            lnReturnA_address0 <= tmp_17_i_fu_800_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it28)) then 
            lnReturnA_address0 <= tmp_30_i_fu_878_p1(8 - 1 downto 0);
        else 
            lnReturnA_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- lnReturnA_ce0 assign process. --
    lnReturnA_ce0_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it28, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_bdd_397, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it30)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it28) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38))))))) then 
            lnReturnA_ce0 <= ap_const_logic_1;
        else 
            lnReturnA_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lnReturnA_d0 <= reg_700;

    -- lnReturnA_we0 assign process. --
    lnReturnA_we0_assign_proc : process(ap_sig_bdd_397, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it30, ap_reg_ppstg_tmp_4_i_reg_973_pp0_it29)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_sig_bdd_397 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_4_i_reg_973_pp0_it29)))) then 
            lnReturnA_we0 <= ap_const_logic_1;
        else 
            lnReturnA_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ln_returnA_out_c1_V_din <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it37;

    -- ln_returnA_out_c1_V_write assign process. --
    ln_returnA_out_c1_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            ln_returnA_out_c1_V_write <= ap_const_logic_1;
        else 
            ln_returnA_out_c1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ln_returnA_out_c2_V_din <= ap_reg_ppstg_lnReturnA_temp_reg_1053_pp1_it37;

    -- ln_returnA_out_c2_V_write assign process. --
    ln_returnA_out_c2_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            ln_returnA_out_c2_V_write <= ap_const_logic_1;
        else 
            ln_returnA_out_c2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ln_returnB_out_c1_V_din <= ap_reg_ppstg_reg_700_pp1_it37;

    -- ln_returnB_out_c1_V_write assign process. --
    ln_returnB_out_c1_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            ln_returnB_out_c1_V_write <= ap_const_logic_1;
        else 
            ln_returnB_out_c1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ln_returnB_out_c2_V_din <= ap_reg_ppstg_reg_700_pp1_it37;

    -- ln_returnB_out_c2_V_write assign process. --
    ln_returnB_out_c2_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            ln_returnB_out_c2_V_write <= ap_const_logic_1;
        else 
            ln_returnB_out_c2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- shift_reg_load_i_phi_fu_572_p4 assign process. --
    shift_reg_load_i_phi_fu_572_p4_assign_proc : process(shift_reg_load_i_reg_569, ap_reg_ppiten_pp1_it1, tmp_18_i_reg_1018, ap_sig_cseq_ST_pp1_stg0_fsm_18, shift_reg_load_i_shift_reg_lo_reg_1027)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = tmp_18_i_reg_1018))) then 
            shift_reg_load_i_phi_fu_572_p4 <= shift_reg_load_i_shift_reg_lo_reg_1027;
        else 
            shift_reg_load_i_phi_fu_572_p4 <= shift_reg_load_i_reg_569;
        end if; 
    end process;

    shift_reg_load_i_shift_reg_lo_fu_845_p3 <= 
        shift_reg_load_i_phi_fu_572_p4 when (tmp_19_i_fu_839_p2(0) = '1') else 
        shift_reg_load1_i_fu_244;
    sum_weight_out_c1_V_din <= reg_677;

    -- sum_weight_out_c1_V_write assign process. --
    sum_weight_out_c1_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            sum_weight_out_c1_V_write <= ap_const_logic_1;
        else 
            sum_weight_out_c1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    sum_weight_out_c2_V_din <= reg_677;

    -- sum_weight_out_c2_V_write assign process. --
    sum_weight_out_c2_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            sum_weight_out_c2_V_write <= ap_const_logic_1;
        else 
            sum_weight_out_c2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_i_fu_823_p1 <= in_indices_TDATA;
    tmp_14_i_fu_780_p1 <= in_indices_TDATA;
    tmp_16_i_fu_795_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_tmp_reg_977_pp0_it29) + unsigned(ap_const_lv31_7FFFFFFF));
    tmp_17_i_fu_800_p1 <= std_logic_vector(resize(unsigned(tmp_16_i_fu_795_p2),64));
    tmp_18_i_fu_827_p2 <= "1" when (signed(i1_i_reg_578) > signed(tmp_1_i_reg_967)) else "0";
    tmp_19_i_fu_839_p2 <= "1" when (i1_i_reg_578 = ap_const_lv32_1) else "0";
    tmp_1_i_fu_752_p2 <= std_logic_vector(unsigned(NUMBER_OF_DAYS) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_26_i_fu_853_p1 <= in_indices_TDATA;
    tmp_28_i_fu_857_p1 <= std_logic_vector(resize(unsigned(i1_i_reg_578),64));
    tmp_29_i_fu_873_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_tmp_43_reg_1022_pp1_it27) + unsigned(ap_const_lv31_7FFFFFFF));
    tmp_30_i_fu_878_p1 <= std_logic_vector(resize(unsigned(tmp_29_i_fu_873_p2),64));

    -- tmp_3_i_phi_fu_540_p4 assign process. --
    tmp_3_i_phi_fu_540_p4_assign_proc : process(tmp_3_i_reg_537, ap_reg_ppiten_pp0_it1, tmp_4_i_reg_973, ap_sig_cseq_ST_pp0_stg0_fsm_15, tmp_3_i_tmp_2_i_reg_982)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_15) and (ap_const_lv1_0 = tmp_4_i_reg_973))) then 
            tmp_3_i_phi_fu_540_p4 <= tmp_3_i_tmp_2_i_reg_982;
        else 
            tmp_3_i_phi_fu_540_p4 <= tmp_3_i_reg_537;
        end if; 
    end process;

    tmp_3_i_tmp_2_i_fu_772_p3 <= 
        tmp_3_i_phi_fu_540_p4 when (tmp_5_i_fu_766_p2(0) = '1') else 
        tmp_2_i_fu_240;
    tmp_42_fu_819_p1 <= column_index_i_reg_557(1 - 1 downto 0);
    tmp_43_fu_835_p1 <= i1_i_reg_578(31 - 1 downto 0);
    tmp_4_i_fu_757_p2 <= "1" when (signed(i_i_reg_546) > signed(tmp_1_i_reg_967)) else "0";
    tmp_5_i_fu_766_p2 <= "1" when (i_i_reg_546 = ap_const_lv32_1) else "0";
    tmp_6_i_fu_814_p2 <= "1" when (signed(column_index_cast_i_fu_810_p1) < signed(NUMBER_OF_INDICES)) else "0";
    tmp_85_i_i_fu_732_p2 <= "1" when (signed(i1_i_cast_i_fu_728_p1) < signed(NUMBER_OF_DAYS)) else "0";
    tmp_86_i_i_fu_717_p1 <= std_logic_vector(resize(unsigned(i_i_i_reg_514),64));
    tmp_87_i_i_fu_737_p1 <= std_logic_vector(resize(unsigned(i1_i_i_reg_526),64));
    tmp_fu_762_p1 <= i_i_reg_546(31 - 1 downto 0);
    tmp_i_fu_748_p1 <= in_indices_TDATA;
    weight_returnA_out_c1_V_din <= weight_returnA_temp_reg_1073;

    -- weight_returnA_out_c1_V_write assign process. --
    weight_returnA_out_c1_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnA_out_c1_V_write <= ap_const_logic_1;
        else 
            weight_returnA_out_c1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnA_out_c2_V_din <= weight_returnA_temp_reg_1073;

    -- weight_returnA_out_c2_V_write assign process. --
    weight_returnA_out_c2_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnA_out_c2_V_write <= ap_const_logic_1;
        else 
            weight_returnA_out_c2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnA_returnB_out_c1_s_din <= weight_returnA_returnB_temp_reg_1097;

    -- weight_returnA_returnB_out_c1_s_write assign process. --
    weight_returnA_returnB_out_c1_s_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnA_returnB_out_c1_s_write <= ap_const_logic_1;
        else 
            weight_returnA_returnB_out_c1_s_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnA_returnB_out_c2_s_din <= weight_returnA_returnB_temp_reg_1097;

    -- weight_returnA_returnB_out_c2_s_write assign process. --
    weight_returnA_returnB_out_c2_s_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnA_returnB_out_c2_s_write <= ap_const_logic_1;
        else 
            weight_returnA_returnB_out_c2_s_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnB_out_c1_V_din <= weight_returnB_temp_reg_1085;

    -- weight_returnB_out_c1_V_write assign process. --
    weight_returnB_out_c1_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnB_out_c1_V_write <= ap_const_logic_1;
        else 
            weight_returnB_out_c1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnB_out_c2_V_din <= weight_returnB_temp_reg_1085;

    -- weight_returnB_out_c2_V_write assign process. --
    weight_returnB_out_c2_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnB_out_c2_V_write <= ap_const_logic_1;
        else 
            weight_returnB_out_c2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnSquareA_out_c1_V_din <= weight_returnSquareA_temp_reg_1079;

    -- weight_returnSquareA_out_c1_V_write assign process. --
    weight_returnSquareA_out_c1_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnSquareA_out_c1_V_write <= ap_const_logic_1;
        else 
            weight_returnSquareA_out_c1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnSquareA_out_c2_V_din <= weight_returnSquareA_temp_reg_1079;

    -- weight_returnSquareA_out_c2_V_write assign process. --
    weight_returnSquareA_out_c2_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnSquareA_out_c2_V_write <= ap_const_logic_1;
        else 
            weight_returnSquareA_out_c2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnSquareB_out_c1_V_din <= weight_returnSquareB_temp_reg_1091;

    -- weight_returnSquareB_out_c1_V_write assign process. --
    weight_returnSquareB_out_c1_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if ((not((ap_const_lv1_0 = tmp_42_reg_1009)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnSquareB_out_c1_V_write <= ap_const_logic_1;
        else 
            weight_returnSquareB_out_c1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_returnSquareB_out_c2_V_din <= weight_returnSquareB_temp_reg_1091;

    -- weight_returnSquareB_out_c2_V_write assign process. --
    weight_returnSquareB_out_c2_V_write_assign_proc : process(ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, tmp_42_reg_1009, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38)
    begin
        if (((ap_const_lv1_0 = tmp_42_reg_1009) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))))) then 
            weight_returnSquareB_out_c2_V_write <= ap_const_logic_1;
        else 
            weight_returnSquareB_out_c2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- weight_rom_address0 assign process. --
    weight_rom_address0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st14_fsm_13, tmp_86_i_i_fu_717_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            weight_rom_address0 <= tmp_86_i_i_fu_717_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            weight_rom_address0 <= ap_const_lv8_0;
        else 
            weight_rom_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- weight_rom_address1 assign process. --
    weight_rom_address1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_st7_fsm_6, tmp_85_i_i_fu_732_p2, tmp_87_i_i_fu_737_p1, tmp_28_i_fu_857_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            weight_rom_address1 <= ap_const_lv8_1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            weight_rom_address1 <= tmp_28_i_fu_857_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_85_i_i_fu_732_p2))) then 
            weight_rom_address1 <= ap_const_lv8_0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_85_i_i_fu_732_p2)))) then 
            weight_rom_address1 <= tmp_87_i_i_fu_737_p1(8 - 1 downto 0);
        else 
            weight_rom_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- weight_rom_ce0 assign process. --
    weight_rom_ce0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_526, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526)) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            weight_rom_ce0 <= ap_const_logic_1;
        else 
            weight_rom_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- weight_rom_ce1 assign process. --
    weight_rom_ce1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_186, ap_reg_ppiten_pp1_it0, ap_sig_bdd_314, ap_reg_ppiten_pp1_it38, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_bdd_526, ap_sig_cseq_ST_st7_fsm_6, tmp_85_i_i_fu_732_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_85_i_i_fu_732_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_186 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_314 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it38)))) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_85_i_i_fu_732_p2)))) then 
            weight_rom_ce1 <= ap_const_logic_1;
        else 
            weight_rom_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- weight_rom_d0 assign process. --
    weight_rom_d0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, reg_670, ap_sig_cseq_ST_st6_fsm_5, tmp_88_i_i_reg_957, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            weight_rom_d0 <= tmp_88_i_i_reg_957;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            weight_rom_d0 <= reg_670;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            weight_rom_d0 <= ap_const_lv32_3F800000;
        else 
            weight_rom_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    weight_rom_d1 <= ap_const_lv32_3F800000;

    -- weight_rom_we0 assign process. --
    weight_rom_we0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_526, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526)) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            weight_rom_we0 <= ap_const_logic_1;
        else 
            weight_rom_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- weight_rom_we1 assign process. --
    weight_rom_we1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_526)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_526)))) then 
            weight_rom_we1 <= ap_const_logic_1;
        else 
            weight_rom_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
