

================================================================
== Vivado HLS Report for 'mmult_accel'
================================================================
* Date:           Thu Jul 28 18:51:02 2016

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        mmult_accel
* Solution:       solution
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   5.95|      5.15|        0.74|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1178|  1178|  1179|  1179|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |  256|  256|         2|          1|          1|   256|    yes   |
        |- Loop 2  |  256|  256|         2|          1|          1|   256|    yes   |
        |- Loop 3  |  662|  662|       153|          2|          1|   256|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 2, depth = 153


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 159
* Pipeline: 3
  Pipeline-0: II = 1, D = 2, States = { 2 3 }
  Pipeline-1: II = 1, D = 2, States = { 4 5 }
  Pipeline-2: II = 2, D = 153, States = { 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	2  / true
4 --> 
	6  / (exitcond_flatten8)
	5  / (!exitcond_flatten8)
5 --> 
	4  / true
6 --> 
	159  / (exitcond_flatten1)
	7  / (!exitcond_flatten1)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	6  / true
159 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_160 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(float* %in_A), !map !0

ST_1: stg_161 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(float* %in_B), !map !6

ST_1: stg_162 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(float* %out_C), !map !10

ST_1: stg_163 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @str) nounwind

ST_1: a_buf_0 [1/1] 0.00ns
:4  %a_buf_0 = alloca [64 x float], align 4

ST_1: a_buf_1 [1/1] 0.00ns
:5  %a_buf_1 = alloca [64 x float], align 4

ST_1: a_buf_2 [1/1] 0.00ns
:6  %a_buf_2 = alloca [64 x float], align 4

ST_1: a_buf_3 [1/1] 0.00ns
:7  %a_buf_3 = alloca [64 x float], align 4

ST_1: b_buf_0 [1/1] 0.00ns
:8  %b_buf_0 = alloca [64 x float], align 4

ST_1: b_buf_1 [1/1] 0.00ns
:9  %b_buf_1 = alloca [64 x float], align 4

ST_1: b_buf_2 [1/1] 0.00ns
:10  %b_buf_2 = alloca [64 x float], align 4

ST_1: b_buf_3 [1/1] 0.00ns
:11  %b_buf_3 = alloca [64 x float], align 4

ST_1: stg_172 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecLatency(i32 1, i32 65535, [1 x i8]* @p_str) nounwind

ST_1: stg_173 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecInterface(float* %in_A, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_174 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecInterface(float* %in_B, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_175 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecInterface(float* %out_C, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_176 [1/1] 1.57ns
:16  br label %.preheader5


 <State 2>: 5.15ns
ST_2: indvar_flatten [1/1] 0.00ns
.preheader5:0  %indvar_flatten = phi i9 [ 0, %0 ], [ %indvar_flatten_next, %1 ]

ST_2: i [1/1] 0.00ns
.preheader5:1  %i = phi i5 [ 0, %0 ], [ %i_mid2, %1 ]

ST_2: j [1/1] 0.00ns
.preheader5:2  %j = phi i5 [ 0, %0 ], [ %j_2, %1 ]

ST_2: exitcond_flatten [1/1] 2.03ns
.preheader5:3  %exitcond_flatten = icmp eq i9 %indvar_flatten, -256

ST_2: indvar_flatten_next [1/1] 1.84ns
.preheader5:4  %indvar_flatten_next = add i9 %indvar_flatten, 1

ST_2: stg_182 [1/1] 1.57ns
.preheader5:5  br i1 %exitcond_flatten, label %.preheader, label %.preheader5.preheader

ST_2: exitcond [1/1] 1.91ns
.preheader5.preheader:1  %exitcond = icmp eq i5 %j, -16

ST_2: j_mid2 [1/1] 1.37ns
.preheader5.preheader:2  %j_mid2 = select i1 %exitcond, i5 0, i5 %j

ST_2: i_s [1/1] 1.72ns
.preheader5.preheader:3  %i_s = add i5 %i, 1

ST_2: i_mid2 [1/1] 1.37ns
.preheader5.preheader:4  %i_mid2 = select i1 %exitcond, i5 %i_s, i5 %i

ST_2: tmp_3 [1/1] 0.00ns
.preheader5.preheader:5  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_2: arrayNo_cast [1/1] 0.00ns
.preheader5.preheader:8  %arrayNo_cast = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %j_mid2, i32 2, i32 4)

ST_2: tmp_4 [1/1] 0.00ns
.preheader5.preheader:9  %tmp_4 = trunc i5 %j_mid2 to i2

ST_2: stg_190 [1/1] 1.88ns
.preheader5.preheader:16  switch i3 %arrayNo_cast, label %branch3 [
    i3 0, label %branch0
    i3 1, label %branch1
    i3 2, label %branch2
  ]

ST_2: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_3) nounwind

ST_2: j_2 [1/1] 1.72ns
:1  %j_2 = add i5 %j_mid2, 1

ST_2: stg_193 [1/1] 0.00ns
:2  br label %.preheader5


 <State 3>: 4.25ns
ST_3: empty_6 [1/1] 0.00ns
.preheader5.preheader:0  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_3: stg_195 [1/1] 0.00ns
.preheader5.preheader:6  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: in_A_read [1/1] 1.86ns
.preheader5.preheader:7  %in_A_read = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %in_A)

ST_3: tmp [1/1] 0.00ns
.preheader5.preheader:10  %tmp = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_mid2, i2 %tmp_4)

ST_3: tmp_1 [1/1] 0.00ns
.preheader5.preheader:11  %tmp_1 = zext i7 %tmp to i64

ST_3: a_buf_0_addr [1/1] 0.00ns
.preheader5.preheader:12  %a_buf_0_addr = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_1

ST_3: a_buf_1_addr [1/1] 0.00ns
.preheader5.preheader:13  %a_buf_1_addr = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_1

ST_3: a_buf_2_addr [1/1] 0.00ns
.preheader5.preheader:14  %a_buf_2_addr = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_1

ST_3: a_buf_3_addr [1/1] 0.00ns
.preheader5.preheader:15  %a_buf_3_addr = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_1

ST_3: stg_203 [1/1] 2.39ns
branch2:0  store float %in_A_read, float* %a_buf_2_addr, align 4

ST_3: stg_204 [1/1] 0.00ns
branch2:1  br label %1

ST_3: stg_205 [1/1] 2.39ns
branch1:0  store float %in_A_read, float* %a_buf_1_addr, align 4

ST_3: stg_206 [1/1] 0.00ns
branch1:1  br label %1

ST_3: stg_207 [1/1] 2.39ns
branch0:0  store float %in_A_read, float* %a_buf_0_addr, align 4

ST_3: stg_208 [1/1] 0.00ns
branch0:1  br label %1

ST_3: stg_209 [1/1] 2.39ns
branch3:0  store float %in_A_read, float* %a_buf_3_addr, align 4

ST_3: stg_210 [1/1] 0.00ns
branch3:1  br label %1


 <State 4>: 5.15ns
ST_4: indvar_flatten6 [1/1] 0.00ns
.preheader:0  %indvar_flatten6 = phi i9 [ %indvar_flatten_next7, %2 ], [ 0, %.preheader5 ]

ST_4: i_1 [1/1] 0.00ns
.preheader:1  %i_1 = phi i5 [ %i_1_mid2, %2 ], [ 0, %.preheader5 ]

ST_4: j_1 [1/1] 0.00ns
.preheader:2  %j_1 = phi i5 [ %j_3, %2 ], [ 0, %.preheader5 ]

ST_4: exitcond_flatten8 [1/1] 2.03ns
.preheader:3  %exitcond_flatten8 = icmp eq i9 %indvar_flatten6, -256

ST_4: indvar_flatten_next7 [1/1] 1.84ns
.preheader:4  %indvar_flatten_next7 = add i9 %indvar_flatten6, 1

ST_4: stg_216 [1/1] 1.57ns
.preheader:5  br i1 %exitcond_flatten8, label %.preheader.i, label %.preheader4

ST_4: exitcond1 [1/1] 1.91ns
.preheader4:1  %exitcond1 = icmp eq i5 %j_1, -16

ST_4: j_1_mid2 [1/1] 1.37ns
.preheader4:2  %j_1_mid2 = select i1 %exitcond1, i5 0, i5 %j_1

ST_4: i_2 [1/1] 1.72ns
.preheader4:3  %i_2 = add i5 %i_1, 1

ST_4: i_1_mid2 [1/1] 1.37ns
.preheader4:4  %i_1_mid2 = select i1 %exitcond1, i5 %i_2, i5 %i_1

ST_4: arrayNo1_cast [1/1] 0.00ns
.preheader4:5  %arrayNo1_cast = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_1_mid2, i32 2, i32 4)

ST_4: tmp_7 [1/1] 0.00ns
.preheader4:6  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_4: tmp_20 [1/1] 0.00ns
.preheader4:10  %tmp_20 = trunc i5 %i_1_mid2 to i2

ST_4: stg_224 [1/1] 1.88ns
.preheader4:19  switch i3 %arrayNo1_cast, label %branch7 [
    i3 0, label %branch4
    i3 1, label %branch5
    i3 2, label %branch6
  ]

ST_4: empty_7 [1/1] 0.00ns
:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_7) nounwind

ST_4: j_3 [1/1] 1.72ns
:1  %j_3 = add i5 %j_1_mid2, 1

ST_4: stg_227 [1/1] 0.00ns
:2  br label %.preheader


 <State 5>: 4.25ns
ST_5: empty_8 [1/1] 0.00ns
.preheader4:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_5: stg_229 [1/1] 0.00ns
.preheader4:7  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_5: in_B_read [1/1] 1.86ns
.preheader4:8  %in_B_read = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %in_B)

ST_5: tmp_trn_cast [1/1] 0.00ns
.preheader4:9  %tmp_trn_cast = zext i5 %j_1_mid2 to i7

ST_5: tmp_5 [1/1] 0.00ns
.preheader4:11  %tmp_5 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_20, i4 0)

ST_5: p_addr_cast [1/1] 0.00ns
.preheader4:12  %p_addr_cast = zext i6 %tmp_5 to i7

ST_5: p_addr1 [1/1] 1.72ns
.preheader4:13  %p_addr1 = add i7 %p_addr_cast, %tmp_trn_cast

ST_5: tmp_6 [1/1] 0.00ns
.preheader4:14  %tmp_6 = zext i7 %p_addr1 to i64

ST_5: b_buf_0_addr [1/1] 0.00ns
.preheader4:15  %b_buf_0_addr = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_6

ST_5: b_buf_1_addr [1/1] 0.00ns
.preheader4:16  %b_buf_1_addr = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_6

ST_5: b_buf_2_addr [1/1] 0.00ns
.preheader4:17  %b_buf_2_addr = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_6

ST_5: b_buf_3_addr [1/1] 0.00ns
.preheader4:18  %b_buf_3_addr = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_6

ST_5: stg_240 [1/1] 2.39ns
branch6:0  store float %in_B_read, float* %b_buf_2_addr, align 4

ST_5: stg_241 [1/1] 0.00ns
branch6:1  br label %2

ST_5: stg_242 [1/1] 2.39ns
branch5:0  store float %in_B_read, float* %b_buf_1_addr, align 4

ST_5: stg_243 [1/1] 0.00ns
branch5:1  br label %2

ST_5: stg_244 [1/1] 2.39ns
branch4:0  store float %in_B_read, float* %b_buf_0_addr, align 4

ST_5: stg_245 [1/1] 0.00ns
branch4:1  br label %2

ST_5: stg_246 [1/1] 2.39ns
branch7:0  store float %in_B_read, float* %b_buf_3_addr, align 4

ST_5: stg_247 [1/1] 0.00ns
branch7:1  br label %2


 <State 6>: 3.28ns
ST_6: indvar_flatten1 [1/1] 0.00ns
.preheader.i:0  %indvar_flatten1 = phi i9 [ %indvar_flatten_next1, %.preheader179 ], [ 0, %.preheader ]

ST_6: index_a_0_i [1/1] 0.00ns
.preheader.i:1  %index_a_0_i = phi i5 [ %index_a_0_i_mid2, %.preheader179 ], [ 0, %.preheader ]

ST_6: index_b_0_i [1/1] 0.00ns
.preheader.i:2  %index_b_0_i = phi i5 [ %index_b, %.preheader179 ], [ 0, %.preheader ]

ST_6: exitcond_flatten1 [1/1] 2.03ns
.preheader.i:3  %exitcond_flatten1 = icmp eq i9 %indvar_flatten1, -256

ST_6: indvar_flatten_next1 [1/1] 1.84ns
.preheader.i:4  %indvar_flatten_next1 = add i9 %indvar_flatten1, 1

ST_6: stg_253 [1/1] 0.00ns
.preheader.i:5  br i1 %exitcond_flatten1, label %mmult_kernel.exit, label %.preheader179

ST_6: exitcond1_i [1/1] 1.91ns
.preheader179:1  %exitcond1_i = icmp eq i5 %index_b_0_i, -16

ST_6: index_b_0_i_mid2 [1/1] 1.37ns
.preheader179:2  %index_b_0_i_mid2 = select i1 %exitcond1_i, i5 0, i5 %index_b_0_i

ST_6: index_a [1/1] 1.72ns
.preheader179:3  %index_a = add i5 %index_a_0_i, 1

ST_6: index_a_0_i_mid2 [1/1] 1.37ns
.preheader179:4  %index_a_0_i_mid2 = select i1 %exitcond1_i, i5 %index_a, i5 %index_a_0_i


 <State 7>: 4.11ns
ST_7: tmp_8 [1/1] 0.00ns
.preheader179:5  %tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %index_a_0_i_mid2, i2 0)

ST_7: tmp_9 [1/1] 0.00ns
.preheader179:6  %tmp_9 = zext i7 %tmp_8 to i64

ST_7: a_buf_0_addr_1 [1/1] 0.00ns
.preheader179:7  %a_buf_0_addr_1 = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_9

ST_7: a_buf_0_load [2/2] 2.39ns
.preheader179:8  %a_buf_0_load = load float* %a_buf_0_addr_1, align 16

ST_7: tmp_s [1/1] 0.00ns
.preheader179:9  %tmp_s = or i7 %tmp_8, 1

ST_7: p_addr2 [1/1] 0.00ns
.preheader179:10  %p_addr2 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_s)

ST_7: tmp_10 [1/1] 0.00ns
.preheader179:11  %tmp_10 = zext i32 %p_addr2 to i64

ST_7: a_buf_0_addr_2 [1/1] 0.00ns
.preheader179:12  %a_buf_0_addr_2 = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_10

ST_7: a_buf_0_load_1 [2/2] 2.39ns
.preheader179:13  %a_buf_0_load_1 = load float* %a_buf_0_addr_2, align 4

ST_7: a_buf_1_addr_1 [1/1] 0.00ns
.preheader179:24  %a_buf_1_addr_1 = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_9

ST_7: a_buf_1_load [2/2] 2.39ns
.preheader179:25  %a_buf_1_load = load float* %a_buf_1_addr_1, align 16

ST_7: a_buf_1_addr_2 [1/1] 0.00ns
.preheader179:26  %a_buf_1_addr_2 = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_10

ST_7: a_buf_1_load_1 [2/2] 2.39ns
.preheader179:27  %a_buf_1_load_1 = load float* %a_buf_1_addr_2, align 4

ST_7: a_buf_2_addr_1 [1/1] 0.00ns
.preheader179:32  %a_buf_2_addr_1 = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_9

ST_7: a_buf_2_load [2/2] 2.39ns
.preheader179:33  %a_buf_2_load = load float* %a_buf_2_addr_1, align 16

ST_7: a_buf_2_addr_2 [1/1] 0.00ns
.preheader179:34  %a_buf_2_addr_2 = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_10

ST_7: a_buf_2_load_1 [2/2] 2.39ns
.preheader179:35  %a_buf_2_load_1 = load float* %a_buf_2_addr_2, align 4

ST_7: a_buf_3_addr_1 [1/1] 0.00ns
.preheader179:40  %a_buf_3_addr_1 = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_9

ST_7: a_buf_3_load [2/2] 2.39ns
.preheader179:41  %a_buf_3_load = load float* %a_buf_3_addr_1, align 16

ST_7: a_buf_3_addr_2 [1/1] 0.00ns
.preheader179:42  %a_buf_3_addr_2 = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_10

ST_7: a_buf_3_load_1 [2/2] 2.39ns
.preheader179:43  %a_buf_3_load_1 = load float* %a_buf_3_addr_2, align 4

ST_7: tmp_4_trn_cast [1/1] 0.00ns
.preheader179:51  %tmp_4_trn_cast = zext i5 %index_b_0_i_mid2 to i6

ST_7: tmp_15 [1/1] 0.00ns
.preheader179:52  %tmp_15 = zext i5 %index_b_0_i_mid2 to i64

ST_7: b_buf_0_addr_1 [1/1] 0.00ns
.preheader179:53  %b_buf_0_addr_1 = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_15

ST_7: b_buf_0_load [2/2] 2.39ns
.preheader179:54  %b_buf_0_load = load float* %b_buf_0_addr_1, align 4

ST_7: p_addr5 [1/1] 1.72ns
.preheader179:57  %p_addr5 = add i6 %tmp_4_trn_cast, 16

ST_7: tmp_16 [1/1] 0.00ns
.preheader179:58  %tmp_16 = zext i6 %p_addr5 to i64

ST_7: b_buf_0_addr_2 [1/1] 0.00ns
.preheader179:59  %b_buf_0_addr_2 = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_16

ST_7: b_buf_0_load_1 [2/2] 2.39ns
.preheader179:60  %b_buf_0_load_1 = load float* %b_buf_0_addr_2, align 4

ST_7: b_buf_1_addr_1 [1/1] 0.00ns
.preheader179:75  %b_buf_1_addr_1 = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_15

ST_7: b_buf_1_load [2/2] 2.39ns
.preheader179:76  %b_buf_1_load = load float* %b_buf_1_addr_1, align 4

ST_7: b_buf_1_addr_2 [1/1] 0.00ns
.preheader179:79  %b_buf_1_addr_2 = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_16

ST_7: b_buf_1_load_1 [2/2] 2.39ns
.preheader179:80  %b_buf_1_load_1 = load float* %b_buf_1_addr_2, align 4

ST_7: b_buf_2_addr_1 [1/1] 0.00ns
.preheader179:91  %b_buf_2_addr_1 = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_15

ST_7: b_buf_2_load [2/2] 2.39ns
.preheader179:92  %b_buf_2_load = load float* %b_buf_2_addr_1, align 4

ST_7: b_buf_2_addr_2 [1/1] 0.00ns
.preheader179:95  %b_buf_2_addr_2 = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_16

ST_7: b_buf_2_load_1 [2/2] 2.39ns
.preheader179:96  %b_buf_2_load_1 = load float* %b_buf_2_addr_2, align 4

ST_7: b_buf_3_addr_1 [1/1] 0.00ns
.preheader179:107  %b_buf_3_addr_1 = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_15

ST_7: b_buf_3_load [2/2] 2.39ns
.preheader179:108  %b_buf_3_load = load float* %b_buf_3_addr_1, align 4

ST_7: b_buf_3_addr_2 [1/1] 0.00ns
.preheader179:111  %b_buf_3_addr_2 = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_16

ST_7: b_buf_3_load_1 [2/2] 2.39ns
.preheader179:112  %b_buf_3_load_1 = load float* %b_buf_3_addr_2, align 4

ST_7: index_b [1/1] 1.72ns
.preheader179:125  %index_b = add i5 %index_b_0_i_mid2, 1


 <State 8>: 4.11ns
ST_8: a_buf_0_load [1/2] 2.39ns
.preheader179:8  %a_buf_0_load = load float* %a_buf_0_addr_1, align 16

ST_8: a_buf_0_load_1 [1/2] 2.39ns
.preheader179:13  %a_buf_0_load_1 = load float* %a_buf_0_addr_2, align 4

ST_8: tmp_11 [1/1] 0.00ns
.preheader179:14  %tmp_11 = or i7 %tmp_8, 2

ST_8: p_addr3 [1/1] 0.00ns
.preheader179:15  %p_addr3 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_11)

ST_8: tmp_12 [1/1] 0.00ns
.preheader179:16  %tmp_12 = zext i32 %p_addr3 to i64

ST_8: a_buf_0_addr_3 [1/1] 0.00ns
.preheader179:17  %a_buf_0_addr_3 = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_12

ST_8: a_buf_0_load_2 [2/2] 2.39ns
.preheader179:18  %a_buf_0_load_2 = load float* %a_buf_0_addr_3, align 8

ST_8: tmp_13 [1/1] 0.00ns
.preheader179:19  %tmp_13 = or i7 %tmp_8, 3

ST_8: p_addr4 [1/1] 0.00ns
.preheader179:20  %p_addr4 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_13)

ST_8: tmp_14 [1/1] 0.00ns
.preheader179:21  %tmp_14 = zext i32 %p_addr4 to i64

ST_8: a_buf_0_addr_4 [1/1] 0.00ns
.preheader179:22  %a_buf_0_addr_4 = getelementptr [64 x float]* %a_buf_0, i64 0, i64 %tmp_14

ST_8: a_buf_0_load_3 [2/2] 2.39ns
.preheader179:23  %a_buf_0_load_3 = load float* %a_buf_0_addr_4, align 4

ST_8: a_buf_1_load [1/2] 2.39ns
.preheader179:25  %a_buf_1_load = load float* %a_buf_1_addr_1, align 16

ST_8: a_buf_1_load_1 [1/2] 2.39ns
.preheader179:27  %a_buf_1_load_1 = load float* %a_buf_1_addr_2, align 4

ST_8: a_buf_1_addr_3 [1/1] 0.00ns
.preheader179:28  %a_buf_1_addr_3 = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_12

ST_8: a_buf_1_load_2 [2/2] 2.39ns
.preheader179:29  %a_buf_1_load_2 = load float* %a_buf_1_addr_3, align 8

ST_8: a_buf_1_addr_4 [1/1] 0.00ns
.preheader179:30  %a_buf_1_addr_4 = getelementptr [64 x float]* %a_buf_1, i64 0, i64 %tmp_14

ST_8: a_buf_1_load_3 [2/2] 2.39ns
.preheader179:31  %a_buf_1_load_3 = load float* %a_buf_1_addr_4, align 4

ST_8: a_buf_2_load [1/2] 2.39ns
.preheader179:33  %a_buf_2_load = load float* %a_buf_2_addr_1, align 16

ST_8: a_buf_2_load_1 [1/2] 2.39ns
.preheader179:35  %a_buf_2_load_1 = load float* %a_buf_2_addr_2, align 4

ST_8: a_buf_2_addr_3 [1/1] 0.00ns
.preheader179:36  %a_buf_2_addr_3 = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_12

ST_8: a_buf_2_load_2 [2/2] 2.39ns
.preheader179:37  %a_buf_2_load_2 = load float* %a_buf_2_addr_3, align 8

ST_8: a_buf_2_addr_4 [1/1] 0.00ns
.preheader179:38  %a_buf_2_addr_4 = getelementptr [64 x float]* %a_buf_2, i64 0, i64 %tmp_14

ST_8: a_buf_2_load_3 [2/2] 2.39ns
.preheader179:39  %a_buf_2_load_3 = load float* %a_buf_2_addr_4, align 4

ST_8: a_buf_3_load [1/2] 2.39ns
.preheader179:41  %a_buf_3_load = load float* %a_buf_3_addr_1, align 16

ST_8: a_buf_3_load_1 [1/2] 2.39ns
.preheader179:43  %a_buf_3_load_1 = load float* %a_buf_3_addr_2, align 4

ST_8: a_buf_3_addr_3 [1/1] 0.00ns
.preheader179:44  %a_buf_3_addr_3 = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_12

ST_8: a_buf_3_load_2 [2/2] 2.39ns
.preheader179:45  %a_buf_3_load_2 = load float* %a_buf_3_addr_3, align 8

ST_8: a_buf_3_addr_4 [1/1] 0.00ns
.preheader179:46  %a_buf_3_addr_4 = getelementptr [64 x float]* %a_buf_3, i64 0, i64 %tmp_14

ST_8: a_buf_3_load_3 [2/2] 2.39ns
.preheader179:47  %a_buf_3_load_3 = load float* %a_buf_3_addr_4, align 4

ST_8: tmp_4_trn_cast1 [1/1] 0.00ns
.preheader179:50  %tmp_4_trn_cast1 = zext i5 %index_b_0_i_mid2 to i7

ST_8: b_buf_0_load [1/2] 2.39ns
.preheader179:54  %b_buf_0_load = load float* %b_buf_0_addr_1, align 4

ST_8: b_buf_0_load_1 [1/2] 2.39ns
.preheader179:60  %b_buf_0_load_1 = load float* %b_buf_0_addr_2, align 4

ST_8: p_addr6 [1/1] 0.00ns
.preheader179:63  %p_addr6 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 1, i5 %index_b_0_i_mid2)

ST_8: tmp_17 [1/1] 0.00ns
.preheader179:64  %tmp_17 = zext i32 %p_addr6 to i64

ST_8: b_buf_0_addr_3 [1/1] 0.00ns
.preheader179:65  %b_buf_0_addr_3 = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_17

ST_8: b_buf_0_load_2 [2/2] 2.39ns
.preheader179:66  %b_buf_0_load_2 = load float* %b_buf_0_addr_3, align 4

ST_8: p_addr7 [1/1] 1.72ns
.preheader179:69  %p_addr7 = add i7 %tmp_4_trn_cast1, 48

ST_8: tmp_18 [1/1] 0.00ns
.preheader179:70  %tmp_18 = zext i7 %p_addr7 to i64

ST_8: b_buf_0_addr_4 [1/1] 0.00ns
.preheader179:71  %b_buf_0_addr_4 = getelementptr [64 x float]* %b_buf_0, i64 0, i64 %tmp_18

ST_8: b_buf_0_load_3 [2/2] 2.39ns
.preheader179:72  %b_buf_0_load_3 = load float* %b_buf_0_addr_4, align 4

ST_8: b_buf_1_load [1/2] 2.39ns
.preheader179:76  %b_buf_1_load = load float* %b_buf_1_addr_1, align 4

ST_8: b_buf_1_load_1 [1/2] 2.39ns
.preheader179:80  %b_buf_1_load_1 = load float* %b_buf_1_addr_2, align 4

ST_8: b_buf_1_addr_3 [1/1] 0.00ns
.preheader179:83  %b_buf_1_addr_3 = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_17

ST_8: b_buf_1_load_2 [2/2] 2.39ns
.preheader179:84  %b_buf_1_load_2 = load float* %b_buf_1_addr_3, align 4

ST_8: b_buf_1_addr_4 [1/1] 0.00ns
.preheader179:87  %b_buf_1_addr_4 = getelementptr [64 x float]* %b_buf_1, i64 0, i64 %tmp_18

ST_8: b_buf_1_load_3 [2/2] 2.39ns
.preheader179:88  %b_buf_1_load_3 = load float* %b_buf_1_addr_4, align 4

ST_8: b_buf_2_load [1/2] 2.39ns
.preheader179:92  %b_buf_2_load = load float* %b_buf_2_addr_1, align 4

ST_8: b_buf_2_load_1 [1/2] 2.39ns
.preheader179:96  %b_buf_2_load_1 = load float* %b_buf_2_addr_2, align 4

ST_8: b_buf_2_addr_3 [1/1] 0.00ns
.preheader179:99  %b_buf_2_addr_3 = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_17

ST_8: b_buf_2_load_2 [2/2] 2.39ns
.preheader179:100  %b_buf_2_load_2 = load float* %b_buf_2_addr_3, align 4

ST_8: b_buf_2_addr_4 [1/1] 0.00ns
.preheader179:103  %b_buf_2_addr_4 = getelementptr [64 x float]* %b_buf_2, i64 0, i64 %tmp_18

ST_8: b_buf_2_load_3 [2/2] 2.39ns
.preheader179:104  %b_buf_2_load_3 = load float* %b_buf_2_addr_4, align 4

ST_8: b_buf_3_load [1/2] 2.39ns
.preheader179:108  %b_buf_3_load = load float* %b_buf_3_addr_1, align 4

ST_8: b_buf_3_load_1 [1/2] 2.39ns
.preheader179:112  %b_buf_3_load_1 = load float* %b_buf_3_addr_2, align 4

ST_8: b_buf_3_addr_3 [1/1] 0.00ns
.preheader179:115  %b_buf_3_addr_3 = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_17

ST_8: b_buf_3_load_2 [2/2] 2.39ns
.preheader179:116  %b_buf_3_load_2 = load float* %b_buf_3_addr_3, align 4

ST_8: b_buf_3_addr_4 [1/1] 0.00ns
.preheader179:119  %b_buf_3_addr_4 = getelementptr [64 x float]* %b_buf_3, i64 0, i64 %tmp_18

ST_8: b_buf_3_load_3 [2/2] 2.39ns
.preheader179:120  %b_buf_3_load_3 = load float* %b_buf_3_addr_4, align 4


 <State 9>: 4.35ns
ST_9: a_buf_0_load_2 [1/2] 2.39ns
.preheader179:18  %a_buf_0_load_2 = load float* %a_buf_0_addr_3, align 8

ST_9: a_buf_0_load_3 [1/2] 2.39ns
.preheader179:23  %a_buf_0_load_3 = load float* %a_buf_0_addr_4, align 4

ST_9: a_buf_1_load_2 [1/2] 2.39ns
.preheader179:29  %a_buf_1_load_2 = load float* %a_buf_1_addr_3, align 8

ST_9: a_buf_1_load_3 [1/2] 2.39ns
.preheader179:31  %a_buf_1_load_3 = load float* %a_buf_1_addr_4, align 4

ST_9: a_buf_2_load_2 [1/2] 2.39ns
.preheader179:37  %a_buf_2_load_2 = load float* %a_buf_2_addr_3, align 8

ST_9: a_buf_2_load_3 [1/2] 2.39ns
.preheader179:39  %a_buf_2_load_3 = load float* %a_buf_2_addr_4, align 4

ST_9: a_buf_3_load_2 [1/2] 2.39ns
.preheader179:45  %a_buf_3_load_2 = load float* %a_buf_3_addr_3, align 8

ST_9: a_buf_3_load_3 [1/2] 2.39ns
.preheader179:47  %a_buf_3_load_3 = load float* %a_buf_3_addr_4, align 4

ST_9: product_term [5/5] 4.35ns
.preheader179:55  %product_term = fmul float %a_buf_0_load, %b_buf_0_load

ST_9: product_term_1 [5/5] 4.35ns
.preheader179:61  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1

ST_9: b_buf_0_load_2 [1/2] 2.39ns
.preheader179:66  %b_buf_0_load_2 = load float* %b_buf_0_addr_3, align 4

ST_9: b_buf_0_load_3 [1/2] 2.39ns
.preheader179:72  %b_buf_0_load_3 = load float* %b_buf_0_addr_4, align 4

ST_9: product_term_4 [5/5] 4.35ns
.preheader179:77  %product_term_4 = fmul float %a_buf_1_load, %b_buf_1_load

ST_9: product_term_5 [5/5] 4.35ns
.preheader179:81  %product_term_5 = fmul float %a_buf_1_load_1, %b_buf_1_load_1

ST_9: b_buf_1_load_2 [1/2] 2.39ns
.preheader179:84  %b_buf_1_load_2 = load float* %b_buf_1_addr_3, align 4

ST_9: b_buf_1_load_3 [1/2] 2.39ns
.preheader179:88  %b_buf_1_load_3 = load float* %b_buf_1_addr_4, align 4

ST_9: product_term_8 [5/5] 4.35ns
.preheader179:93  %product_term_8 = fmul float %a_buf_2_load, %b_buf_2_load

ST_9: product_term_9 [5/5] 4.35ns
.preheader179:97  %product_term_9 = fmul float %a_buf_2_load_1, %b_buf_2_load_1

ST_9: b_buf_2_load_2 [1/2] 2.39ns
.preheader179:100  %b_buf_2_load_2 = load float* %b_buf_2_addr_3, align 4

ST_9: b_buf_2_load_3 [1/2] 2.39ns
.preheader179:104  %b_buf_2_load_3 = load float* %b_buf_2_addr_4, align 4

ST_9: product_term_11 [5/5] 4.35ns
.preheader179:109  %product_term_11 = fmul float %a_buf_3_load, %b_buf_3_load

ST_9: product_term_12 [5/5] 4.35ns
.preheader179:113  %product_term_12 = fmul float %a_buf_3_load_1, %b_buf_3_load_1

ST_9: b_buf_3_load_2 [1/2] 2.39ns
.preheader179:116  %b_buf_3_load_2 = load float* %b_buf_3_addr_3, align 4

ST_9: b_buf_3_load_3 [1/2] 2.39ns
.preheader179:120  %b_buf_3_load_3 = load float* %b_buf_3_addr_4, align 4


 <State 10>: 4.35ns
ST_10: product_term [4/5] 4.35ns
.preheader179:55  %product_term = fmul float %a_buf_0_load, %b_buf_0_load

ST_10: product_term_1 [4/5] 4.35ns
.preheader179:61  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1

ST_10: product_term_2 [5/5] 4.35ns
.preheader179:67  %product_term_2 = fmul float %a_buf_0_load_2, %b_buf_0_load_2

ST_10: product_term_3 [5/5] 4.35ns
.preheader179:73  %product_term_3 = fmul float %a_buf_0_load_3, %b_buf_0_load_3

ST_10: product_term_4 [4/5] 4.35ns
.preheader179:77  %product_term_4 = fmul float %a_buf_1_load, %b_buf_1_load

ST_10: product_term_5 [4/5] 4.35ns
.preheader179:81  %product_term_5 = fmul float %a_buf_1_load_1, %b_buf_1_load_1

ST_10: product_term_6 [5/5] 4.35ns
.preheader179:85  %product_term_6 = fmul float %a_buf_1_load_2, %b_buf_1_load_2

ST_10: product_term_7 [5/5] 4.35ns
.preheader179:89  %product_term_7 = fmul float %a_buf_1_load_3, %b_buf_1_load_3

ST_10: product_term_8 [4/5] 4.35ns
.preheader179:93  %product_term_8 = fmul float %a_buf_2_load, %b_buf_2_load

ST_10: product_term_9 [4/5] 4.35ns
.preheader179:97  %product_term_9 = fmul float %a_buf_2_load_1, %b_buf_2_load_1

ST_10: product_term_s [5/5] 4.35ns
.preheader179:101  %product_term_s = fmul float %a_buf_2_load_2, %b_buf_2_load_2

ST_10: product_term_10 [5/5] 4.35ns
.preheader179:105  %product_term_10 = fmul float %a_buf_2_load_3, %b_buf_2_load_3

ST_10: product_term_11 [4/5] 4.35ns
.preheader179:109  %product_term_11 = fmul float %a_buf_3_load, %b_buf_3_load

ST_10: product_term_12 [4/5] 4.35ns
.preheader179:113  %product_term_12 = fmul float %a_buf_3_load_1, %b_buf_3_load_1

ST_10: product_term_13 [5/5] 4.35ns
.preheader179:117  %product_term_13 = fmul float %a_buf_3_load_2, %b_buf_3_load_2

ST_10: product_term_14 [5/5] 4.35ns
.preheader179:121  %product_term_14 = fmul float %a_buf_3_load_3, %b_buf_3_load_3


 <State 11>: 4.35ns
ST_11: product_term [3/5] 4.35ns
.preheader179:55  %product_term = fmul float %a_buf_0_load, %b_buf_0_load

ST_11: product_term_1 [3/5] 4.35ns
.preheader179:61  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1

ST_11: product_term_2 [4/5] 4.35ns
.preheader179:67  %product_term_2 = fmul float %a_buf_0_load_2, %b_buf_0_load_2

ST_11: product_term_3 [4/5] 4.35ns
.preheader179:73  %product_term_3 = fmul float %a_buf_0_load_3, %b_buf_0_load_3

ST_11: product_term_4 [3/5] 4.35ns
.preheader179:77  %product_term_4 = fmul float %a_buf_1_load, %b_buf_1_load

ST_11: product_term_5 [3/5] 4.35ns
.preheader179:81  %product_term_5 = fmul float %a_buf_1_load_1, %b_buf_1_load_1

ST_11: product_term_6 [4/5] 4.35ns
.preheader179:85  %product_term_6 = fmul float %a_buf_1_load_2, %b_buf_1_load_2

ST_11: product_term_7 [4/5] 4.35ns
.preheader179:89  %product_term_7 = fmul float %a_buf_1_load_3, %b_buf_1_load_3

ST_11: product_term_8 [3/5] 4.35ns
.preheader179:93  %product_term_8 = fmul float %a_buf_2_load, %b_buf_2_load

ST_11: product_term_9 [3/5] 4.35ns
.preheader179:97  %product_term_9 = fmul float %a_buf_2_load_1, %b_buf_2_load_1

ST_11: product_term_s [4/5] 4.35ns
.preheader179:101  %product_term_s = fmul float %a_buf_2_load_2, %b_buf_2_load_2

ST_11: product_term_10 [4/5] 4.35ns
.preheader179:105  %product_term_10 = fmul float %a_buf_2_load_3, %b_buf_2_load_3

ST_11: product_term_11 [3/5] 4.35ns
.preheader179:109  %product_term_11 = fmul float %a_buf_3_load, %b_buf_3_load

ST_11: product_term_12 [3/5] 4.35ns
.preheader179:113  %product_term_12 = fmul float %a_buf_3_load_1, %b_buf_3_load_1

ST_11: product_term_13 [4/5] 4.35ns
.preheader179:117  %product_term_13 = fmul float %a_buf_3_load_2, %b_buf_3_load_2

ST_11: product_term_14 [4/5] 4.35ns
.preheader179:121  %product_term_14 = fmul float %a_buf_3_load_3, %b_buf_3_load_3


 <State 12>: 4.35ns
ST_12: product_term [2/5] 4.35ns
.preheader179:55  %product_term = fmul float %a_buf_0_load, %b_buf_0_load

ST_12: product_term_1 [2/5] 4.35ns
.preheader179:61  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1

ST_12: product_term_2 [3/5] 4.35ns
.preheader179:67  %product_term_2 = fmul float %a_buf_0_load_2, %b_buf_0_load_2

ST_12: product_term_3 [3/5] 4.35ns
.preheader179:73  %product_term_3 = fmul float %a_buf_0_load_3, %b_buf_0_load_3

ST_12: product_term_4 [2/5] 4.35ns
.preheader179:77  %product_term_4 = fmul float %a_buf_1_load, %b_buf_1_load

ST_12: product_term_5 [2/5] 4.35ns
.preheader179:81  %product_term_5 = fmul float %a_buf_1_load_1, %b_buf_1_load_1

ST_12: product_term_6 [3/5] 4.35ns
.preheader179:85  %product_term_6 = fmul float %a_buf_1_load_2, %b_buf_1_load_2

ST_12: product_term_7 [3/5] 4.35ns
.preheader179:89  %product_term_7 = fmul float %a_buf_1_load_3, %b_buf_1_load_3

ST_12: product_term_8 [2/5] 4.35ns
.preheader179:93  %product_term_8 = fmul float %a_buf_2_load, %b_buf_2_load

ST_12: product_term_9 [2/5] 4.35ns
.preheader179:97  %product_term_9 = fmul float %a_buf_2_load_1, %b_buf_2_load_1

ST_12: product_term_s [3/5] 4.35ns
.preheader179:101  %product_term_s = fmul float %a_buf_2_load_2, %b_buf_2_load_2

ST_12: product_term_10 [3/5] 4.35ns
.preheader179:105  %product_term_10 = fmul float %a_buf_2_load_3, %b_buf_2_load_3

ST_12: product_term_11 [2/5] 4.35ns
.preheader179:109  %product_term_11 = fmul float %a_buf_3_load, %b_buf_3_load

ST_12: product_term_12 [2/5] 4.35ns
.preheader179:113  %product_term_12 = fmul float %a_buf_3_load_1, %b_buf_3_load_1

ST_12: product_term_13 [3/5] 4.35ns
.preheader179:117  %product_term_13 = fmul float %a_buf_3_load_2, %b_buf_3_load_2

ST_12: product_term_14 [3/5] 4.35ns
.preheader179:121  %product_term_14 = fmul float %a_buf_3_load_3, %b_buf_3_load_3


 <State 13>: 4.35ns
ST_13: product_term [1/5] 4.35ns
.preheader179:55  %product_term = fmul float %a_buf_0_load, %b_buf_0_load

ST_13: product_term_1 [1/5] 4.35ns
.preheader179:61  %product_term_1 = fmul float %a_buf_0_load_1, %b_buf_0_load_1

ST_13: product_term_2 [2/5] 4.35ns
.preheader179:67  %product_term_2 = fmul float %a_buf_0_load_2, %b_buf_0_load_2

ST_13: product_term_3 [2/5] 4.35ns
.preheader179:73  %product_term_3 = fmul float %a_buf_0_load_3, %b_buf_0_load_3

ST_13: product_term_4 [1/5] 4.35ns
.preheader179:77  %product_term_4 = fmul float %a_buf_1_load, %b_buf_1_load

ST_13: product_term_5 [1/5] 4.35ns
.preheader179:81  %product_term_5 = fmul float %a_buf_1_load_1, %b_buf_1_load_1

ST_13: product_term_6 [2/5] 4.35ns
.preheader179:85  %product_term_6 = fmul float %a_buf_1_load_2, %b_buf_1_load_2

ST_13: product_term_7 [2/5] 4.35ns
.preheader179:89  %product_term_7 = fmul float %a_buf_1_load_3, %b_buf_1_load_3

ST_13: product_term_8 [1/5] 4.35ns
.preheader179:93  %product_term_8 = fmul float %a_buf_2_load, %b_buf_2_load

ST_13: product_term_9 [1/5] 4.35ns
.preheader179:97  %product_term_9 = fmul float %a_buf_2_load_1, %b_buf_2_load_1

ST_13: product_term_s [2/5] 4.35ns
.preheader179:101  %product_term_s = fmul float %a_buf_2_load_2, %b_buf_2_load_2

ST_13: product_term_10 [2/5] 4.35ns
.preheader179:105  %product_term_10 = fmul float %a_buf_2_load_3, %b_buf_2_load_3

ST_13: product_term_11 [1/5] 4.35ns
.preheader179:109  %product_term_11 = fmul float %a_buf_3_load, %b_buf_3_load

ST_13: product_term_12 [1/5] 4.35ns
.preheader179:113  %product_term_12 = fmul float %a_buf_3_load_1, %b_buf_3_load_1

ST_13: product_term_13 [2/5] 4.35ns
.preheader179:117  %product_term_13 = fmul float %a_buf_3_load_2, %b_buf_3_load_2

ST_13: product_term_14 [2/5] 4.35ns
.preheader179:121  %product_term_14 = fmul float %a_buf_3_load_3, %b_buf_3_load_3


 <State 14>: 4.35ns
ST_14: result [9/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00

ST_14: product_term_2 [1/5] 4.35ns
.preheader179:67  %product_term_2 = fmul float %a_buf_0_load_2, %b_buf_0_load_2

ST_14: product_term_3 [1/5] 4.35ns
.preheader179:73  %product_term_3 = fmul float %a_buf_0_load_3, %b_buf_0_load_3

ST_14: product_term_6 [1/5] 4.35ns
.preheader179:85  %product_term_6 = fmul float %a_buf_1_load_2, %b_buf_1_load_2

ST_14: product_term_7 [1/5] 4.35ns
.preheader179:89  %product_term_7 = fmul float %a_buf_1_load_3, %b_buf_1_load_3

ST_14: product_term_s [1/5] 4.35ns
.preheader179:101  %product_term_s = fmul float %a_buf_2_load_2, %b_buf_2_load_2

ST_14: product_term_10 [1/5] 4.35ns
.preheader179:105  %product_term_10 = fmul float %a_buf_2_load_3, %b_buf_2_load_3

ST_14: product_term_13 [1/5] 4.35ns
.preheader179:117  %product_term_13 = fmul float %a_buf_3_load_2, %b_buf_3_load_2

ST_14: product_term_14 [1/5] 4.35ns
.preheader179:121  %product_term_14 = fmul float %a_buf_3_load_3, %b_buf_3_load_3


 <State 15>: 4.35ns
ST_15: result [8/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 16>: 4.35ns
ST_16: result [7/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 17>: 4.35ns
ST_17: result [6/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 18>: 4.35ns
ST_18: result [5/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 19>: 4.35ns
ST_19: result [4/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 20>: 4.35ns
ST_20: result [3/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 21>: 4.35ns
ST_21: result [2/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 22>: 4.35ns
ST_22: result [1/9] 4.35ns
.preheader179:56  %result = fadd float %product_term, 0.000000e+00


 <State 23>: 4.35ns
ST_23: result_1 [9/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 24>: 4.35ns
ST_24: result_1 [8/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 25>: 4.35ns
ST_25: result_1 [7/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 26>: 4.35ns
ST_26: result_1 [6/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 27>: 4.35ns
ST_27: result_1 [5/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 28>: 4.35ns
ST_28: result_1 [4/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 29>: 4.35ns
ST_29: result_1 [3/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 30>: 4.35ns
ST_30: result_1 [2/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 31>: 4.35ns
ST_31: result_1 [1/9] 4.35ns
.preheader179:62  %result_1 = fadd float %result, %product_term_1


 <State 32>: 4.35ns
ST_32: result_2 [9/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 33>: 4.35ns
ST_33: result_2 [8/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 34>: 4.35ns
ST_34: result_2 [7/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 35>: 4.35ns
ST_35: result_2 [6/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 36>: 4.35ns
ST_36: result_2 [5/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 37>: 4.35ns
ST_37: result_2 [4/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 38>: 4.35ns
ST_38: result_2 [3/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 39>: 4.35ns
ST_39: result_2 [2/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 40>: 4.35ns
ST_40: result_2 [1/9] 4.35ns
.preheader179:68  %result_2 = fadd float %result_1, %product_term_2


 <State 41>: 4.35ns
ST_41: result_3 [9/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 42>: 4.35ns
ST_42: result_3 [8/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 43>: 4.35ns
ST_43: result_3 [7/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 44>: 4.35ns
ST_44: result_3 [6/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 45>: 4.35ns
ST_45: result_3 [5/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 46>: 4.35ns
ST_46: result_3 [4/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 47>: 4.35ns
ST_47: result_3 [3/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 48>: 4.35ns
ST_48: result_3 [2/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 49>: 4.35ns
ST_49: result_3 [1/9] 4.35ns
.preheader179:74  %result_3 = fadd float %result_2, %product_term_3


 <State 50>: 4.35ns
ST_50: result_4 [9/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 51>: 4.35ns
ST_51: result_4 [8/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 52>: 4.35ns
ST_52: result_4 [7/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 53>: 4.35ns
ST_53: result_4 [6/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 54>: 4.35ns
ST_54: result_4 [5/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 55>: 4.35ns
ST_55: result_4 [4/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 56>: 4.35ns
ST_56: result_4 [3/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 57>: 4.35ns
ST_57: result_4 [2/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 58>: 4.35ns
ST_58: result_4 [1/9] 4.35ns
.preheader179:78  %result_4 = fadd float %result_3, %product_term_4


 <State 59>: 4.35ns
ST_59: result_5 [9/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 60>: 4.35ns
ST_60: result_5 [8/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 61>: 4.35ns
ST_61: result_5 [7/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 62>: 4.35ns
ST_62: result_5 [6/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 63>: 4.35ns
ST_63: result_5 [5/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 64>: 4.35ns
ST_64: result_5 [4/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 65>: 4.35ns
ST_65: result_5 [3/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 66>: 4.35ns
ST_66: result_5 [2/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 67>: 4.35ns
ST_67: result_5 [1/9] 4.35ns
.preheader179:82  %result_5 = fadd float %result_4, %product_term_5


 <State 68>: 4.35ns
ST_68: result_6 [9/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 69>: 4.35ns
ST_69: result_6 [8/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 70>: 4.35ns
ST_70: result_6 [7/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 71>: 4.35ns
ST_71: result_6 [6/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 72>: 4.35ns
ST_72: result_6 [5/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 73>: 4.35ns
ST_73: result_6 [4/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 74>: 4.35ns
ST_74: result_6 [3/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 75>: 4.35ns
ST_75: result_6 [2/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 76>: 4.35ns
ST_76: result_6 [1/9] 4.35ns
.preheader179:86  %result_6 = fadd float %result_5, %product_term_6


 <State 77>: 4.35ns
ST_77: result_7 [9/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 78>: 4.35ns
ST_78: result_7 [8/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 79>: 4.35ns
ST_79: result_7 [7/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 80>: 4.35ns
ST_80: result_7 [6/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 81>: 4.35ns
ST_81: result_7 [5/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 82>: 4.35ns
ST_82: result_7 [4/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 83>: 4.35ns
ST_83: result_7 [3/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 84>: 4.35ns
ST_84: result_7 [2/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 85>: 4.35ns
ST_85: result_7 [1/9] 4.35ns
.preheader179:90  %result_7 = fadd float %result_6, %product_term_7


 <State 86>: 4.35ns
ST_86: result_8 [9/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 87>: 4.35ns
ST_87: result_8 [8/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 88>: 4.35ns
ST_88: result_8 [7/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 89>: 4.35ns
ST_89: result_8 [6/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 90>: 4.35ns
ST_90: result_8 [5/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 91>: 4.35ns
ST_91: result_8 [4/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 92>: 4.35ns
ST_92: result_8 [3/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 93>: 4.35ns
ST_93: result_8 [2/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 94>: 4.35ns
ST_94: result_8 [1/9] 4.35ns
.preheader179:94  %result_8 = fadd float %result_7, %product_term_8


 <State 95>: 4.35ns
ST_95: result_9 [9/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 96>: 4.35ns
ST_96: result_9 [8/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 97>: 4.35ns
ST_97: result_9 [7/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 98>: 4.35ns
ST_98: result_9 [6/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 99>: 4.35ns
ST_99: result_9 [5/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 100>: 4.35ns
ST_100: result_9 [4/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 101>: 4.35ns
ST_101: result_9 [3/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 102>: 4.35ns
ST_102: result_9 [2/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 103>: 4.35ns
ST_103: result_9 [1/9] 4.35ns
.preheader179:98  %result_9 = fadd float %result_8, %product_term_9


 <State 104>: 4.35ns
ST_104: result_s [9/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 105>: 4.35ns
ST_105: result_s [8/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 106>: 4.35ns
ST_106: result_s [7/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 107>: 4.35ns
ST_107: result_s [6/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 108>: 4.35ns
ST_108: result_s [5/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 109>: 4.35ns
ST_109: result_s [4/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 110>: 4.35ns
ST_110: result_s [3/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 111>: 4.35ns
ST_111: result_s [2/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 112>: 4.35ns
ST_112: result_s [1/9] 4.35ns
.preheader179:102  %result_s = fadd float %result_9, %product_term_s


 <State 113>: 4.35ns
ST_113: result_10 [9/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 114>: 4.35ns
ST_114: result_10 [8/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 115>: 4.35ns
ST_115: result_10 [7/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 116>: 4.35ns
ST_116: result_10 [6/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 117>: 4.35ns
ST_117: result_10 [5/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 118>: 4.35ns
ST_118: result_10 [4/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 119>: 4.35ns
ST_119: result_10 [3/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 120>: 4.35ns
ST_120: result_10 [2/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 121>: 4.35ns
ST_121: result_10 [1/9] 4.35ns
.preheader179:106  %result_10 = fadd float %result_s, %product_term_10


 <State 122>: 4.35ns
ST_122: result_11 [9/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 123>: 4.35ns
ST_123: result_11 [8/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 124>: 4.35ns
ST_124: result_11 [7/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 125>: 4.35ns
ST_125: result_11 [6/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 126>: 4.35ns
ST_126: result_11 [5/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 127>: 4.35ns
ST_127: result_11 [4/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 128>: 4.35ns
ST_128: result_11 [3/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 129>: 4.35ns
ST_129: result_11 [2/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 130>: 4.35ns
ST_130: result_11 [1/9] 4.35ns
.preheader179:110  %result_11 = fadd float %result_10, %product_term_11


 <State 131>: 4.35ns
ST_131: result_12 [9/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 132>: 4.35ns
ST_132: result_12 [8/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 133>: 4.35ns
ST_133: result_12 [7/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 134>: 4.35ns
ST_134: result_12 [6/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 135>: 4.35ns
ST_135: result_12 [5/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 136>: 4.35ns
ST_136: result_12 [4/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 137>: 4.35ns
ST_137: result_12 [3/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 138>: 4.35ns
ST_138: result_12 [2/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 139>: 4.35ns
ST_139: result_12 [1/9] 4.35ns
.preheader179:114  %result_12 = fadd float %result_11, %product_term_12


 <State 140>: 4.35ns
ST_140: result_13 [9/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 141>: 4.35ns
ST_141: result_13 [8/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 142>: 4.35ns
ST_142: result_13 [7/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 143>: 4.35ns
ST_143: result_13 [6/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 144>: 4.35ns
ST_144: result_13 [5/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 145>: 4.35ns
ST_145: result_13 [4/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 146>: 4.35ns
ST_146: result_13 [3/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 147>: 4.35ns
ST_147: result_13 [2/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 148>: 4.35ns
ST_148: result_13 [1/9] 4.35ns
.preheader179:118  %result_13 = fadd float %result_12, %product_term_13


 <State 149>: 4.35ns
ST_149: result_14 [9/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 150>: 4.35ns
ST_150: result_14 [8/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 151>: 4.35ns
ST_151: result_14 [7/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 152>: 4.35ns
ST_152: result_14 [6/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 153>: 4.35ns
ST_153: result_14 [5/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 154>: 4.35ns
ST_154: result_14 [4/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 155>: 4.35ns
ST_155: result_14 [3/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 156>: 4.35ns
ST_156: result_14 [2/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 157>: 4.35ns
ST_157: result_14 [1/9] 4.35ns
.preheader179:122  %result_14 = fadd float %result_13, %product_term_14


 <State 158>: 1.86ns
ST_158: empty_9 [1/1] 0.00ns
.preheader179:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_158: tmp_2 [1/1] 0.00ns
.preheader179:48  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2) nounwind

ST_158: stg_601 [1/1] 0.00ns
.preheader179:49  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_158: stg_602 [1/1] 1.86ns
.preheader179:123  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %out_C, float %result_14)

ST_158: empty_10 [1/1] 0.00ns
.preheader179:124  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp_2) nounwind

ST_158: stg_604 [1/1] 0.00ns
.preheader179:126  br label %.preheader.i


 <State 159>: 0.00ns
ST_159: stg_605 [1/1] 0.00ns
mmult_kernel.exit:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
