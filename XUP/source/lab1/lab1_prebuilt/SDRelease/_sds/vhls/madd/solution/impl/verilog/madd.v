// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="madd,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.950001,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.348000,HLS_SYN_LAT=1036,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=447,HLS_SYN_LUT=456}" *)

module madd (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_dout,
        A_empty_n,
        A_read,
        B_dout,
        B_empty_n,
        B_read,
        C_din,
        C_full_n,
        C_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st14_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_dout;
input   A_empty_n;
output   A_read;
input  [31:0] B_dout;
input   B_empty_n;
output   B_read;
output  [31:0] C_din;
input   C_full_n;
output   C_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_read;
reg B_read;
reg C_write;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_21;
reg   [10:0] indvar_flatten_reg_67;
wire   [0:0] exitcond_flatten_fu_82_p2;
reg   [0:0] exitcond_flatten_reg_94;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_49;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_60;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it10;
reg    ap_sig_bdd_86;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it9;
wire   [10:0] indvar_flatten_next_fu_88_p2;
reg   [31:0] A_read_reg_103;
reg   [31:0] B_read_reg_108;
wire   [31:0] grp_fu_78_p2;
reg   [31:0] tmp_4_reg_113;
reg    grp_fu_78_ce;
reg    ap_sig_cseq_ST_st14_fsm_2;
reg    ap_sig_bdd_187;
reg   [2:0] ap_NS_fsm;


madd_fadd_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
madd_fadd_32ns_32ns_32_9_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( A_read_reg_103 ),
    .din1( B_read_reg_108 ),
    .ce( grp_fu_78_ce ),
    .dout( grp_fu_78_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & ~(exitcond_flatten_fu_82_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & (exitcond_flatten_fu_82_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & ~(exitcond_flatten_fu_82_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & (exitcond_flatten_fu_82_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_67 <= indvar_flatten_next_fu_88_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten_reg_67 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_reg_94 == ap_const_lv1_0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))))) begin
        A_read_reg_103 <= A_dout;
        B_read_reg_108 <= B_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))))) begin
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it1 <= exitcond_flatten_reg_94;
        exitcond_flatten_reg_94 <= exitcond_flatten_fu_82_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11)))) begin
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it10 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it9;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it1;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it3 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it2;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it4 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it3;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it5 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it4;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it6 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it5;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it7 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it6;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it8 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it7;
        ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it9 <= ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it8;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it9))) begin
        tmp_4_reg_113 <= grp_fu_78_p2;
    end
end

always @ (exitcond_flatten_reg_94 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_86 or ap_reg_ppiten_pp0_it11) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_reg_94 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))))) begin
        A_read = ap_const_logic_1;
    end else begin
        A_read = ap_const_logic_0;
    end
end

always @ (exitcond_flatten_reg_94 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_86 or ap_reg_ppiten_pp0_it11) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_reg_94 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))))) begin
        B_read = ap_const_logic_1;
    end else begin
        B_read = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_60 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it10 or ap_sig_bdd_86 or ap_reg_ppiten_pp0_it11) begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it10) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))))) begin
        C_write = ap_const_logic_1;
    end else begin
        C_write = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st14_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_2)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st14_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_49) begin
    if (ap_sig_bdd_49) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_187) begin
    if (ap_sig_bdd_187) begin
        ap_sig_cseq_ST_st14_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_21) begin
    if (ap_sig_bdd_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_86 or ap_reg_ppiten_pp0_it11) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))))) begin
        grp_fu_78_ce = ap_const_logic_1;
    end else begin
        grp_fu_78_ce = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond_flatten_fu_82_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it10 or ap_sig_bdd_86 or ap_reg_ppiten_pp0_it11) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it10)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & ~(exitcond_flatten_fu_82_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11))) & ~(exitcond_flatten_fu_82_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st14_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_st14_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign C_din = tmp_4_reg_113;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_187 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_21 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_49 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (A_empty_n or B_empty_n or exitcond_flatten_reg_94) begin
    ap_sig_bdd_60 = (((A_empty_n == ap_const_logic_0) & (exitcond_flatten_reg_94 == ap_const_lv1_0)) | ((exitcond_flatten_reg_94 == ap_const_lv1_0) & (B_empty_n == ap_const_logic_0)));
end


always @ (C_full_n or ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it10) begin
    ap_sig_bdd_86 = ((C_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_94_pp0_it10));
end

assign exitcond_flatten_fu_82_p2 = (indvar_flatten_reg_67 == ap_const_lv11_400? 1'b1: 1'b0);

assign indvar_flatten_next_fu_88_p2 = (indvar_flatten_reg_67 + ap_const_lv11_1);


endmodule //madd

